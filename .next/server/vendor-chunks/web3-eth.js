"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth";
exports.ids = ["vendor-chunks/web3-eth"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth/lib/getNetworkType.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-eth/lib/getNetworkType.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file getNetworkType.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar getNetworkType = function (callback) {\n    var _this = this, id;\n    return this.net.getId()\n        .then(function (givenId) {\n        id = givenId;\n        return _this.getBlock(0);\n    })\n        .then(function (genesis) {\n        var returnValue = 'private';\n        if (genesis.hash === '0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3' &&\n            id === 1) {\n            returnValue = 'main';\n        }\n        if (genesis.hash === '0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d' &&\n            id === 3) {\n            returnValue = 'ropsten';\n        }\n        if (genesis.hash === '0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177' &&\n            id === 4) {\n            returnValue = 'rinkeby';\n        }\n        if (genesis.hash === '0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a' &&\n            id === 5) {\n            returnValue = 'goerli';\n        }\n        if (genesis.hash === '0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9' &&\n            id === 42) {\n            returnValue = 'kovan';\n        }\n        if (typeof callback === 'function') {\n            callback(null, returnValue);\n        }\n        return returnValue;\n    })\n        .catch(function (err) {\n        if (typeof callback === 'function') {\n            callback(err);\n        }\n        else {\n            throw err;\n        }\n    });\n};\nmodule.exports = getNetworkType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgvbGliL2dldE5ldHdvcmtUeXBlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy93ZWIzLWV0aC9saWIvZ2V0TmV0d29ya1R5cGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiBUaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG4gd2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG4gd2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG4gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICovXG4vKipcbiAqIEBmaWxlIGdldE5ldHdvcmtUeXBlLmpzXG4gKiBAYXV0aG9yIEZhYmlhbiBWb2dlbHN0ZWxsZXIgPGZhYmlhbkBldGhlcmV1bS5vcmc+XG4gKiBAZGF0ZSAyMDE3XG4gKi9cblwidXNlIHN0cmljdFwiO1xudmFyIGdldE5ldHdvcmtUeXBlID0gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcywgaWQ7XG4gICAgcmV0dXJuIHRoaXMubmV0LmdldElkKClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGdpdmVuSWQpIHtcbiAgICAgICAgaWQgPSBnaXZlbklkO1xuICAgICAgICByZXR1cm4gX3RoaXMuZ2V0QmxvY2soMCk7XG4gICAgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGdlbmVzaXMpIHtcbiAgICAgICAgdmFyIHJldHVyblZhbHVlID0gJ3ByaXZhdGUnO1xuICAgICAgICBpZiAoZ2VuZXNpcy5oYXNoID09PSAnMHhkNGU1Njc0MGY4NzZhZWY4YzAxMGI4NmE0MGQ1ZjU2NzQ1YTExOGQwOTA2YTM0ZTY5YWVjOGMwZGIxY2I4ZmEzJyAmJlxuICAgICAgICAgICAgaWQgPT09IDEpIHtcbiAgICAgICAgICAgIHJldHVyblZhbHVlID0gJ21haW4nO1xuICAgICAgICB9XG4gICAgICAgIGlmIChnZW5lc2lzLmhhc2ggPT09ICcweDQxOTQxMDIzNjgwOTIzZTBmZTRkNzRhMzRiZGFjODE0MWYyNTQwZTNhZTkwNjIzNzE4ZTQ3ZDY2ZDFjYTRhMmQnICYmXG4gICAgICAgICAgICBpZCA9PT0gMykge1xuICAgICAgICAgICAgcmV0dXJuVmFsdWUgPSAncm9wc3Rlbic7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGdlbmVzaXMuaGFzaCA9PT0gJzB4NjM0MWZkM2RhZjk0Yjc0OGM3MmNlZDVhNWIyNjAyOGYyNDc0ZjVmMDBkODI0NTA0ZTRmYTM3YTc1NzY3ZTE3NycgJiZcbiAgICAgICAgICAgIGlkID09PSA0KSB7XG4gICAgICAgICAgICByZXR1cm5WYWx1ZSA9ICdyaW5rZWJ5JztcbiAgICAgICAgfVxuICAgICAgICBpZiAoZ2VuZXNpcy5oYXNoID09PSAnMHhiZjdlMzMxZjdmN2MxZGQyZTA1MTU5NjY2YjNiZjhiYzdhOGEzYTllYjFkNTE4OTY5ZWFiNTI5ZGQ5Yjg4YzFhJyAmJlxuICAgICAgICAgICAgaWQgPT09IDUpIHtcbiAgICAgICAgICAgIHJldHVyblZhbHVlID0gJ2dvZXJsaSc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGdlbmVzaXMuaGFzaCA9PT0gJzB4YTNjNTY1ZmMxNWM3NDc4ODYyZDUwY2NkNjU2MWUzYzA2YjI0Y2M1MDliZjM4ODk0MWMyNWVhOTg1Y2UzMmNiOScgJiZcbiAgICAgICAgICAgIGlkID09PSA0Mikge1xuICAgICAgICAgICAgcmV0dXJuVmFsdWUgPSAna292YW4nO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHJldHVyblZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV0dXJuVmFsdWU7XG4gICAgfSlcbiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgIH0pO1xufTtcbm1vZHVsZS5leHBvcnRzID0gZ2V0TmV0d29ya1R5cGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/getNetworkType.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth/lib/index.js":
/*!********************************************!*\
  !*** ./node_modules/web3-eth/lib/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nvar core = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/index.js\");\nvar helpers = __webpack_require__(/*! web3-core-helpers */ \"(ssr)/./node_modules/web3-core-helpers/lib/index.js\");\nvar Subscriptions = (__webpack_require__(/*! web3-core-subscriptions */ \"(ssr)/./node_modules/web3-core-subscriptions/lib/index.js\").subscriptions);\nvar Method = __webpack_require__(/*! web3-core-method */ \"(ssr)/./node_modules/web3-core-method/lib/index.js\");\nvar utils = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/index.js\");\nvar Net = __webpack_require__(/*! web3-net */ \"(ssr)/./node_modules/web3-net/lib/index.js\");\nvar ENS = __webpack_require__(/*! web3-eth-ens */ \"(ssr)/./node_modules/web3-eth-ens/lib/index.js\");\nvar Personal = __webpack_require__(/*! web3-eth-personal */ \"(ssr)/./node_modules/web3-eth-personal/lib/index.js\");\nvar BaseContract = __webpack_require__(/*! web3-eth-contract */ \"(ssr)/./node_modules/web3-eth-contract/lib/index.js\");\nvar Iban = __webpack_require__(/*! web3-eth-iban */ \"(ssr)/./node_modules/web3-eth-iban/lib/index.js\");\nvar Accounts = __webpack_require__(/*! web3-eth-accounts */ \"(ssr)/./node_modules/web3-eth-accounts/lib/index.js\");\nvar abi = __webpack_require__(/*! web3-eth-abi */ \"(ssr)/./node_modules/web3-eth-abi/lib/index.js\");\nvar getNetworkType = __webpack_require__(/*! ./getNetworkType.js */ \"(ssr)/./node_modules/web3-eth/lib/getNetworkType.js\");\nvar formatter = helpers.formatters;\nvar blockCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\nvar transactionFromBlockCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\nvar uncleCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\nvar getBlockTransactionCountCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\nvar uncleCountCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\nvar Eth = function Eth() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // overwrite package setRequestManager\n    var setRequestManager = this.setRequestManager;\n    this.setRequestManager = function (manager) {\n        setRequestManager(manager);\n        _this.net.setRequestManager(manager);\n        _this.personal.setRequestManager(manager);\n        _this.accounts.setRequestManager(manager);\n        _this.Contract._requestManager = _this._requestManager;\n        _this.Contract.currentProvider = _this._provider;\n        return true;\n    };\n    // overwrite setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function () {\n        setProvider.apply(_this, arguments);\n        _this.setRequestManager(_this._requestManager);\n        // Set detectedAddress/lastSyncCheck back to null because the provider could be connected to a different chain now\n        _this.ens._detectedAddress = null;\n        _this.ens._lastSyncCheck = null;\n    };\n    var handleRevert = false;\n    var defaultAccount = null;\n    var defaultBlock = 'latest';\n    var transactionBlockTimeout = 50;\n    var transactionConfirmationBlocks = 24;\n    var transactionPollingTimeout = 750;\n    var transactionPollingInterval = 1000;\n    var blockHeaderTimeout = 10; // 10 seconds\n    var maxListenersWarningThreshold = 100;\n    var defaultChain, defaultHardfork, defaultCommon;\n    Object.defineProperty(this, 'handleRevert', {\n        get: function () {\n            return handleRevert;\n        },\n        set: function (val) {\n            handleRevert = val;\n            // also set on the Contract object\n            _this.Contract.handleRevert = handleRevert;\n            // update handleRevert\n            methods.forEach(function (method) {\n                method.handleRevert = handleRevert;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultCommon', {\n        get: function () {\n            return defaultCommon;\n        },\n        set: function (val) {\n            defaultCommon = val;\n            // also set on the Contract object\n            _this.Contract.defaultCommon = defaultCommon;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultCommon = defaultCommon;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultHardfork', {\n        get: function () {\n            return defaultHardfork;\n        },\n        set: function (val) {\n            defaultHardfork = val;\n            // also set on the Contract object\n            _this.Contract.defaultHardfork = defaultHardfork;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultHardfork = defaultHardfork;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultChain', {\n        get: function () {\n            return defaultChain;\n        },\n        set: function (val) {\n            defaultChain = val;\n            // also set on the Contract object\n            _this.Contract.defaultChain = defaultChain;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultChain = defaultChain;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingTimeout', {\n        get: function () {\n            return transactionPollingTimeout;\n        },\n        set: function (val) {\n            transactionPollingTimeout = val;\n            // also set on the Contract object\n            _this.Contract.transactionPollingTimeout = transactionPollingTimeout;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionPollingTimeout = transactionPollingTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingInterval', {\n        get: function () {\n            return transactionPollingInterval;\n        },\n        set: function (val) {\n            transactionPollingInterval = val;\n            // also set on the Contract object\n            _this.Contract.transactionPollingInterval = transactionPollingInterval;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionPollingInterval = transactionPollingInterval;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionConfirmationBlocks', {\n        get: function () {\n            return transactionConfirmationBlocks;\n        },\n        set: function (val) {\n            transactionConfirmationBlocks = val;\n            // also set on the Contract object\n            _this.Contract.transactionConfirmationBlocks = transactionConfirmationBlocks;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionConfirmationBlocks = transactionConfirmationBlocks;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionBlockTimeout', {\n        get: function () {\n            return transactionBlockTimeout;\n        },\n        set: function (val) {\n            transactionBlockTimeout = val;\n            // also set on the Contract object\n            _this.Contract.transactionBlockTimeout = transactionBlockTimeout;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionBlockTimeout = transactionBlockTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'blockHeaderTimeout', {\n        get: function () {\n            return blockHeaderTimeout;\n        },\n        set: function (val) {\n            blockHeaderTimeout = val;\n            // also set on the Contract object\n            _this.Contract.blockHeaderTimeout = blockHeaderTimeout;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.blockHeaderTimeout = blockHeaderTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\n            }\n            // also set on the Contract object\n            _this.Contract.defaultAccount = defaultAccount;\n            _this.personal.defaultAccount = defaultAccount;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultAccount = defaultAccount;\n            });\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n            // also set on the Contract object\n            _this.Contract.defaultBlock = defaultBlock;\n            _this.personal.defaultBlock = defaultBlock;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultBlock = defaultBlock;\n            });\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'maxListenersWarningThreshold', {\n        get: function () {\n            return maxListenersWarningThreshold;\n        },\n        set: function (val) {\n            if (_this.currentProvider && _this.currentProvider.setMaxListeners) {\n                maxListenersWarningThreshold = val;\n                _this.currentProvider.setMaxListeners(val);\n            }\n        },\n        enumerable: true\n    });\n    this.clearSubscriptions = _this._requestManager.clearSubscriptions.bind(_this._requestManager);\n    this.removeSubscriptionById = _this._requestManager.removeSubscription.bind(_this._requestManager);\n    // add net\n    this.net = new Net(this);\n    // add chain detection\n    this.net.getNetworkType = getNetworkType.bind(this);\n    // add accounts\n    this.accounts = new Accounts(this);\n    // add personal\n    this.personal = new Personal(this);\n    this.personal.defaultAccount = this.defaultAccount;\n    // set warnings threshold\n    this.maxListenersWarningThreshold = maxListenersWarningThreshold;\n    // create a proxy Contract type for this instance, as a Contract's provider\n    // is stored as a class member rather than an instance variable. If we do\n    // not create this proxy type, changing the provider in one instance of\n    // web3-eth would subsequently change the provider for _all_ contract\n    // instances!\n    var self = this;\n    var Contract = function Contract() {\n        BaseContract.apply(this, arguments);\n        // when Eth.setProvider is called, call packageInit\n        // on all contract instances instantiated via this Eth\n        // instances. This will update the currentProvider for\n        // the contract instances\n        var _this = this;\n        var setProvider = self.setProvider;\n        self.setProvider = function () {\n            setProvider.apply(self, arguments);\n            core.packageInit(_this, [self]);\n        };\n    };\n    Contract.setProvider = function () {\n        BaseContract.setProvider.apply(this, arguments);\n    };\n    // make our proxy Contract inherit from web3-eth-contract so that it has all\n    // the right functionality and so that instanceof and friends work properly\n    Contract.prototype = Object.create(BaseContract.prototype);\n    Contract.prototype.constructor = Contract;\n    // add contract\n    this.Contract = Contract;\n    this.Contract.defaultAccount = this.defaultAccount;\n    this.Contract.defaultBlock = this.defaultBlock;\n    this.Contract.transactionBlockTimeout = this.transactionBlockTimeout;\n    this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks;\n    this.Contract.transactionPollingTimeout = this.transactionPollingTimeout;\n    this.Contract.transactionPollingInterval = this.transactionPollingInterval;\n    this.Contract.blockHeaderTimeout = this.blockHeaderTimeout;\n    this.Contract.handleRevert = this.handleRevert;\n    this.Contract._requestManager = this._requestManager;\n    this.Contract._ethAccounts = this.accounts;\n    this.Contract.currentProvider = this._requestManager.provider;\n    // add IBAN\n    this.Iban = Iban;\n    // add ABI\n    this.abi = abi;\n    // add ENS\n    this.ens = new ENS(this);\n    var methods = [\n        new Method({\n            name: 'getNodeInfo',\n            call: 'web3_clientVersion'\n        }),\n        new Method({\n            name: 'getProtocolVersion',\n            call: 'eth_protocolVersion',\n            params: 0\n        }),\n        new Method({\n            name: 'getCoinbase',\n            call: 'eth_coinbase',\n            params: 0\n        }),\n        new Method({\n            name: 'isMining',\n            call: 'eth_mining',\n            params: 0\n        }),\n        new Method({\n            name: 'getHashrate',\n            call: 'eth_hashrate',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'isSyncing',\n            call: 'eth_syncing',\n            params: 0,\n            outputFormatter: formatter.outputSyncingFormatter\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0,\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getFeeHistory',\n            call: 'eth_feeHistory',\n            params: 3,\n            inputFormatter: [utils.numberToHex, formatter.inputBlockNumberFormatter, null]\n        }),\n        new Method({\n            name: 'getAccounts',\n            call: 'eth_accounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getBlockNumber',\n            call: 'eth_blockNumber',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBalance',\n            call: 'eth_getBalance',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getStorageAt',\n            call: 'eth_getStorageAt',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getCode',\n            call: 'eth_getCode',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getBlock',\n            call: blockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, function (val) { return !!val; }],\n            outputFormatter: formatter.outputBlockFormatter\n        }),\n        new Method({\n            name: 'getUncle',\n            call: uncleCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputBlockFormatter,\n        }),\n        new Method({\n            name: 'getBlockTransactionCount',\n            call: getBlockTransactionCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBlockUncleCount',\n            call: uncleCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getTransaction',\n            call: 'eth_getTransactionByHash',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionFromBlock',\n            call: transactionFromBlockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionReceipt',\n            call: 'eth_getTransactionReceipt',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionReceiptFormatter\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'sendSignedTransaction',\n            call: 'eth_sendRawTransaction',\n            params: 1,\n            inputFormatter: [null],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'signTransaction',\n            call: 'eth_signTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter]\n        }),\n        new Method({\n            name: 'sendTransaction',\n            call: 'eth_sendTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'sign',\n            call: 'eth_sign',\n            params: 2,\n            inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\n            transformPayload: function (payload) {\n                payload.params.reverse();\n                return payload;\n            }\n        }),\n        new Method({\n            name: 'call',\n            call: 'eth_call',\n            params: 2,\n            inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'estimateGas',\n            call: 'eth_estimateGas',\n            params: 1,\n            inputFormatter: [formatter.inputCallFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'submitWork',\n            call: 'eth_submitWork',\n            params: 3\n        }),\n        new Method({\n            name: 'getWork',\n            call: 'eth_getWork',\n            params: 0\n        }),\n        new Method({\n            name: 'getPastLogs',\n            call: 'eth_getLogs',\n            params: 1,\n            inputFormatter: [formatter.inputLogFormatter],\n            outputFormatter: formatter.outputLogFormatter\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'requestAccounts',\n            call: 'eth_requestAccounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getProof',\n            call: 'eth_getProof',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputStorageKeysFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputProofFormatter\n        }),\n        new Method({\n            name: 'getPendingTransactions',\n            call: 'eth_pendingTransactions',\n            params: 0,\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'createAccessList',\n            call: 'eth_createAccessList',\n            params: 2,\n            inputFormatter: [formatter.inputTransactionFormatter, formatter.inputDefaultBlockNumberFormatter],\n        }),\n        // subscriptions\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'eth',\n            subscriptions: {\n                'newBlockHeaders': {\n                    // TODO rename on RPC side?\n                    subscriptionName: 'newHeads',\n                    params: 0,\n                    outputFormatter: formatter.outputBlockFormatter\n                },\n                'pendingTransactions': {\n                    subscriptionName: 'newPendingTransactions',\n                    params: 0\n                },\n                'logs': {\n                    params: 1,\n                    inputFormatter: [formatter.inputLogFormatter],\n                    outputFormatter: formatter.outputLogFormatter,\n                    // DUBLICATE, also in web3-eth-contract\n                    subscriptionHandler: function (output) {\n                        if (output.removed) {\n                            this.emit('changed', output);\n                        }\n                        else {\n                            this.emit('data', output);\n                        }\n                        if (typeof this.callback === 'function') {\n                            this.callback(null, output, this);\n                        }\n                    }\n                },\n                'syncing': {\n                    params: 0,\n                    outputFormatter: formatter.outputSyncingFormatter,\n                    subscriptionHandler: function (output) {\n                        var _this = this;\n                        // fire TRUE at start\n                        if (this._isSyncing !== true) {\n                            this._isSyncing = true;\n                            this.emit('changed', _this._isSyncing);\n                            if (typeof this.callback === 'function') {\n                                this.callback(null, _this._isSyncing, this);\n                            }\n                            setTimeout(function () {\n                                _this.emit('data', output);\n                                if (typeof _this.callback === 'function') {\n                                    _this.callback(null, output, _this);\n                                }\n                            }, 0);\n                            // fire sync status\n                        }\n                        else {\n                            this.emit('data', output);\n                            if (typeof _this.callback === 'function') {\n                                this.callback(null, output, this);\n                            }\n                            // wait for some time before fireing the FALSE\n                            clearTimeout(this._isSyncingTimeout);\n                            this._isSyncingTimeout = setTimeout(function () {\n                                if (output.currentBlock > output.highestBlock - 200) {\n                                    _this._isSyncing = false;\n                                    _this.emit('changed', _this._isSyncing);\n                                    if (typeof _this.callback === 'function') {\n                                        _this.callback(null, _this._isSyncing, _this);\n                                    }\n                                }\n                            }, 500);\n                        }\n                    }\n                }\n            }\n        })\n    ];\n    methods.forEach(function (method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager, _this.accounts); // second param is the eth.accounts module (necessary for signing transactions locally)\n        method.defaultBlock = _this.defaultBlock;\n        method.defaultAccount = _this.defaultAccount;\n        method.transactionBlockTimeout = _this.transactionBlockTimeout;\n        method.transactionConfirmationBlocks = _this.transactionConfirmationBlocks;\n        method.transactionPollingTimeout = _this.transactionPollingTimeout;\n        method.transactionPollingInterval = _this.transactionPollingInterval;\n        method.handleRevert = _this.handleRevert;\n    });\n};\n// Adds the static givenProvider and providers property to the Eth module\ncore.addProviders(Eth);\nmodule.exports = Eth;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth/lib/index.js\n");

/***/ })

};
;