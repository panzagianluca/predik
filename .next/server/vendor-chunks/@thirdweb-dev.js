"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@thirdweb-dev";
exports.ids = ["vendor-chunks/@thirdweb-dev"];
exports.modules = {

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client.gen.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/client.gen.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This file is auto-generated by @hey-api/openapi-ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.client = void 0;\nconst index_js_1 = __webpack_require__(/*! ./client/index.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/index.js\");\nexports.client = (0, index_js_1.createClient)((0, index_js_1.createConfig)({\n    baseUrl: \"https://engine.thirdweb.com\",\n}));\n//# sourceMappingURL=client.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NsaWVudC5nZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2QsbUJBQW1CLG1CQUFPLENBQUMsb0dBQW1CO0FBQzlDLGNBQWM7QUFDZDtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NsaWVudC5nZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBUaGlzIGZpbGUgaXMgYXV0by1nZW5lcmF0ZWQgYnkgQGhleS1hcGkvb3BlbmFwaS10c1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jbGllbnQgPSB2b2lkIDA7XG5jb25zdCBpbmRleF9qc18xID0gcmVxdWlyZShcIi4vY2xpZW50L2luZGV4LmpzXCIpO1xuZXhwb3J0cy5jbGllbnQgPSAoMCwgaW5kZXhfanNfMS5jcmVhdGVDbGllbnQpKCgwLCBpbmRleF9qc18xLmNyZWF0ZUNvbmZpZykoe1xuICAgIGJhc2VVcmw6IFwiaHR0cHM6Ly9lbmdpbmUudGhpcmR3ZWIuY29tXCIsXG59KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnQuZ2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client.gen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/client.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/client.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createClient = void 0;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/utils.js\");\nconst createClient = (config = {}) => {\n    let _config = (0, utils_js_1.mergeConfigs)((0, utils_js_1.createConfig)(), config);\n    const getConfig = () => ({ ..._config });\n    const setConfig = (config) => {\n        _config = (0, utils_js_1.mergeConfigs)(_config, config);\n        return getConfig();\n    };\n    const interceptors = (0, utils_js_1.createInterceptors)();\n    const request = async (options) => {\n        const opts = {\n            ..._config,\n            ...options,\n            fetch: options.fetch ?? _config.fetch ?? globalThis.fetch,\n            headers: (0, utils_js_1.mergeHeaders)(_config.headers, options.headers),\n        };\n        if (opts.security) {\n            await (0, utils_js_1.setAuthParams)({\n                ...opts,\n                security: opts.security,\n            });\n        }\n        if (opts.body && opts.bodySerializer) {\n            opts.body = opts.bodySerializer(opts.body);\n        }\n        // remove Content-Type header if body is empty to avoid sending invalid requests\n        if (opts.body === undefined || opts.body === \"\") {\n            opts.headers.delete(\"Content-Type\");\n        }\n        const url = (0, utils_js_1.buildUrl)(opts);\n        const requestInit = {\n            redirect: \"follow\",\n            ...opts,\n        };\n        let request = new Request(url, requestInit);\n        for (const fn of interceptors.request._fns) {\n            if (fn) {\n                request = await fn(request, opts);\n            }\n        }\n        // fetch must be assigned here, otherwise it would throw the error:\n        // TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation\n        const _fetch = opts.fetch;\n        let response = await _fetch(request);\n        for (const fn of interceptors.response._fns) {\n            if (fn) {\n                response = await fn(response, request, opts);\n            }\n        }\n        const result = {\n            request,\n            response,\n        };\n        if (response.ok) {\n            if (response.status === 204 ||\n                response.headers.get(\"Content-Length\") === \"0\") {\n                return opts.responseStyle === \"data\"\n                    ? {}\n                    : {\n                        data: {},\n                        ...result,\n                    };\n            }\n            const parseAs = (opts.parseAs === \"auto\"\n                ? (0, utils_js_1.getParseAs)(response.headers.get(\"Content-Type\"))\n                : opts.parseAs) ?? \"json\";\n            let data;\n            switch (parseAs) {\n                case \"arrayBuffer\":\n                case \"blob\":\n                case \"formData\":\n                case \"json\":\n                case \"text\":\n                    data = await response[parseAs]();\n                    break;\n                case \"stream\":\n                    return opts.responseStyle === \"data\"\n                        ? response.body\n                        : {\n                            data: response.body,\n                            ...result,\n                        };\n            }\n            if (parseAs === \"json\") {\n                if (opts.responseValidator) {\n                    await opts.responseValidator(data);\n                }\n                if (opts.responseTransformer) {\n                    data = await opts.responseTransformer(data);\n                }\n            }\n            return opts.responseStyle === \"data\"\n                ? data\n                : {\n                    data,\n                    ...result,\n                };\n        }\n        let error = await response.text();\n        try {\n            error = JSON.parse(error);\n        }\n        catch {\n            // noop\n        }\n        let finalError = error;\n        for (const fn of interceptors.error._fns) {\n            if (fn) {\n                finalError = (await fn(error, response, request, opts));\n            }\n        }\n        finalError = finalError || {};\n        if (opts.throwOnError) {\n            throw finalError;\n        }\n        // TODO: we probably want to return error and improve types\n        return opts.responseStyle === \"data\"\n            ? undefined\n            : {\n                error: finalError,\n                ...result,\n            };\n    };\n    return {\n        buildUrl: utils_js_1.buildUrl,\n        connect: (options) => request({ ...options, method: \"CONNECT\" }),\n        delete: (options) => request({ ...options, method: \"DELETE\" }),\n        get: (options) => request({ ...options, method: \"GET\" }),\n        getConfig,\n        head: (options) => request({ ...options, method: \"HEAD\" }),\n        interceptors,\n        options: (options) => request({ ...options, method: \"OPTIONS\" }),\n        patch: (options) => request({ ...options, method: \"PATCH\" }),\n        post: (options) => request({ ...options, method: \"POST\" }),\n        put: (options) => request({ ...options, method: \"PUT\" }),\n        request,\n        setConfig,\n        trace: (options) => request({ ...options, method: \"TRACE\" }),\n    };\n};\nexports.createClient = createClient;\n//# sourceMappingURL=client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeHeaders = exports.createConfig = exports.createClient = exports.buildClientParams = exports.urlSearchParamsBodySerializer = exports.jsonBodySerializer = exports.formDataBodySerializer = void 0;\nvar bodySerializer_js_1 = __webpack_require__(/*! ../core/bodySerializer.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/bodySerializer.js\");\nObject.defineProperty(exports, \"formDataBodySerializer\", ({ enumerable: true, get: function () { return bodySerializer_js_1.formDataBodySerializer; } }));\nObject.defineProperty(exports, \"jsonBodySerializer\", ({ enumerable: true, get: function () { return bodySerializer_js_1.jsonBodySerializer; } }));\nObject.defineProperty(exports, \"urlSearchParamsBodySerializer\", ({ enumerable: true, get: function () { return bodySerializer_js_1.urlSearchParamsBodySerializer; } }));\nvar params_js_1 = __webpack_require__(/*! ../core/params.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/params.js\");\nObject.defineProperty(exports, \"buildClientParams\", ({ enumerable: true, get: function () { return params_js_1.buildClientParams; } }));\nvar client_js_1 = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/client.js\");\nObject.defineProperty(exports, \"createClient\", ({ enumerable: true, get: function () { return client_js_1.createClient; } }));\nvar utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/utils.js\");\nObject.defineProperty(exports, \"createConfig\", ({ enumerable: true, get: function () { return utils_js_1.createConfig; } }));\nObject.defineProperty(exports, \"mergeHeaders\", ({ enumerable: true, get: function () { return utils_js_1.mergeHeaders; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NsaWVudC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyxvQkFBb0IsR0FBRyxvQkFBb0IsR0FBRyx5QkFBeUIsR0FBRyxxQ0FBcUMsR0FBRywwQkFBMEIsR0FBRyw4QkFBOEI7QUFDcE0sMEJBQTBCLG1CQUFPLENBQUMsbUhBQTJCO0FBQzdELDBEQUF5RCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUN2SixzREFBcUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDL0ksaUVBQWdFLEVBQUUscUNBQXFDLDZEQUE2RCxFQUFDO0FBQ3JLLGtCQUFrQixtQkFBTyxDQUFDLG1HQUFtQjtBQUM3QyxxREFBb0QsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDckksa0JBQWtCLG1CQUFPLENBQUMsK0ZBQWE7QUFDdkMsZ0RBQStDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzNILGlCQUFpQixtQkFBTyxDQUFDLDZGQUFZO0FBQ3JDLGdEQUErQyxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUMxSCxnREFBK0MsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUM7QUFDMUgiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvZW5naW5lL2Rpc3QvY2pzL2NsaWVudC9jbGllbnQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1lcmdlSGVhZGVycyA9IGV4cG9ydHMuY3JlYXRlQ29uZmlnID0gZXhwb3J0cy5jcmVhdGVDbGllbnQgPSBleHBvcnRzLmJ1aWxkQ2xpZW50UGFyYW1zID0gZXhwb3J0cy51cmxTZWFyY2hQYXJhbXNCb2R5U2VyaWFsaXplciA9IGV4cG9ydHMuanNvbkJvZHlTZXJpYWxpemVyID0gZXhwb3J0cy5mb3JtRGF0YUJvZHlTZXJpYWxpemVyID0gdm9pZCAwO1xudmFyIGJvZHlTZXJpYWxpemVyX2pzXzEgPSByZXF1aXJlKFwiLi4vY29yZS9ib2R5U2VyaWFsaXplci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1EYXRhQm9keVNlcmlhbGl6ZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJvZHlTZXJpYWxpemVyX2pzXzEuZm9ybURhdGFCb2R5U2VyaWFsaXplcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImpzb25Cb2R5U2VyaWFsaXplclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYm9keVNlcmlhbGl6ZXJfanNfMS5qc29uQm9keVNlcmlhbGl6ZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ1cmxTZWFyY2hQYXJhbXNCb2R5U2VyaWFsaXplclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYm9keVNlcmlhbGl6ZXJfanNfMS51cmxTZWFyY2hQYXJhbXNCb2R5U2VyaWFsaXplcjsgfSB9KTtcbnZhciBwYXJhbXNfanNfMSA9IHJlcXVpcmUoXCIuLi9jb3JlL3BhcmFtcy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImJ1aWxkQ2xpZW50UGFyYW1zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwYXJhbXNfanNfMS5idWlsZENsaWVudFBhcmFtczsgfSB9KTtcbnZhciBjbGllbnRfanNfMSA9IHJlcXVpcmUoXCIuL2NsaWVudC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZUNsaWVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY2xpZW50X2pzXzEuY3JlYXRlQ2xpZW50OyB9IH0pO1xudmFyIHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZUNvbmZpZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfanNfMS5jcmVhdGVDb25maWc7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtZXJnZUhlYWRlcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzX2pzXzEubWVyZ2VIZWFkZXJzOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/utils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createConfig = exports.createInterceptors = exports.mergeHeaders = exports.mergeConfigs = exports.getUrl = exports.buildUrl = exports.setAuthParams = exports.getParseAs = exports.createQuerySerializer = void 0;\nconst auth_js_1 = __webpack_require__(/*! ../core/auth.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/auth.js\");\nconst bodySerializer_js_1 = __webpack_require__(/*! ../core/bodySerializer.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/bodySerializer.js\");\nconst pathSerializer_js_1 = __webpack_require__(/*! ../core/pathSerializer.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/pathSerializer.js\");\nconst PATH_PARAM_RE = /\\{[^{}]+\\}/g;\nconst defaultPathSerializer = ({ path, url: _url }) => {\n    let url = _url;\n    const matches = _url.match(PATH_PARAM_RE);\n    if (matches) {\n        for (const match of matches) {\n            let explode = false;\n            let name = match.substring(1, match.length - 1);\n            let style = \"simple\";\n            if (name.endsWith(\"*\")) {\n                explode = true;\n                name = name.substring(0, name.length - 1);\n            }\n            if (name.startsWith(\".\")) {\n                name = name.substring(1);\n                style = \"label\";\n            }\n            else if (name.startsWith(\";\")) {\n                name = name.substring(1);\n                style = \"matrix\";\n            }\n            const value = path[name];\n            if (value === undefined || value === null) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                url = url.replace(match, (0, pathSerializer_js_1.serializeArrayParam)({ explode, name, style, value }));\n                continue;\n            }\n            if (typeof value === \"object\") {\n                url = url.replace(match, (0, pathSerializer_js_1.serializeObjectParam)({\n                    explode,\n                    name,\n                    style,\n                    value: value,\n                    valueOnly: true,\n                }));\n                continue;\n            }\n            if (style === \"matrix\") {\n                url = url.replace(match, `;${(0, pathSerializer_js_1.serializePrimitiveParam)({\n                    name,\n                    value: value,\n                })}`);\n                continue;\n            }\n            const replaceValue = encodeURIComponent(style === \"label\" ? `.${value}` : value);\n            url = url.replace(match, replaceValue);\n        }\n    }\n    return url;\n};\nconst createQuerySerializer = ({ allowReserved, array, object, } = {}) => {\n    const querySerializer = (queryParams) => {\n        const search = [];\n        if (queryParams && typeof queryParams === \"object\") {\n            for (const name in queryParams) {\n                const value = queryParams[name];\n                if (value === undefined || value === null) {\n                    continue;\n                }\n                if (Array.isArray(value)) {\n                    const serializedArray = (0, pathSerializer_js_1.serializeArrayParam)({\n                        allowReserved,\n                        explode: true,\n                        name,\n                        style: \"form\",\n                        value,\n                        ...array,\n                    });\n                    if (serializedArray)\n                        search.push(serializedArray);\n                }\n                else if (typeof value === \"object\") {\n                    const serializedObject = (0, pathSerializer_js_1.serializeObjectParam)({\n                        allowReserved,\n                        explode: true,\n                        name,\n                        style: \"deepObject\",\n                        value: value,\n                        ...object,\n                    });\n                    if (serializedObject)\n                        search.push(serializedObject);\n                }\n                else {\n                    const serializedPrimitive = (0, pathSerializer_js_1.serializePrimitiveParam)({\n                        allowReserved,\n                        name,\n                        value: value,\n                    });\n                    if (serializedPrimitive)\n                        search.push(serializedPrimitive);\n                }\n            }\n        }\n        return search.join(\"&\");\n    };\n    return querySerializer;\n};\nexports.createQuerySerializer = createQuerySerializer;\n/**\n * Infers parseAs value from provided Content-Type header.\n */\nconst getParseAs = (contentType) => {\n    if (!contentType) {\n        // If no Content-Type header is provided, the best we can do is return the raw response body,\n        // which is effectively the same as the 'stream' option.\n        return \"stream\";\n    }\n    const cleanContent = contentType.split(\";\")[0]?.trim();\n    if (!cleanContent) {\n        return;\n    }\n    if (cleanContent.startsWith(\"application/json\") ||\n        cleanContent.endsWith(\"+json\")) {\n        return \"json\";\n    }\n    if (cleanContent === \"multipart/form-data\") {\n        return \"formData\";\n    }\n    if ([\"application/\", \"audio/\", \"image/\", \"video/\"].some((type) => cleanContent.startsWith(type))) {\n        return \"blob\";\n    }\n    if (cleanContent.startsWith(\"text/\")) {\n        return \"text\";\n    }\n    return;\n};\nexports.getParseAs = getParseAs;\nconst setAuthParams = async ({ security, ...options }) => {\n    for (const auth of security) {\n        const token = await (0, auth_js_1.getAuthToken)(auth, options.auth);\n        if (!token) {\n            continue;\n        }\n        const name = auth.name ?? \"Authorization\";\n        switch (auth.in) {\n            case \"query\":\n                if (!options.query) {\n                    options.query = {};\n                }\n                options.query[name] = token;\n                break;\n            case \"cookie\":\n                options.headers.append(\"Cookie\", `${name}=${token}`);\n                break;\n            case \"header\":\n            default:\n                options.headers.set(name, token);\n                break;\n        }\n        return;\n    }\n};\nexports.setAuthParams = setAuthParams;\nconst buildUrl = (options) => {\n    const url = (0, exports.getUrl)({\n        baseUrl: options.baseUrl,\n        path: options.path,\n        query: options.query,\n        querySerializer: typeof options.querySerializer === \"function\"\n            ? options.querySerializer\n            : (0, exports.createQuerySerializer)(options.querySerializer),\n        url: options.url,\n    });\n    return url;\n};\nexports.buildUrl = buildUrl;\nconst getUrl = ({ baseUrl, path, query, querySerializer, url: _url, }) => {\n    const pathUrl = _url.startsWith(\"/\") ? _url : `/${_url}`;\n    let url = (baseUrl ?? \"\") + pathUrl;\n    if (path) {\n        url = defaultPathSerializer({ path, url });\n    }\n    let search = query ? querySerializer(query) : \"\";\n    if (search.startsWith(\"?\")) {\n        search = search.substring(1);\n    }\n    if (search) {\n        url += `?${search}`;\n    }\n    return url;\n};\nexports.getUrl = getUrl;\nconst mergeConfigs = (a, b) => {\n    const config = { ...a, ...b };\n    if (config.baseUrl?.endsWith(\"/\")) {\n        config.baseUrl = config.baseUrl.substring(0, config.baseUrl.length - 1);\n    }\n    config.headers = (0, exports.mergeHeaders)(a.headers, b.headers);\n    return config;\n};\nexports.mergeConfigs = mergeConfigs;\nconst mergeHeaders = (...headers) => {\n    const mergedHeaders = new Headers();\n    for (const header of headers) {\n        if (!header || typeof header !== \"object\") {\n            continue;\n        }\n        const iterator = header instanceof Headers ? header.entries() : Object.entries(header);\n        for (const [key, value] of iterator) {\n            if (value === null) {\n                mergedHeaders.delete(key);\n            }\n            else if (Array.isArray(value)) {\n                for (const v of value) {\n                    mergedHeaders.append(key, v);\n                }\n            }\n            else if (value !== undefined) {\n                // assume object headers are meant to be JSON stringified, i.e. their\n                // content value in OpenAPI specification is 'application/json'\n                mergedHeaders.set(key, typeof value === \"object\" ? JSON.stringify(value) : value);\n            }\n        }\n    }\n    return mergedHeaders;\n};\nexports.mergeHeaders = mergeHeaders;\nclass Interceptors {\n    constructor() {\n        Object.defineProperty(this, \"_fns\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._fns = [];\n    }\n    clear() {\n        this._fns = [];\n    }\n    getInterceptorIndex(id) {\n        if (typeof id === \"number\") {\n            return this._fns[id] ? id : -1;\n        }\n        else {\n            return this._fns.indexOf(id);\n        }\n    }\n    exists(id) {\n        const index = this.getInterceptorIndex(id);\n        return !!this._fns[index];\n    }\n    eject(id) {\n        const index = this.getInterceptorIndex(id);\n        if (this._fns[index]) {\n            this._fns[index] = null;\n        }\n    }\n    update(id, fn) {\n        const index = this.getInterceptorIndex(id);\n        if (this._fns[index]) {\n            this._fns[index] = fn;\n            return id;\n        }\n        else {\n            return false;\n        }\n    }\n    use(fn) {\n        this._fns = [...this._fns, fn];\n        return this._fns.length - 1;\n    }\n}\n// do not add `Middleware` as return type so we can use _fns internally\nconst createInterceptors = () => ({\n    error: new Interceptors(),\n    request: new Interceptors(),\n    response: new Interceptors(),\n});\nexports.createInterceptors = createInterceptors;\nconst defaultQuerySerializer = (0, exports.createQuerySerializer)({\n    allowReserved: false,\n    array: {\n        explode: true,\n        style: \"form\",\n    },\n    object: {\n        explode: true,\n        style: \"deepObject\",\n    },\n});\nconst defaultHeaders = {\n    \"Content-Type\": \"application/json\",\n};\nconst createConfig = (override = {}) => ({\n    ...bodySerializer_js_1.jsonBodySerializer,\n    headers: defaultHeaders,\n    parseAs: \"auto\",\n    querySerializer: defaultQuerySerializer,\n    ...override,\n});\nexports.createConfig = createConfig;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/auth.js":
/*!************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/auth.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAuthToken = void 0;\nconst getAuthToken = async (auth, callback) => {\n    const token = typeof callback === \"function\" ? await callback(auth) : callback;\n    if (!token) {\n        return;\n    }\n    if (auth.scheme === \"bearer\") {\n        return `Bearer ${token}`;\n    }\n    if (auth.scheme === \"basic\") {\n        return `Basic ${btoa(token)}`;\n    }\n    return token;\n};\nexports.getAuthToken = getAuthToken;\n//# sourceMappingURL=auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NvcmUvYXV0aC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLE1BQU07QUFDL0I7QUFDQTtBQUNBLHdCQUF3QixZQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NvcmUvYXV0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0QXV0aFRva2VuID0gdm9pZCAwO1xuY29uc3QgZ2V0QXV0aFRva2VuID0gYXN5bmMgKGF1dGgsIGNhbGxiYWNrKSA9PiB7XG4gICAgY29uc3QgdG9rZW4gPSB0eXBlb2YgY2FsbGJhY2sgPT09IFwiZnVuY3Rpb25cIiA/IGF3YWl0IGNhbGxiYWNrKGF1dGgpIDogY2FsbGJhY2s7XG4gICAgaWYgKCF0b2tlbikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChhdXRoLnNjaGVtZSA9PT0gXCJiZWFyZXJcIikge1xuICAgICAgICByZXR1cm4gYEJlYXJlciAke3Rva2VufWA7XG4gICAgfVxuICAgIGlmIChhdXRoLnNjaGVtZSA9PT0gXCJiYXNpY1wiKSB7XG4gICAgICAgIHJldHVybiBgQmFzaWMgJHtidG9hKHRva2VuKX1gO1xuICAgIH1cbiAgICByZXR1cm4gdG9rZW47XG59O1xuZXhwb3J0cy5nZXRBdXRoVG9rZW4gPSBnZXRBdXRoVG9rZW47XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/auth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/bodySerializer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/bodySerializer.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.urlSearchParamsBodySerializer = exports.jsonBodySerializer = exports.formDataBodySerializer = void 0;\nconst serializeFormDataPair = (data, key, value) => {\n    if (typeof value === \"string\" || value instanceof Blob) {\n        data.append(key, value);\n    }\n    else {\n        data.append(key, JSON.stringify(value));\n    }\n};\nconst serializeUrlSearchParamsPair = (data, key, value) => {\n    if (typeof value === \"string\") {\n        data.append(key, value);\n    }\n    else {\n        data.append(key, JSON.stringify(value));\n    }\n};\nexports.formDataBodySerializer = {\n    bodySerializer: (body) => {\n        const data = new FormData();\n        Object.entries(body).forEach(([key, value]) => {\n            if (value === undefined || value === null) {\n                return;\n            }\n            if (Array.isArray(value)) {\n                value.forEach((v) => serializeFormDataPair(data, key, v));\n            }\n            else {\n                serializeFormDataPair(data, key, value);\n            }\n        });\n        return data;\n    },\n};\nexports.jsonBodySerializer = {\n    bodySerializer: (body) => JSON.stringify(body, (_key, value) => typeof value === \"bigint\" ? value.toString() : value),\n};\nexports.urlSearchParamsBodySerializer = {\n    bodySerializer: (body) => {\n        const data = new URLSearchParams();\n        Object.entries(body).forEach(([key, value]) => {\n            if (value === undefined || value === null) {\n                return;\n            }\n            if (Array.isArray(value)) {\n                value.forEach((v) => serializeUrlSearchParamsPair(data, key, v));\n            }\n            else {\n                serializeUrlSearchParamsPair(data, key, value);\n            }\n        });\n        return data.toString();\n    },\n};\n//# sourceMappingURL=bodySerializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NvcmUvYm9keVNlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDLEdBQUcsMEJBQTBCLEdBQUcsOEJBQThCO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2VuZ2luZS9kaXN0L2Nqcy9jbGllbnQvY29yZS9ib2R5U2VyaWFsaXplci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudXJsU2VhcmNoUGFyYW1zQm9keVNlcmlhbGl6ZXIgPSBleHBvcnRzLmpzb25Cb2R5U2VyaWFsaXplciA9IGV4cG9ydHMuZm9ybURhdGFCb2R5U2VyaWFsaXplciA9IHZvaWQgMDtcbmNvbnN0IHNlcmlhbGl6ZUZvcm1EYXRhUGFpciA9IChkYXRhLCBrZXksIHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiB8fCB2YWx1ZSBpbnN0YW5jZW9mIEJsb2IpIHtcbiAgICAgICAgZGF0YS5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBkYXRhLmFwcGVuZChrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG4gICAgfVxufTtcbmNvbnN0IHNlcmlhbGl6ZVVybFNlYXJjaFBhcmFtc1BhaXIgPSAoZGF0YSwga2V5LCB2YWx1ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgZGF0YS5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBkYXRhLmFwcGVuZChrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG4gICAgfVxufTtcbmV4cG9ydHMuZm9ybURhdGFCb2R5U2VyaWFsaXplciA9IHtcbiAgICBib2R5U2VyaWFsaXplcjogKGJvZHkpID0+IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBPYmplY3QuZW50cmllcyhib2R5KS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUuZm9yRWFjaCgodikgPT4gc2VyaWFsaXplRm9ybURhdGFQYWlyKGRhdGEsIGtleSwgdikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2VyaWFsaXplRm9ybURhdGFQYWlyKGRhdGEsIGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSxcbn07XG5leHBvcnRzLmpzb25Cb2R5U2VyaWFsaXplciA9IHtcbiAgICBib2R5U2VyaWFsaXplcjogKGJvZHkpID0+IEpTT04uc3RyaW5naWZ5KGJvZHksIChfa2V5LCB2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSBcImJpZ2ludFwiID8gdmFsdWUudG9TdHJpbmcoKSA6IHZhbHVlKSxcbn07XG5leHBvcnRzLnVybFNlYXJjaFBhcmFtc0JvZHlTZXJpYWxpemVyID0ge1xuICAgIGJvZHlTZXJpYWxpemVyOiAoYm9keSkgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuICAgICAgICBPYmplY3QuZW50cmllcyhib2R5KS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUuZm9yRWFjaCgodikgPT4gc2VyaWFsaXplVXJsU2VhcmNoUGFyYW1zUGFpcihkYXRhLCBrZXksIHYpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHNlcmlhbGl6ZVVybFNlYXJjaFBhcmFtc1BhaXIoZGF0YSwga2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGF0YS50b1N0cmluZygpO1xuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ym9keVNlcmlhbGl6ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/bodySerializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/params.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/params.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildClientParams = void 0;\nconst extraPrefixesMap = {\n    $body_: \"body\",\n    $headers_: \"headers\",\n    $path_: \"path\",\n    $query_: \"query\",\n};\nconst extraPrefixes = Object.entries(extraPrefixesMap);\nconst buildKeyMap = (fields, map) => {\n    if (!map) {\n        map = new Map();\n    }\n    for (const config of fields) {\n        if (\"in\" in config) {\n            if (config.key) {\n                map.set(config.key, {\n                    in: config.in,\n                    map: config.map,\n                });\n            }\n        }\n        else if (config.args) {\n            buildKeyMap(config.args, map);\n        }\n    }\n    return map;\n};\nconst stripEmptySlots = (params) => {\n    for (const [slot, value] of Object.entries(params)) {\n        if (value && typeof value === \"object\" && !Object.keys(value).length) {\n            delete params[slot];\n        }\n    }\n};\nconst buildClientParams = (args, fields) => {\n    const params = {\n        body: {},\n        headers: {},\n        path: {},\n        query: {},\n    };\n    const map = buildKeyMap(fields);\n    let config;\n    for (const [index, arg] of args.entries()) {\n        if (fields[index]) {\n            config = fields[index];\n        }\n        if (!config) {\n            continue;\n        }\n        if (\"in\" in config) {\n            if (config.key) {\n                const field = map.get(config.key);\n                const name = field.map || config.key;\n                params[field.in][name] = arg;\n            }\n            else {\n                params.body = arg;\n            }\n        }\n        else {\n            for (const [key, value] of Object.entries(arg ?? {})) {\n                const field = map.get(key);\n                if (field) {\n                    const name = field.map || key;\n                    params[field.in][name] = value;\n                }\n                else {\n                    const extra = extraPrefixes.find(([prefix]) => key.startsWith(prefix));\n                    if (extra) {\n                        const [prefix, slot] = extra;\n                        params[slot][key.slice(prefix.length)] = value;\n                    }\n                    else {\n                        for (const [slot, allowed] of Object.entries(config.allowExtra ?? {})) {\n                            if (allowed) {\n                                params[slot][key] = value;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    stripEmptySlots(params);\n    return params;\n};\nexports.buildClientParams = buildClientParams;\n//# sourceMappingURL=params.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NvcmUvcGFyYW1zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsbUJBQW1CO0FBQ25CLGdCQUFnQjtBQUNoQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStEO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRGQUE0RjtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NvcmUvcGFyYW1zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5idWlsZENsaWVudFBhcmFtcyA9IHZvaWQgMDtcbmNvbnN0IGV4dHJhUHJlZml4ZXNNYXAgPSB7XG4gICAgJGJvZHlfOiBcImJvZHlcIixcbiAgICAkaGVhZGVyc186IFwiaGVhZGVyc1wiLFxuICAgICRwYXRoXzogXCJwYXRoXCIsXG4gICAgJHF1ZXJ5XzogXCJxdWVyeVwiLFxufTtcbmNvbnN0IGV4dHJhUHJlZml4ZXMgPSBPYmplY3QuZW50cmllcyhleHRyYVByZWZpeGVzTWFwKTtcbmNvbnN0IGJ1aWxkS2V5TWFwID0gKGZpZWxkcywgbWFwKSA9PiB7XG4gICAgaWYgKCFtYXApIHtcbiAgICAgICAgbWFwID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGNvbmZpZyBvZiBmaWVsZHMpIHtcbiAgICAgICAgaWYgKFwiaW5cIiBpbiBjb25maWcpIHtcbiAgICAgICAgICAgIGlmIChjb25maWcua2V5KSB7XG4gICAgICAgICAgICAgICAgbWFwLnNldChjb25maWcua2V5LCB7XG4gICAgICAgICAgICAgICAgICAgIGluOiBjb25maWcuaW4sXG4gICAgICAgICAgICAgICAgICAgIG1hcDogY29uZmlnLm1hcCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb25maWcuYXJncykge1xuICAgICAgICAgICAgYnVpbGRLZXlNYXAoY29uZmlnLmFyZ3MsIG1hcCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1hcDtcbn07XG5jb25zdCBzdHJpcEVtcHR5U2xvdHMgPSAocGFyYW1zKSA9PiB7XG4gICAgZm9yIChjb25zdCBbc2xvdCwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHBhcmFtcykpIHtcbiAgICAgICAgaWYgKHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJiAhT2JqZWN0LmtleXModmFsdWUpLmxlbmd0aCkge1xuICAgICAgICAgICAgZGVsZXRlIHBhcmFtc1tzbG90XTtcbiAgICAgICAgfVxuICAgIH1cbn07XG5jb25zdCBidWlsZENsaWVudFBhcmFtcyA9IChhcmdzLCBmaWVsZHMpID0+IHtcbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgIGJvZHk6IHt9LFxuICAgICAgICBoZWFkZXJzOiB7fSxcbiAgICAgICAgcGF0aDoge30sXG4gICAgICAgIHF1ZXJ5OiB7fSxcbiAgICB9O1xuICAgIGNvbnN0IG1hcCA9IGJ1aWxkS2V5TWFwKGZpZWxkcyk7XG4gICAgbGV0IGNvbmZpZztcbiAgICBmb3IgKGNvbnN0IFtpbmRleCwgYXJnXSBvZiBhcmdzLmVudHJpZXMoKSkge1xuICAgICAgICBpZiAoZmllbGRzW2luZGV4XSkge1xuICAgICAgICAgICAgY29uZmlnID0gZmllbGRzW2luZGV4XTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWNvbmZpZykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFwiaW5cIiBpbiBjb25maWcpIHtcbiAgICAgICAgICAgIGlmIChjb25maWcua2V5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBtYXAuZ2V0KGNvbmZpZy5rZXkpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBmaWVsZC5tYXAgfHwgY29uZmlnLmtleTtcbiAgICAgICAgICAgICAgICBwYXJhbXNbZmllbGQuaW5dW25hbWVdID0gYXJnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcGFyYW1zLmJvZHkgPSBhcmc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhhcmcgPz8ge30pKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBtYXAuZ2V0KGtleSk7XG4gICAgICAgICAgICAgICAgaWYgKGZpZWxkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBmaWVsZC5tYXAgfHwga2V5O1xuICAgICAgICAgICAgICAgICAgICBwYXJhbXNbZmllbGQuaW5dW25hbWVdID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBleHRyYSA9IGV4dHJhUHJlZml4ZXMuZmluZCgoW3ByZWZpeF0pID0+IGtleS5zdGFydHNXaXRoKHByZWZpeCkpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXh0cmEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IFtwcmVmaXgsIHNsb3RdID0gZXh0cmE7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXNbc2xvdF1ba2V5LnNsaWNlKHByZWZpeC5sZW5ndGgpXSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBbc2xvdCwgYWxsb3dlZF0gb2YgT2JqZWN0LmVudHJpZXMoY29uZmlnLmFsbG93RXh0cmEgPz8ge30pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFsbG93ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zW3Nsb3RdW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHN0cmlwRW1wdHlTbG90cyhwYXJhbXMpO1xuICAgIHJldHVybiBwYXJhbXM7XG59O1xuZXhwb3J0cy5idWlsZENsaWVudFBhcmFtcyA9IGJ1aWxkQ2xpZW50UGFyYW1zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyYW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/params.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/pathSerializer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/pathSerializer.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.serializeObjectParam = exports.serializePrimitiveParam = exports.serializeArrayParam = exports.separatorObjectExplode = exports.separatorArrayNoExplode = exports.separatorArrayExplode = void 0;\nconst separatorArrayExplode = (style) => {\n    switch (style) {\n        case \"label\":\n            return \".\";\n        case \"matrix\":\n            return \";\";\n        case \"simple\":\n            return \",\";\n        default:\n            return \"&\";\n    }\n};\nexports.separatorArrayExplode = separatorArrayExplode;\nconst separatorArrayNoExplode = (style) => {\n    switch (style) {\n        case \"form\":\n            return \",\";\n        case \"pipeDelimited\":\n            return \"|\";\n        case \"spaceDelimited\":\n            return \"%20\";\n        default:\n            return \",\";\n    }\n};\nexports.separatorArrayNoExplode = separatorArrayNoExplode;\nconst separatorObjectExplode = (style) => {\n    switch (style) {\n        case \"label\":\n            return \".\";\n        case \"matrix\":\n            return \";\";\n        case \"simple\":\n            return \",\";\n        default:\n            return \"&\";\n    }\n};\nexports.separatorObjectExplode = separatorObjectExplode;\nconst serializeArrayParam = ({ allowReserved, explode, name, style, value, }) => {\n    if (!explode) {\n        const joinedValues = (allowReserved ? value : value.map((v) => encodeURIComponent(v))).join((0, exports.separatorArrayNoExplode)(style));\n        switch (style) {\n            case \"label\":\n                return `.${joinedValues}`;\n            case \"matrix\":\n                return `;${name}=${joinedValues}`;\n            case \"simple\":\n                return joinedValues;\n            default:\n                return `${name}=${joinedValues}`;\n        }\n    }\n    const separator = (0, exports.separatorArrayExplode)(style);\n    const joinedValues = value\n        .map((v) => {\n        if (style === \"label\" || style === \"simple\") {\n            return allowReserved ? v : encodeURIComponent(v);\n        }\n        return (0, exports.serializePrimitiveParam)({\n            allowReserved,\n            name,\n            value: v,\n        });\n    })\n        .join(separator);\n    return style === \"label\" || style === \"matrix\"\n        ? separator + joinedValues\n        : joinedValues;\n};\nexports.serializeArrayParam = serializeArrayParam;\nconst serializePrimitiveParam = ({ allowReserved, name, value, }) => {\n    if (value === undefined || value === null) {\n        return \"\";\n    }\n    if (typeof value === \"object\") {\n        throw new Error(\"Deeply-nested arrays/objects aren’t supported. Provide your own `querySerializer()` to handle these.\");\n    }\n    return `${name}=${allowReserved ? value : encodeURIComponent(value)}`;\n};\nexports.serializePrimitiveParam = serializePrimitiveParam;\nconst serializeObjectParam = ({ allowReserved, explode, name, style, value, valueOnly, }) => {\n    if (value instanceof Date) {\n        return valueOnly ? value.toISOString() : `${name}=${value.toISOString()}`;\n    }\n    if (style !== \"deepObject\" && !explode) {\n        let values = [];\n        Object.entries(value).forEach(([key, v]) => {\n            values = [\n                ...values,\n                key,\n                allowReserved ? v : encodeURIComponent(v),\n            ];\n        });\n        const joinedValues = values.join(\",\");\n        switch (style) {\n            case \"form\":\n                return `${name}=${joinedValues}`;\n            case \"label\":\n                return `.${joinedValues}`;\n            case \"matrix\":\n                return `;${name}=${joinedValues}`;\n            default:\n                return joinedValues;\n        }\n    }\n    const separator = (0, exports.separatorObjectExplode)(style);\n    const joinedValues = Object.entries(value)\n        .map(([key, v]) => (0, exports.serializePrimitiveParam)({\n        allowReserved,\n        name: style === \"deepObject\" ? `${name}[${key}]` : key,\n        value: v,\n    }))\n        .join(separator);\n    return style === \"label\" || style === \"matrix\"\n        ? separator + joinedValues\n        : joinedValues;\n};\nexports.serializeObjectParam = serializeObjectParam;\n//# sourceMappingURL=pathSerializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2NvcmUvcGF0aFNlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsK0JBQStCLEdBQUcsMkJBQTJCLEdBQUcsOEJBQThCLEdBQUcsK0JBQStCLEdBQUcsNkJBQTZCO0FBQy9MO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QiwrQkFBK0IsNkNBQTZDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGFBQWE7QUFDeEM7QUFDQSx5QkFBeUIsRUFBRSxLQUFLLEdBQUcsYUFBYTtBQUNoRDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsS0FBSyxHQUFHLGFBQWE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLG1DQUFtQyw2QkFBNkI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxLQUFLLEdBQUcsa0RBQWtEO0FBQ3hFO0FBQ0EsK0JBQStCO0FBQy9CLGdDQUFnQyx3REFBd0Q7QUFDeEY7QUFDQSxvREFBb0QsS0FBSyxHQUFHLG9CQUFvQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLEtBQUssR0FBRyxhQUFhO0FBQy9DO0FBQ0EsMkJBQTJCLGFBQWE7QUFDeEM7QUFDQSx5QkFBeUIsRUFBRSxLQUFLLEdBQUcsYUFBYTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLEtBQUssR0FBRyxJQUFJO0FBQ3REO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvZW5naW5lL2Rpc3QvY2pzL2NsaWVudC9jb3JlL3BhdGhTZXJpYWxpemVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zZXJpYWxpemVPYmplY3RQYXJhbSA9IGV4cG9ydHMuc2VyaWFsaXplUHJpbWl0aXZlUGFyYW0gPSBleHBvcnRzLnNlcmlhbGl6ZUFycmF5UGFyYW0gPSBleHBvcnRzLnNlcGFyYXRvck9iamVjdEV4cGxvZGUgPSBleHBvcnRzLnNlcGFyYXRvckFycmF5Tm9FeHBsb2RlID0gZXhwb3J0cy5zZXBhcmF0b3JBcnJheUV4cGxvZGUgPSB2b2lkIDA7XG5jb25zdCBzZXBhcmF0b3JBcnJheUV4cGxvZGUgPSAoc3R5bGUpID0+IHtcbiAgICBzd2l0Y2ggKHN0eWxlKSB7XG4gICAgICAgIGNhc2UgXCJsYWJlbFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiLlwiO1xuICAgICAgICBjYXNlIFwibWF0cml4XCI6XG4gICAgICAgICAgICByZXR1cm4gXCI7XCI7XG4gICAgICAgIGNhc2UgXCJzaW1wbGVcIjpcbiAgICAgICAgICAgIHJldHVybiBcIixcIjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBcIiZcIjtcbiAgICB9XG59O1xuZXhwb3J0cy5zZXBhcmF0b3JBcnJheUV4cGxvZGUgPSBzZXBhcmF0b3JBcnJheUV4cGxvZGU7XG5jb25zdCBzZXBhcmF0b3JBcnJheU5vRXhwbG9kZSA9IChzdHlsZSkgPT4ge1xuICAgIHN3aXRjaCAoc3R5bGUpIHtcbiAgICAgICAgY2FzZSBcImZvcm1cIjpcbiAgICAgICAgICAgIHJldHVybiBcIixcIjtcbiAgICAgICAgY2FzZSBcInBpcGVEZWxpbWl0ZWRcIjpcbiAgICAgICAgICAgIHJldHVybiBcInxcIjtcbiAgICAgICAgY2FzZSBcInNwYWNlRGVsaW1pdGVkXCI6XG4gICAgICAgICAgICByZXR1cm4gXCIlMjBcIjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBcIixcIjtcbiAgICB9XG59O1xuZXhwb3J0cy5zZXBhcmF0b3JBcnJheU5vRXhwbG9kZSA9IHNlcGFyYXRvckFycmF5Tm9FeHBsb2RlO1xuY29uc3Qgc2VwYXJhdG9yT2JqZWN0RXhwbG9kZSA9IChzdHlsZSkgPT4ge1xuICAgIHN3aXRjaCAoc3R5bGUpIHtcbiAgICAgICAgY2FzZSBcImxhYmVsXCI6XG4gICAgICAgICAgICByZXR1cm4gXCIuXCI7XG4gICAgICAgIGNhc2UgXCJtYXRyaXhcIjpcbiAgICAgICAgICAgIHJldHVybiBcIjtcIjtcbiAgICAgICAgY2FzZSBcInNpbXBsZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiLFwiO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFwiJlwiO1xuICAgIH1cbn07XG5leHBvcnRzLnNlcGFyYXRvck9iamVjdEV4cGxvZGUgPSBzZXBhcmF0b3JPYmplY3RFeHBsb2RlO1xuY29uc3Qgc2VyaWFsaXplQXJyYXlQYXJhbSA9ICh7IGFsbG93UmVzZXJ2ZWQsIGV4cGxvZGUsIG5hbWUsIHN0eWxlLCB2YWx1ZSwgfSkgPT4ge1xuICAgIGlmICghZXhwbG9kZSkge1xuICAgICAgICBjb25zdCBqb2luZWRWYWx1ZXMgPSAoYWxsb3dSZXNlcnZlZCA/IHZhbHVlIDogdmFsdWUubWFwKCh2KSA9PiBlbmNvZGVVUklDb21wb25lbnQodikpKS5qb2luKCgwLCBleHBvcnRzLnNlcGFyYXRvckFycmF5Tm9FeHBsb2RlKShzdHlsZSkpO1xuICAgICAgICBzd2l0Y2ggKHN0eWxlKSB7XG4gICAgICAgICAgICBjYXNlIFwibGFiZWxcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYC4ke2pvaW5lZFZhbHVlc31gO1xuICAgICAgICAgICAgY2FzZSBcIm1hdHJpeFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBgOyR7bmFtZX09JHtqb2luZWRWYWx1ZXN9YDtcbiAgICAgICAgICAgIGNhc2UgXCJzaW1wbGVcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gam9pbmVkVmFsdWVzO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gYCR7bmFtZX09JHtqb2luZWRWYWx1ZXN9YDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBzZXBhcmF0b3IgPSAoMCwgZXhwb3J0cy5zZXBhcmF0b3JBcnJheUV4cGxvZGUpKHN0eWxlKTtcbiAgICBjb25zdCBqb2luZWRWYWx1ZXMgPSB2YWx1ZVxuICAgICAgICAubWFwKCh2KSA9PiB7XG4gICAgICAgIGlmIChzdHlsZSA9PT0gXCJsYWJlbFwiIHx8IHN0eWxlID09PSBcInNpbXBsZVwiKSB7XG4gICAgICAgICAgICByZXR1cm4gYWxsb3dSZXNlcnZlZCA/IHYgOiBlbmNvZGVVUklDb21wb25lbnQodik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCBleHBvcnRzLnNlcmlhbGl6ZVByaW1pdGl2ZVBhcmFtKSh7XG4gICAgICAgICAgICBhbGxvd1Jlc2VydmVkLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHZhbHVlOiB2LFxuICAgICAgICB9KTtcbiAgICB9KVxuICAgICAgICAuam9pbihzZXBhcmF0b3IpO1xuICAgIHJldHVybiBzdHlsZSA9PT0gXCJsYWJlbFwiIHx8IHN0eWxlID09PSBcIm1hdHJpeFwiXG4gICAgICAgID8gc2VwYXJhdG9yICsgam9pbmVkVmFsdWVzXG4gICAgICAgIDogam9pbmVkVmFsdWVzO1xufTtcbmV4cG9ydHMuc2VyaWFsaXplQXJyYXlQYXJhbSA9IHNlcmlhbGl6ZUFycmF5UGFyYW07XG5jb25zdCBzZXJpYWxpemVQcmltaXRpdmVQYXJhbSA9ICh7IGFsbG93UmVzZXJ2ZWQsIG5hbWUsIHZhbHVlLCB9KSA9PiB7XG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGVlcGx5LW5lc3RlZCBhcnJheXMvb2JqZWN0cyBhcmVu4oCZdCBzdXBwb3J0ZWQuIFByb3ZpZGUgeW91ciBvd24gYHF1ZXJ5U2VyaWFsaXplcigpYCB0byBoYW5kbGUgdGhlc2UuXCIpO1xuICAgIH1cbiAgICByZXR1cm4gYCR7bmFtZX09JHthbGxvd1Jlc2VydmVkID8gdmFsdWUgOiBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpfWA7XG59O1xuZXhwb3J0cy5zZXJpYWxpemVQcmltaXRpdmVQYXJhbSA9IHNlcmlhbGl6ZVByaW1pdGl2ZVBhcmFtO1xuY29uc3Qgc2VyaWFsaXplT2JqZWN0UGFyYW0gPSAoeyBhbGxvd1Jlc2VydmVkLCBleHBsb2RlLCBuYW1lLCBzdHlsZSwgdmFsdWUsIHZhbHVlT25seSwgfSkgPT4ge1xuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlT25seSA/IHZhbHVlLnRvSVNPU3RyaW5nKCkgOiBgJHtuYW1lfT0ke3ZhbHVlLnRvSVNPU3RyaW5nKCl9YDtcbiAgICB9XG4gICAgaWYgKHN0eWxlICE9PSBcImRlZXBPYmplY3RcIiAmJiAhZXhwbG9kZSkge1xuICAgICAgICBsZXQgdmFsdWVzID0gW107XG4gICAgICAgIE9iamVjdC5lbnRyaWVzKHZhbHVlKS5mb3JFYWNoKChba2V5LCB2XSkgPT4ge1xuICAgICAgICAgICAgdmFsdWVzID0gW1xuICAgICAgICAgICAgICAgIC4uLnZhbHVlcyxcbiAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgYWxsb3dSZXNlcnZlZCA/IHYgOiBlbmNvZGVVUklDb21wb25lbnQodiksXG4gICAgICAgICAgICBdO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3Qgam9pbmVkVmFsdWVzID0gdmFsdWVzLmpvaW4oXCIsXCIpO1xuICAgICAgICBzd2l0Y2ggKHN0eWxlKSB7XG4gICAgICAgICAgICBjYXNlIFwiZm9ybVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBgJHtuYW1lfT0ke2pvaW5lZFZhbHVlc31gO1xuICAgICAgICAgICAgY2FzZSBcImxhYmVsXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAuJHtqb2luZWRWYWx1ZXN9YDtcbiAgICAgICAgICAgIGNhc2UgXCJtYXRyaXhcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYDske25hbWV9PSR7am9pbmVkVmFsdWVzfWA7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBqb2luZWRWYWx1ZXM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgc2VwYXJhdG9yID0gKDAsIGV4cG9ydHMuc2VwYXJhdG9yT2JqZWN0RXhwbG9kZSkoc3R5bGUpO1xuICAgIGNvbnN0IGpvaW5lZFZhbHVlcyA9IE9iamVjdC5lbnRyaWVzKHZhbHVlKVxuICAgICAgICAubWFwKChba2V5LCB2XSkgPT4gKDAsIGV4cG9ydHMuc2VyaWFsaXplUHJpbWl0aXZlUGFyYW0pKHtcbiAgICAgICAgYWxsb3dSZXNlcnZlZCxcbiAgICAgICAgbmFtZTogc3R5bGUgPT09IFwiZGVlcE9iamVjdFwiID8gYCR7bmFtZX1bJHtrZXl9XWAgOiBrZXksXG4gICAgICAgIHZhbHVlOiB2LFxuICAgIH0pKVxuICAgICAgICAuam9pbihzZXBhcmF0b3IpO1xuICAgIHJldHVybiBzdHlsZSA9PT0gXCJsYWJlbFwiIHx8IHN0eWxlID09PSBcIm1hdHJpeFwiXG4gICAgICAgID8gc2VwYXJhdG9yICsgam9pbmVkVmFsdWVzXG4gICAgICAgIDogam9pbmVkVmFsdWVzO1xufTtcbmV4cG9ydHMuc2VyaWFsaXplT2JqZWN0UGFyYW0gPSBzZXJpYWxpemVPYmplY3RQYXJhbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGhTZXJpYWxpemVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/core/pathSerializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This file is auto-generated by @hey-api/openapi-ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./sdk.gen.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/sdk.gen.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types.gen.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/types.gen.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsMEZBQWM7QUFDM0MscUJBQXFCLG1CQUFPLENBQUMsOEZBQWdCO0FBQzdDIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2VuZ2luZS9kaXN0L2Nqcy9jbGllbnQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBUaGlzIGZpbGUgaXMgYXV0by1nZW5lcmF0ZWQgYnkgQGhleS1hcGkvb3BlbmFwaS10c1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Nkay5nZW4uanNcIiksIGV4cG9ydHMpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXMuZ2VuLmpzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/sdk.gen.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/sdk.gen.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This file is auto-generated by @hey-api/openapi-ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.searchActivityLogs = exports.getActivityLogs = exports.searchTransactions = exports.getTransactionAnalyticsSummary = exports.getTransactionAnalytics = exports.getTransactions = exports.createAccount = exports.listAccounts = exports.cancelTransaction = exports.encodeContract = exports.readContract = exports.signTypedData = exports.signMessage = exports.sendTransaction = exports.writeContract = void 0;\nconst client_gen_js_1 = __webpack_require__(/*! ./client.gen.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client.gen.js\");\n/**\n * Write Contract\n * Call a contract function with a transaction\n */\nconst writeContract = (options) => {\n    return (options.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/write/contract\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        },\n    });\n};\nexports.writeContract = writeContract;\n/**\n * Write Transaction\n * Execute raw transactions\n */\nconst sendTransaction = (options) => {\n    return (options.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/write/transaction\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        },\n    });\n};\nexports.sendTransaction = sendTransaction;\n/**\n * Sign Message\n * Sign messages using either EOA or Smart Account\n */\nconst signMessage = (options) => {\n    return (options.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/sign/message\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        },\n    });\n};\nexports.signMessage = signMessage;\n/**\n * Sign Typed Data\n * Sign EIP-712 typed data using either EOA or Smart Account\n */\nconst signTypedData = (options) => {\n    return (options.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/sign/typed-data\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        },\n    });\n};\nexports.signTypedData = signTypedData;\n/**\n * Read Contract\n * Read from smart contracts with intelligent execution strategy:\n * - Single calls: Always executed directly for efficiency\n * - Multiple calls: Uses multicall by default, or direct calls if disabled\n * - Failed preparations: Returns preparation errors directly\n *\n * If multicall is not specified, it will be used by default. In case of multicall related errors, engine will fallback to direct calls.\n * Only in the case where multicall is explicitly enabled, engine will not fallback to direct calls.\n */\nconst readContract = (options) => {\n    return (options.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/read/contract\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        },\n    });\n};\nexports.readContract = readContract;\n/**\n * Encode Contract\n * Encode contract function calls without execution\n */\nconst encodeContract = (options) => {\n    return (options.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/encode/contract\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        },\n    });\n};\nexports.encodeContract = encodeContract;\n/**\n * Cancel Transaction\n * Attempt to cancel a queued transaction. Transactions that have been sent and are waiting for mine cannot be cancelled.\n */\nconst cancelTransaction = (options) => {\n    return (options.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/{id}/cancel\",\n        ...options,\n    });\n};\nexports.cancelTransaction = cancelTransaction;\n/**\n * List Server Wallets\n * List all engine server wallets for the current project. Returns an array of EOA addresses with their corresponding predicted smart account addresses.\n */\nconst listAccounts = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/accounts\",\n        ...options,\n    });\n};\nexports.listAccounts = listAccounts;\n/**\n * Get or Create Server Wallet\n * Create a new engine server wallet or retrieve an existing one. If the EOA already exists for the given label, it will be returned without creating a new one.\n */\nconst createAccount = (options) => {\n    return (options?.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/accounts\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\nexports.createAccount = createAccount;\n/**\n * Get Transactions\n * Search transactions with various filters and pagination\n */\nconst getTransactions = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions\",\n        ...options,\n    });\n};\nexports.getTransactions = getTransactions;\n/**\n * Transaction Analytics\n * Get transaction count analytics over time with filtering\n */\nconst getTransactionAnalytics = (options) => {\n    return (options?.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/analytics\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\nexports.getTransactionAnalytics = getTransactionAnalytics;\n/**\n * Transaction Analytics Summary\n * Get a summary (total count and total gas calculation) for transactions within a time range, supporting complex nested filters.\n */\nconst getTransactionAnalyticsSummary = (options) => {\n    return (options?.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/analytics-summary\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\nexports.getTransactionAnalyticsSummary = getTransactionAnalyticsSummary;\n/**\n * Search Transactions\n * Advanced search for transactions with complex nested filters\n */\nconst searchTransactions = (options) => {\n    return (options?.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/search\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\nexports.searchTransactions = searchTransactions;\n/**\n * Get Activity Logs\n * Get paginated activity logs for a specific transaction with tenancy enforcement\n */\nconst getActivityLogs = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/activity-logs\",\n        ...options,\n    });\n};\nexports.getActivityLogs = getActivityLogs;\n/**\n * Search Activity Logs\n * Search activity logs across transactions with advanced filtering and tenancy enforcement\n */\nconst searchActivityLogs = (options) => {\n    return (options?.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/activity-logs/search\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\nexports.searchActivityLogs = searchActivityLogs;\n//# sourceMappingURL=sdk.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/sdk.gen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/types.gen.js":
/*!************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/client/types.gen.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file is auto-generated by @hey-api/openapi-ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY2xpZW50L3R5cGVzLmdlbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2VuZ2luZS9kaXN0L2Nqcy9jbGllbnQvdHlwZXMuZ2VuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gVGhpcyBmaWxlIGlzIGF1dG8tZ2VuZXJhdGVkIGJ5IEBoZXktYXBpL29wZW5hcGktdHNcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmdlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/types.gen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/configure.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/configure.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.configure = configure;\nexports.isErrorResponse = isErrorResponse;\nexports.isSuccessResponse = isSuccessResponse;\nconst client_gen_js_1 = __webpack_require__(/*! ./client/client.gen.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/client.gen.js\");\nfunction configure(options) {\n    client_gen_js_1.client.setConfig({\n        bodySerializer: stringify,\n        headers: {\n            ...(options.clientId && { \"x-client-id\": options.clientId }),\n            ...(options.secretKey && { \"x-secret-key\": options.secretKey }),\n        },\n        ...(options.override ?? {}),\n    });\n}\nfunction stringify(\n// biome-ignore lint/suspicious/noExplicitAny: JSON.stringify signature\nvalue, \n// biome-ignore lint/suspicious/noExplicitAny: JSON.stringify signature\nreplacer, space) {\n    const res = JSON.stringify(value, (key, value_) => {\n        const value__ = typeof value_ === \"bigint\" ? value_.toString() : value_;\n        return typeof replacer === \"function\" ? replacer(key, value__) : value__;\n    }, space);\n    return res;\n}\nfunction isErrorResponse(res) {\n    return \"error\" in res;\n}\nfunction isSuccessResponse(res) {\n    return \"result\" in res;\n}\n//# sourceMappingURL=configure.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvY29uZmlndXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQix1QkFBdUI7QUFDdkIseUJBQXlCO0FBQ3pCLHdCQUF3QixtQkFBTyxDQUFDLHVHQUF3QjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxpQ0FBaUM7QUFDdkUsdUNBQXVDLG1DQUFtQztBQUMxRSxTQUFTO0FBQ1Qsa0NBQWtDO0FBQ2xDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2VuZ2luZS9kaXN0L2Nqcy9jb25maWd1cmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNvbmZpZ3VyZSA9IGNvbmZpZ3VyZTtcbmV4cG9ydHMuaXNFcnJvclJlc3BvbnNlID0gaXNFcnJvclJlc3BvbnNlO1xuZXhwb3J0cy5pc1N1Y2Nlc3NSZXNwb25zZSA9IGlzU3VjY2Vzc1Jlc3BvbnNlO1xuY29uc3QgY2xpZW50X2dlbl9qc18xID0gcmVxdWlyZShcIi4vY2xpZW50L2NsaWVudC5nZW4uanNcIik7XG5mdW5jdGlvbiBjb25maWd1cmUob3B0aW9ucykge1xuICAgIGNsaWVudF9nZW5fanNfMS5jbGllbnQuc2V0Q29uZmlnKHtcbiAgICAgICAgYm9keVNlcmlhbGl6ZXI6IHN0cmluZ2lmeSxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgLi4uKG9wdGlvbnMuY2xpZW50SWQgJiYgeyBcIngtY2xpZW50LWlkXCI6IG9wdGlvbnMuY2xpZW50SWQgfSksXG4gICAgICAgICAgICAuLi4ob3B0aW9ucy5zZWNyZXRLZXkgJiYgeyBcIngtc2VjcmV0LWtleVwiOiBvcHRpb25zLnNlY3JldEtleSB9KSxcbiAgICAgICAgfSxcbiAgICAgICAgLi4uKG9wdGlvbnMub3ZlcnJpZGUgPz8ge30pLFxuICAgIH0pO1xufVxuZnVuY3Rpb24gc3RyaW5naWZ5KFxuLy8gYmlvbWUtaWdub3JlIGxpbnQvc3VzcGljaW91cy9ub0V4cGxpY2l0QW55OiBKU09OLnN0cmluZ2lmeSBzaWduYXR1cmVcbnZhbHVlLCBcbi8vIGJpb21lLWlnbm9yZSBsaW50L3N1c3BpY2lvdXMvbm9FeHBsaWNpdEFueTogSlNPTi5zdHJpbmdpZnkgc2lnbmF0dXJlXG5yZXBsYWNlciwgc3BhY2UpIHtcbiAgICBjb25zdCByZXMgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSwgKGtleSwgdmFsdWVfKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlX18gPSB0eXBlb2YgdmFsdWVfID09PSBcImJpZ2ludFwiID8gdmFsdWVfLnRvU3RyaW5nKCkgOiB2YWx1ZV87XG4gICAgICAgIHJldHVybiB0eXBlb2YgcmVwbGFjZXIgPT09IFwiZnVuY3Rpb25cIiA/IHJlcGxhY2VyKGtleSwgdmFsdWVfXykgOiB2YWx1ZV9fO1xuICAgIH0sIHNwYWNlKTtcbiAgICByZXR1cm4gcmVzO1xufVxuZnVuY3Rpb24gaXNFcnJvclJlc3BvbnNlKHJlcykge1xuICAgIHJldHVybiBcImVycm9yXCIgaW4gcmVzO1xufVxuZnVuY3Rpb24gaXNTdWNjZXNzUmVzcG9uc2UocmVzKSB7XG4gICAgcmV0dXJuIFwicmVzdWx0XCIgaW4gcmVzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZmlndXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/configure.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/exports/thirdweb.js":
/*!************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/engine/dist/cjs/exports/thirdweb.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSuccessResponse = exports.isErrorResponse = exports.configure = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ../client/index.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/client/index.js\"), exports);\nvar configure_js_1 = __webpack_require__(/*! ../configure.js */ \"(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/configure.js\");\nObject.defineProperty(exports, \"configure\", ({ enumerable: true, get: function () { return configure_js_1.configure; } }));\nObject.defineProperty(exports, \"isErrorResponse\", ({ enumerable: true, get: function () { return configure_js_1.isErrorResponse; } }));\nObject.defineProperty(exports, \"isSuccessResponse\", ({ enumerable: true, get: function () { return configure_js_1.isSuccessResponse; } }));\n//# sourceMappingURL=thirdweb.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvZXhwb3J0cy90aGlyZHdlYi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyx1QkFBdUIsR0FBRyxpQkFBaUI7QUFDdkUsZ0JBQWdCLG1CQUFPLENBQUMsdURBQU87QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsOEZBQW9CO0FBQ2pELHFCQUFxQixtQkFBTyxDQUFDLHdGQUFpQjtBQUM5Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDeEgsbURBQWtELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3BJLHFEQUFvRCxFQUFFLHFDQUFxQyw0Q0FBNEMsRUFBQztBQUN4SSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9lbmdpbmUvZGlzdC9janMvZXhwb3J0cy90aGlyZHdlYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNTdWNjZXNzUmVzcG9uc2UgPSBleHBvcnRzLmlzRXJyb3JSZXNwb25zZSA9IGV4cG9ydHMuY29uZmlndXJlID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuLi9jbGllbnQvaW5kZXguanNcIiksIGV4cG9ydHMpO1xudmFyIGNvbmZpZ3VyZV9qc18xID0gcmVxdWlyZShcIi4uL2NvbmZpZ3VyZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNvbmZpZ3VyZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uZmlndXJlX2pzXzEuY29uZmlndXJlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNFcnJvclJlc3BvbnNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25maWd1cmVfanNfMS5pc0Vycm9yUmVzcG9uc2U7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc1N1Y2Nlc3NSZXNwb25zZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uZmlndXJlX2pzXzEuaXNTdWNjZXNzUmVzcG9uc2U7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10aGlyZHdlYi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/engine/dist/cjs/exports/thirdweb.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client.gen.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/client.gen.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This file is auto-generated by @hey-api/openapi-ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.client = void 0;\nconst index_js_1 = __webpack_require__(/*! ./client/index.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/index.js\");\nexports.client = (0, index_js_1.createClient)((0, index_js_1.createConfig)());\n//# sourceMappingURL=client.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jbGllbnQuZ2VuLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLG1CQUFtQixtQkFBTyxDQUFDLHFHQUFtQjtBQUM5QyxjQUFjO0FBQ2QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvaW5zaWdodC9kaXN0L2Nqcy9jbGllbnQvY2xpZW50Lmdlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIFRoaXMgZmlsZSBpcyBhdXRvLWdlbmVyYXRlZCBieSBAaGV5LWFwaS9vcGVuYXBpLXRzXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNsaWVudCA9IHZvaWQgMDtcbmNvbnN0IGluZGV4X2pzXzEgPSByZXF1aXJlKFwiLi9jbGllbnQvaW5kZXguanNcIik7XG5leHBvcnRzLmNsaWVudCA9ICgwLCBpbmRleF9qc18xLmNyZWF0ZUNsaWVudCkoKDAsIGluZGV4X2pzXzEuY3JlYXRlQ29uZmlnKSgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsaWVudC5nZW4uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client.gen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/client.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/client.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createClient = void 0;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/utils.js\");\nconst createClient = (config = {}) => {\n    let _config = (0, utils_js_1.mergeConfigs)((0, utils_js_1.createConfig)(), config);\n    const getConfig = () => ({ ..._config });\n    const setConfig = (config) => {\n        _config = (0, utils_js_1.mergeConfigs)(_config, config);\n        return getConfig();\n    };\n    const interceptors = (0, utils_js_1.createInterceptors)();\n    const request = async (options) => {\n        const opts = {\n            ..._config,\n            ...options,\n            fetch: options.fetch ?? _config.fetch ?? globalThis.fetch,\n            headers: (0, utils_js_1.mergeHeaders)(_config.headers, options.headers),\n        };\n        if (opts.security) {\n            await (0, utils_js_1.setAuthParams)({\n                ...opts,\n                security: opts.security,\n            });\n        }\n        if (opts.body && opts.bodySerializer) {\n            opts.body = opts.bodySerializer(opts.body);\n        }\n        // remove Content-Type header if body is empty to avoid sending invalid requests\n        if (opts.body === undefined || opts.body === \"\") {\n            opts.headers.delete(\"Content-Type\");\n        }\n        const url = (0, utils_js_1.buildUrl)(opts);\n        const requestInit = {\n            redirect: \"follow\",\n            ...opts,\n        };\n        let request = new Request(url, requestInit);\n        for (const fn of interceptors.request._fns) {\n            if (fn) {\n                request = await fn(request, opts);\n            }\n        }\n        // fetch must be assigned here, otherwise it would throw the error:\n        // TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation\n        const _fetch = opts.fetch;\n        let response = await _fetch(request);\n        for (const fn of interceptors.response._fns) {\n            if (fn) {\n                response = await fn(response, request, opts);\n            }\n        }\n        const result = {\n            request,\n            response,\n        };\n        if (response.ok) {\n            if (response.status === 204 ||\n                response.headers.get(\"Content-Length\") === \"0\") {\n                return opts.responseStyle === \"data\"\n                    ? {}\n                    : {\n                        data: {},\n                        ...result,\n                    };\n            }\n            const parseAs = (opts.parseAs === \"auto\"\n                ? (0, utils_js_1.getParseAs)(response.headers.get(\"Content-Type\"))\n                : opts.parseAs) ?? \"json\";\n            let data;\n            switch (parseAs) {\n                case \"arrayBuffer\":\n                case \"blob\":\n                case \"formData\":\n                case \"json\":\n                case \"text\":\n                    data = await response[parseAs]();\n                    break;\n                case \"stream\":\n                    return opts.responseStyle === \"data\"\n                        ? response.body\n                        : {\n                            data: response.body,\n                            ...result,\n                        };\n            }\n            if (parseAs === \"json\") {\n                if (opts.responseValidator) {\n                    await opts.responseValidator(data);\n                }\n                if (opts.responseTransformer) {\n                    data = await opts.responseTransformer(data);\n                }\n            }\n            return opts.responseStyle === \"data\"\n                ? data\n                : {\n                    data,\n                    ...result,\n                };\n        }\n        let error = await response.text();\n        try {\n            error = JSON.parse(error);\n        }\n        catch {\n            // noop\n        }\n        let finalError = error;\n        for (const fn of interceptors.error._fns) {\n            if (fn) {\n                finalError = (await fn(error, response, request, opts));\n            }\n        }\n        finalError = finalError || {};\n        if (opts.throwOnError) {\n            throw finalError;\n        }\n        // TODO: we probably want to return error and improve types\n        return opts.responseStyle === \"data\"\n            ? undefined\n            : {\n                error: finalError,\n                ...result,\n            };\n    };\n    return {\n        buildUrl: utils_js_1.buildUrl,\n        connect: (options) => request({ ...options, method: \"CONNECT\" }),\n        delete: (options) => request({ ...options, method: \"DELETE\" }),\n        get: (options) => request({ ...options, method: \"GET\" }),\n        getConfig,\n        head: (options) => request({ ...options, method: \"HEAD\" }),\n        interceptors,\n        options: (options) => request({ ...options, method: \"OPTIONS\" }),\n        patch: (options) => request({ ...options, method: \"PATCH\" }),\n        post: (options) => request({ ...options, method: \"POST\" }),\n        put: (options) => request({ ...options, method: \"PUT\" }),\n        request,\n        setConfig,\n        trace: (options) => request({ ...options, method: \"TRACE\" }),\n    };\n};\nexports.createClient = createClient;\n//# sourceMappingURL=client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mergeHeaders = exports.createConfig = exports.createClient = exports.buildClientParams = exports.urlSearchParamsBodySerializer = exports.jsonBodySerializer = exports.formDataBodySerializer = void 0;\nvar bodySerializer_js_1 = __webpack_require__(/*! ../core/bodySerializer.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/bodySerializer.js\");\nObject.defineProperty(exports, \"formDataBodySerializer\", ({ enumerable: true, get: function () { return bodySerializer_js_1.formDataBodySerializer; } }));\nObject.defineProperty(exports, \"jsonBodySerializer\", ({ enumerable: true, get: function () { return bodySerializer_js_1.jsonBodySerializer; } }));\nObject.defineProperty(exports, \"urlSearchParamsBodySerializer\", ({ enumerable: true, get: function () { return bodySerializer_js_1.urlSearchParamsBodySerializer; } }));\nvar params_js_1 = __webpack_require__(/*! ../core/params.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/params.js\");\nObject.defineProperty(exports, \"buildClientParams\", ({ enumerable: true, get: function () { return params_js_1.buildClientParams; } }));\nvar client_js_1 = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/client.js\");\nObject.defineProperty(exports, \"createClient\", ({ enumerable: true, get: function () { return client_js_1.createClient; } }));\nvar utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/utils.js\");\nObject.defineProperty(exports, \"createConfig\", ({ enumerable: true, get: function () { return utils_js_1.createConfig; } }));\nObject.defineProperty(exports, \"mergeHeaders\", ({ enumerable: true, get: function () { return utils_js_1.mergeHeaders; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jbGllbnQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsb0JBQW9CLEdBQUcsb0JBQW9CLEdBQUcseUJBQXlCLEdBQUcscUNBQXFDLEdBQUcsMEJBQTBCLEdBQUcsOEJBQThCO0FBQ3BNLDBCQUEwQixtQkFBTyxDQUFDLG9IQUEyQjtBQUM3RCwwREFBeUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDdkosc0RBQXFELEVBQUUscUNBQXFDLGtEQUFrRCxFQUFDO0FBQy9JLGlFQUFnRSxFQUFFLHFDQUFxQyw2REFBNkQsRUFBQztBQUNySyxrQkFBa0IsbUJBQU8sQ0FBQyxvR0FBbUI7QUFDN0MscURBQW9ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3JJLGtCQUFrQixtQkFBTyxDQUFDLGdHQUFhO0FBQ3ZDLGdEQUErQyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMzSCxpQkFBaUIsbUJBQU8sQ0FBQyw4RkFBWTtBQUNyQyxnREFBK0MsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUM7QUFDMUgsZ0RBQStDLEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQzFIIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2luc2lnaHQvZGlzdC9janMvY2xpZW50L2NsaWVudC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWVyZ2VIZWFkZXJzID0gZXhwb3J0cy5jcmVhdGVDb25maWcgPSBleHBvcnRzLmNyZWF0ZUNsaWVudCA9IGV4cG9ydHMuYnVpbGRDbGllbnRQYXJhbXMgPSBleHBvcnRzLnVybFNlYXJjaFBhcmFtc0JvZHlTZXJpYWxpemVyID0gZXhwb3J0cy5qc29uQm9keVNlcmlhbGl6ZXIgPSBleHBvcnRzLmZvcm1EYXRhQm9keVNlcmlhbGl6ZXIgPSB2b2lkIDA7XG52YXIgYm9keVNlcmlhbGl6ZXJfanNfMSA9IHJlcXVpcmUoXCIuLi9jb3JlL2JvZHlTZXJpYWxpemVyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZm9ybURhdGFCb2R5U2VyaWFsaXplclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYm9keVNlcmlhbGl6ZXJfanNfMS5mb3JtRGF0YUJvZHlTZXJpYWxpemVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwianNvbkJvZHlTZXJpYWxpemVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBib2R5U2VyaWFsaXplcl9qc18xLmpzb25Cb2R5U2VyaWFsaXplcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInVybFNlYXJjaFBhcmFtc0JvZHlTZXJpYWxpemVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBib2R5U2VyaWFsaXplcl9qc18xLnVybFNlYXJjaFBhcmFtc0JvZHlTZXJpYWxpemVyOyB9IH0pO1xudmFyIHBhcmFtc19qc18xID0gcmVxdWlyZShcIi4uL2NvcmUvcGFyYW1zLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYnVpbGRDbGllbnRQYXJhbXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBhcmFtc19qc18xLmJ1aWxkQ2xpZW50UGFyYW1zOyB9IH0pO1xudmFyIGNsaWVudF9qc18xID0gcmVxdWlyZShcIi4vY2xpZW50LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjbGllbnRfanNfMS5jcmVhdGVDbGllbnQ7IH0gfSk7XG52YXIgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQ29uZmlnXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc19qc18xLmNyZWF0ZUNvbmZpZzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm1lcmdlSGVhZGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfanNfMS5tZXJnZUhlYWRlcnM7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/utils.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/utils.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createConfig = exports.createInterceptors = exports.mergeHeaders = exports.mergeConfigs = exports.getUrl = exports.buildUrl = exports.setAuthParams = exports.getParseAs = exports.createQuerySerializer = void 0;\nconst auth_js_1 = __webpack_require__(/*! ../core/auth.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/auth.js\");\nconst bodySerializer_js_1 = __webpack_require__(/*! ../core/bodySerializer.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/bodySerializer.js\");\nconst pathSerializer_js_1 = __webpack_require__(/*! ../core/pathSerializer.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/pathSerializer.js\");\nconst PATH_PARAM_RE = /\\{[^{}]+\\}/g;\nconst defaultPathSerializer = ({ path, url: _url }) => {\n    let url = _url;\n    const matches = _url.match(PATH_PARAM_RE);\n    if (matches) {\n        for (const match of matches) {\n            let explode = false;\n            let name = match.substring(1, match.length - 1);\n            let style = \"simple\";\n            if (name.endsWith(\"*\")) {\n                explode = true;\n                name = name.substring(0, name.length - 1);\n            }\n            if (name.startsWith(\".\")) {\n                name = name.substring(1);\n                style = \"label\";\n            }\n            else if (name.startsWith(\";\")) {\n                name = name.substring(1);\n                style = \"matrix\";\n            }\n            const value = path[name];\n            if (value === undefined || value === null) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                url = url.replace(match, (0, pathSerializer_js_1.serializeArrayParam)({ explode, name, style, value }));\n                continue;\n            }\n            if (typeof value === \"object\") {\n                url = url.replace(match, (0, pathSerializer_js_1.serializeObjectParam)({\n                    explode,\n                    name,\n                    style,\n                    value: value,\n                    valueOnly: true,\n                }));\n                continue;\n            }\n            if (style === \"matrix\") {\n                url = url.replace(match, `;${(0, pathSerializer_js_1.serializePrimitiveParam)({\n                    name,\n                    value: value,\n                })}`);\n                continue;\n            }\n            const replaceValue = encodeURIComponent(style === \"label\" ? `.${value}` : value);\n            url = url.replace(match, replaceValue);\n        }\n    }\n    return url;\n};\nconst createQuerySerializer = ({ allowReserved, array, object, } = {}) => {\n    const querySerializer = (queryParams) => {\n        const search = [];\n        if (queryParams && typeof queryParams === \"object\") {\n            for (const name in queryParams) {\n                const value = queryParams[name];\n                if (value === undefined || value === null) {\n                    continue;\n                }\n                if (Array.isArray(value)) {\n                    const serializedArray = (0, pathSerializer_js_1.serializeArrayParam)({\n                        allowReserved,\n                        explode: true,\n                        name,\n                        style: \"form\",\n                        value,\n                        ...array,\n                    });\n                    if (serializedArray)\n                        search.push(serializedArray);\n                }\n                else if (typeof value === \"object\") {\n                    const serializedObject = (0, pathSerializer_js_1.serializeObjectParam)({\n                        allowReserved,\n                        explode: true,\n                        name,\n                        style: \"deepObject\",\n                        value: value,\n                        ...object,\n                    });\n                    if (serializedObject)\n                        search.push(serializedObject);\n                }\n                else {\n                    const serializedPrimitive = (0, pathSerializer_js_1.serializePrimitiveParam)({\n                        allowReserved,\n                        name,\n                        value: value,\n                    });\n                    if (serializedPrimitive)\n                        search.push(serializedPrimitive);\n                }\n            }\n        }\n        return search.join(\"&\");\n    };\n    return querySerializer;\n};\nexports.createQuerySerializer = createQuerySerializer;\n/**\n * Infers parseAs value from provided Content-Type header.\n */\nconst getParseAs = (contentType) => {\n    if (!contentType) {\n        // If no Content-Type header is provided, the best we can do is return the raw response body,\n        // which is effectively the same as the 'stream' option.\n        return \"stream\";\n    }\n    const cleanContent = contentType.split(\";\")[0]?.trim();\n    if (!cleanContent) {\n        return;\n    }\n    if (cleanContent.startsWith(\"application/json\") ||\n        cleanContent.endsWith(\"+json\")) {\n        return \"json\";\n    }\n    if (cleanContent === \"multipart/form-data\") {\n        return \"formData\";\n    }\n    if ([\"application/\", \"audio/\", \"image/\", \"video/\"].some((type) => cleanContent.startsWith(type))) {\n        return \"blob\";\n    }\n    if (cleanContent.startsWith(\"text/\")) {\n        return \"text\";\n    }\n    return;\n};\nexports.getParseAs = getParseAs;\nconst setAuthParams = async ({ security, ...options }) => {\n    for (const auth of security) {\n        const token = await (0, auth_js_1.getAuthToken)(auth, options.auth);\n        if (!token) {\n            continue;\n        }\n        const name = auth.name ?? \"Authorization\";\n        switch (auth.in) {\n            case \"query\":\n                if (!options.query) {\n                    options.query = {};\n                }\n                options.query[name] = token;\n                break;\n            case \"cookie\":\n                options.headers.append(\"Cookie\", `${name}=${token}`);\n                break;\n            case \"header\":\n            default:\n                options.headers.set(name, token);\n                break;\n        }\n        return;\n    }\n};\nexports.setAuthParams = setAuthParams;\nconst buildUrl = (options) => {\n    const url = (0, exports.getUrl)({\n        baseUrl: options.baseUrl,\n        path: options.path,\n        query: options.query,\n        querySerializer: typeof options.querySerializer === \"function\"\n            ? options.querySerializer\n            : (0, exports.createQuerySerializer)(options.querySerializer),\n        url: options.url,\n    });\n    return url;\n};\nexports.buildUrl = buildUrl;\nconst getUrl = ({ baseUrl, path, query, querySerializer, url: _url, }) => {\n    const pathUrl = _url.startsWith(\"/\") ? _url : `/${_url}`;\n    let url = (baseUrl ?? \"\") + pathUrl;\n    if (path) {\n        url = defaultPathSerializer({ path, url });\n    }\n    let search = query ? querySerializer(query) : \"\";\n    if (search.startsWith(\"?\")) {\n        search = search.substring(1);\n    }\n    if (search) {\n        url += `?${search}`;\n    }\n    return url;\n};\nexports.getUrl = getUrl;\nconst mergeConfigs = (a, b) => {\n    const config = { ...a, ...b };\n    if (config.baseUrl?.endsWith(\"/\")) {\n        config.baseUrl = config.baseUrl.substring(0, config.baseUrl.length - 1);\n    }\n    config.headers = (0, exports.mergeHeaders)(a.headers, b.headers);\n    return config;\n};\nexports.mergeConfigs = mergeConfigs;\nconst mergeHeaders = (...headers) => {\n    const mergedHeaders = new Headers();\n    for (const header of headers) {\n        if (!header || typeof header !== \"object\") {\n            continue;\n        }\n        const iterator = header instanceof Headers ? header.entries() : Object.entries(header);\n        for (const [key, value] of iterator) {\n            if (value === null) {\n                mergedHeaders.delete(key);\n            }\n            else if (Array.isArray(value)) {\n                for (const v of value) {\n                    mergedHeaders.append(key, v);\n                }\n            }\n            else if (value !== undefined) {\n                // assume object headers are meant to be JSON stringified, i.e. their\n                // content value in OpenAPI specification is 'application/json'\n                mergedHeaders.set(key, typeof value === \"object\" ? JSON.stringify(value) : value);\n            }\n        }\n    }\n    return mergedHeaders;\n};\nexports.mergeHeaders = mergeHeaders;\nclass Interceptors {\n    constructor() {\n        Object.defineProperty(this, \"_fns\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._fns = [];\n    }\n    clear() {\n        this._fns = [];\n    }\n    getInterceptorIndex(id) {\n        if (typeof id === \"number\") {\n            return this._fns[id] ? id : -1;\n        }\n        else {\n            return this._fns.indexOf(id);\n        }\n    }\n    exists(id) {\n        const index = this.getInterceptorIndex(id);\n        return !!this._fns[index];\n    }\n    eject(id) {\n        const index = this.getInterceptorIndex(id);\n        if (this._fns[index]) {\n            this._fns[index] = null;\n        }\n    }\n    update(id, fn) {\n        const index = this.getInterceptorIndex(id);\n        if (this._fns[index]) {\n            this._fns[index] = fn;\n            return id;\n        }\n        else {\n            return false;\n        }\n    }\n    use(fn) {\n        this._fns = [...this._fns, fn];\n        return this._fns.length - 1;\n    }\n}\n// do not add `Middleware` as return type so we can use _fns internally\nconst createInterceptors = () => ({\n    error: new Interceptors(),\n    request: new Interceptors(),\n    response: new Interceptors(),\n});\nexports.createInterceptors = createInterceptors;\nconst defaultQuerySerializer = (0, exports.createQuerySerializer)({\n    allowReserved: false,\n    array: {\n        explode: true,\n        style: \"form\",\n    },\n    object: {\n        explode: true,\n        style: \"deepObject\",\n    },\n});\nconst defaultHeaders = {\n    \"Content-Type\": \"application/json\",\n};\nconst createConfig = (override = {}) => ({\n    ...bodySerializer_js_1.jsonBodySerializer,\n    headers: defaultHeaders,\n    parseAs: \"auto\",\n    querySerializer: defaultQuerySerializer,\n    ...override,\n});\nexports.createConfig = createConfig;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jbGllbnQvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsMEJBQTBCLEdBQUcsb0JBQW9CLEdBQUcsb0JBQW9CLEdBQUcsY0FBYyxHQUFHLGdCQUFnQixHQUFHLHFCQUFxQixHQUFHLGtCQUFrQixHQUFHLDZCQUE2QjtBQUNoTixrQkFBa0IsbUJBQU8sQ0FBQyxnR0FBaUI7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsb0hBQTJCO0FBQy9ELDRCQUE0QixtQkFBTyxDQUFDLG9IQUEyQjtBQUMvRCx5QkFBeUIsSUFBSSxJQUFJO0FBQ2pDLGlDQUFpQyxpQkFBaUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RkFBd0YsNkJBQTZCO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsRUFBRTtBQUM3QztBQUNBO0FBQ0EsaUJBQWlCLEVBQUU7QUFDbkI7QUFDQTtBQUNBLDRFQUE0RSxNQUFNO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsZ0NBQWdDLElBQUk7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLCtCQUErQixzQkFBc0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxLQUFLLEdBQUcsTUFBTTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsa0JBQWtCLG1EQUFtRDtBQUNyRSxzREFBc0QsS0FBSztBQUMzRDtBQUNBO0FBQ0Esc0NBQXNDLFdBQVc7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jbGllbnQvdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUNvbmZpZyA9IGV4cG9ydHMuY3JlYXRlSW50ZXJjZXB0b3JzID0gZXhwb3J0cy5tZXJnZUhlYWRlcnMgPSBleHBvcnRzLm1lcmdlQ29uZmlncyA9IGV4cG9ydHMuZ2V0VXJsID0gZXhwb3J0cy5idWlsZFVybCA9IGV4cG9ydHMuc2V0QXV0aFBhcmFtcyA9IGV4cG9ydHMuZ2V0UGFyc2VBcyA9IGV4cG9ydHMuY3JlYXRlUXVlcnlTZXJpYWxpemVyID0gdm9pZCAwO1xuY29uc3QgYXV0aF9qc18xID0gcmVxdWlyZShcIi4uL2NvcmUvYXV0aC5qc1wiKTtcbmNvbnN0IGJvZHlTZXJpYWxpemVyX2pzXzEgPSByZXF1aXJlKFwiLi4vY29yZS9ib2R5U2VyaWFsaXplci5qc1wiKTtcbmNvbnN0IHBhdGhTZXJpYWxpemVyX2pzXzEgPSByZXF1aXJlKFwiLi4vY29yZS9wYXRoU2VyaWFsaXplci5qc1wiKTtcbmNvbnN0IFBBVEhfUEFSQU1fUkUgPSAvXFx7W157fV0rXFx9L2c7XG5jb25zdCBkZWZhdWx0UGF0aFNlcmlhbGl6ZXIgPSAoeyBwYXRoLCB1cmw6IF91cmwgfSkgPT4ge1xuICAgIGxldCB1cmwgPSBfdXJsO1xuICAgIGNvbnN0IG1hdGNoZXMgPSBfdXJsLm1hdGNoKFBBVEhfUEFSQU1fUkUpO1xuICAgIGlmIChtYXRjaGVzKSB7XG4gICAgICAgIGZvciAoY29uc3QgbWF0Y2ggb2YgbWF0Y2hlcykge1xuICAgICAgICAgICAgbGV0IGV4cGxvZGUgPSBmYWxzZTtcbiAgICAgICAgICAgIGxldCBuYW1lID0gbWF0Y2guc3Vic3RyaW5nKDEsIG1hdGNoLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgbGV0IHN0eWxlID0gXCJzaW1wbGVcIjtcbiAgICAgICAgICAgIGlmIChuYW1lLmVuZHNXaXRoKFwiKlwiKSkge1xuICAgICAgICAgICAgICAgIGV4cGxvZGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIG5hbWUgPSBuYW1lLnN1YnN0cmluZygwLCBuYW1lLmxlbmd0aCAtIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG5hbWUuc3RhcnRzV2l0aChcIi5cIikpIHtcbiAgICAgICAgICAgICAgICBuYW1lID0gbmFtZS5zdWJzdHJpbmcoMSk7XG4gICAgICAgICAgICAgICAgc3R5bGUgPSBcImxhYmVsXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChuYW1lLnN0YXJ0c1dpdGgoXCI7XCIpKSB7XG4gICAgICAgICAgICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyaW5nKDEpO1xuICAgICAgICAgICAgICAgIHN0eWxlID0gXCJtYXRyaXhcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gcGF0aFtuYW1lXTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICB1cmwgPSB1cmwucmVwbGFjZShtYXRjaCwgKDAsIHBhdGhTZXJpYWxpemVyX2pzXzEuc2VyaWFsaXplQXJyYXlQYXJhbSkoeyBleHBsb2RlLCBuYW1lLCBzdHlsZSwgdmFsdWUgfSkpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgIHVybCA9IHVybC5yZXBsYWNlKG1hdGNoLCAoMCwgcGF0aFNlcmlhbGl6ZXJfanNfMS5zZXJpYWxpemVPYmplY3RQYXJhbSkoe1xuICAgICAgICAgICAgICAgICAgICBleHBsb2RlLFxuICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZU9ubHk6IHRydWUsXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHN0eWxlID09PSBcIm1hdHJpeFwiKSB7XG4gICAgICAgICAgICAgICAgdXJsID0gdXJsLnJlcGxhY2UobWF0Y2gsIGA7JHsoMCwgcGF0aFNlcmlhbGl6ZXJfanNfMS5zZXJpYWxpemVQcmltaXRpdmVQYXJhbSkoe1xuICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICAgICAgfSl9YCk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByZXBsYWNlVmFsdWUgPSBlbmNvZGVVUklDb21wb25lbnQoc3R5bGUgPT09IFwibGFiZWxcIiA/IGAuJHt2YWx1ZX1gIDogdmFsdWUpO1xuICAgICAgICAgICAgdXJsID0gdXJsLnJlcGxhY2UobWF0Y2gsIHJlcGxhY2VWYWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHVybDtcbn07XG5jb25zdCBjcmVhdGVRdWVyeVNlcmlhbGl6ZXIgPSAoeyBhbGxvd1Jlc2VydmVkLCBhcnJheSwgb2JqZWN0LCB9ID0ge30pID0+IHtcbiAgICBjb25zdCBxdWVyeVNlcmlhbGl6ZXIgPSAocXVlcnlQYXJhbXMpID0+IHtcbiAgICAgICAgY29uc3Qgc2VhcmNoID0gW107XG4gICAgICAgIGlmIChxdWVyeVBhcmFtcyAmJiB0eXBlb2YgcXVlcnlQYXJhbXMgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgbmFtZSBpbiBxdWVyeVBhcmFtcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gcXVlcnlQYXJhbXNbbmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzZXJpYWxpemVkQXJyYXkgPSAoMCwgcGF0aFNlcmlhbGl6ZXJfanNfMS5zZXJpYWxpemVBcnJheVBhcmFtKSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbGxvd1Jlc2VydmVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwbG9kZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogXCJmb3JtXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLmFycmF5LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlcmlhbGl6ZWRBcnJheSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaC5wdXNoKHNlcmlhbGl6ZWRBcnJheSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzZXJpYWxpemVkT2JqZWN0ID0gKDAsIHBhdGhTZXJpYWxpemVyX2pzXzEuc2VyaWFsaXplT2JqZWN0UGFyYW0pKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93UmVzZXJ2ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBsb2RlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiBcImRlZXBPYmplY3RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLm9iamVjdCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZXJpYWxpemVkT2JqZWN0KVxuICAgICAgICAgICAgICAgICAgICAgICAgc2VhcmNoLnB1c2goc2VyaWFsaXplZE9iamVjdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzZXJpYWxpemVkUHJpbWl0aXZlID0gKDAsIHBhdGhTZXJpYWxpemVyX2pzXzEuc2VyaWFsaXplUHJpbWl0aXZlUGFyYW0pKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93UmVzZXJ2ZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlcmlhbGl6ZWRQcmltaXRpdmUpXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2gucHVzaChzZXJpYWxpemVkUHJpbWl0aXZlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlYXJjaC5qb2luKFwiJlwiKTtcbiAgICB9O1xuICAgIHJldHVybiBxdWVyeVNlcmlhbGl6ZXI7XG59O1xuZXhwb3J0cy5jcmVhdGVRdWVyeVNlcmlhbGl6ZXIgPSBjcmVhdGVRdWVyeVNlcmlhbGl6ZXI7XG4vKipcbiAqIEluZmVycyBwYXJzZUFzIHZhbHVlIGZyb20gcHJvdmlkZWQgQ29udGVudC1UeXBlIGhlYWRlci5cbiAqL1xuY29uc3QgZ2V0UGFyc2VBcyA9IChjb250ZW50VHlwZSkgPT4ge1xuICAgIGlmICghY29udGVudFR5cGUpIHtcbiAgICAgICAgLy8gSWYgbm8gQ29udGVudC1UeXBlIGhlYWRlciBpcyBwcm92aWRlZCwgdGhlIGJlc3Qgd2UgY2FuIGRvIGlzIHJldHVybiB0aGUgcmF3IHJlc3BvbnNlIGJvZHksXG4gICAgICAgIC8vIHdoaWNoIGlzIGVmZmVjdGl2ZWx5IHRoZSBzYW1lIGFzIHRoZSAnc3RyZWFtJyBvcHRpb24uXG4gICAgICAgIHJldHVybiBcInN0cmVhbVwiO1xuICAgIH1cbiAgICBjb25zdCBjbGVhbkNvbnRlbnQgPSBjb250ZW50VHlwZS5zcGxpdChcIjtcIilbMF0/LnRyaW0oKTtcbiAgICBpZiAoIWNsZWFuQ29udGVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChjbGVhbkNvbnRlbnQuc3RhcnRzV2l0aChcImFwcGxpY2F0aW9uL2pzb25cIikgfHxcbiAgICAgICAgY2xlYW5Db250ZW50LmVuZHNXaXRoKFwiK2pzb25cIikpIHtcbiAgICAgICAgcmV0dXJuIFwianNvblwiO1xuICAgIH1cbiAgICBpZiAoY2xlYW5Db250ZW50ID09PSBcIm11bHRpcGFydC9mb3JtLWRhdGFcIikge1xuICAgICAgICByZXR1cm4gXCJmb3JtRGF0YVwiO1xuICAgIH1cbiAgICBpZiAoW1wiYXBwbGljYXRpb24vXCIsIFwiYXVkaW8vXCIsIFwiaW1hZ2UvXCIsIFwidmlkZW8vXCJdLnNvbWUoKHR5cGUpID0+IGNsZWFuQ29udGVudC5zdGFydHNXaXRoKHR5cGUpKSkge1xuICAgICAgICByZXR1cm4gXCJibG9iXCI7XG4gICAgfVxuICAgIGlmIChjbGVhbkNvbnRlbnQuc3RhcnRzV2l0aChcInRleHQvXCIpKSB7XG4gICAgICAgIHJldHVybiBcInRleHRcIjtcbiAgICB9XG4gICAgcmV0dXJuO1xufTtcbmV4cG9ydHMuZ2V0UGFyc2VBcyA9IGdldFBhcnNlQXM7XG5jb25zdCBzZXRBdXRoUGFyYW1zID0gYXN5bmMgKHsgc2VjdXJpdHksIC4uLm9wdGlvbnMgfSkgPT4ge1xuICAgIGZvciAoY29uc3QgYXV0aCBvZiBzZWN1cml0eSkge1xuICAgICAgICBjb25zdCB0b2tlbiA9IGF3YWl0ICgwLCBhdXRoX2pzXzEuZ2V0QXV0aFRva2VuKShhdXRoLCBvcHRpb25zLmF1dGgpO1xuICAgICAgICBpZiAoIXRva2VuKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuYW1lID0gYXV0aC5uYW1lID8/IFwiQXV0aG9yaXphdGlvblwiO1xuICAgICAgICBzd2l0Y2ggKGF1dGguaW4pIHtcbiAgICAgICAgICAgIGNhc2UgXCJxdWVyeVwiOlxuICAgICAgICAgICAgICAgIGlmICghb3B0aW9ucy5xdWVyeSkge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zLnF1ZXJ5ID0ge307XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG9wdGlvbnMucXVlcnlbbmFtZV0gPSB0b2tlbjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJjb29raWVcIjpcbiAgICAgICAgICAgICAgICBvcHRpb25zLmhlYWRlcnMuYXBwZW5kKFwiQ29va2llXCIsIGAke25hbWV9PSR7dG9rZW59YCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiaGVhZGVyXCI6XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIG9wdGlvbnMuaGVhZGVycy5zZXQobmFtZSwgdG9rZW4pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG59O1xuZXhwb3J0cy5zZXRBdXRoUGFyYW1zID0gc2V0QXV0aFBhcmFtcztcbmNvbnN0IGJ1aWxkVXJsID0gKG9wdGlvbnMpID0+IHtcbiAgICBjb25zdCB1cmwgPSAoMCwgZXhwb3J0cy5nZXRVcmwpKHtcbiAgICAgICAgYmFzZVVybDogb3B0aW9ucy5iYXNlVXJsLFxuICAgICAgICBwYXRoOiBvcHRpb25zLnBhdGgsXG4gICAgICAgIHF1ZXJ5OiBvcHRpb25zLnF1ZXJ5LFxuICAgICAgICBxdWVyeVNlcmlhbGl6ZXI6IHR5cGVvZiBvcHRpb25zLnF1ZXJ5U2VyaWFsaXplciA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICAgICA/IG9wdGlvbnMucXVlcnlTZXJpYWxpemVyXG4gICAgICAgICAgICA6ICgwLCBleHBvcnRzLmNyZWF0ZVF1ZXJ5U2VyaWFsaXplcikob3B0aW9ucy5xdWVyeVNlcmlhbGl6ZXIpLFxuICAgICAgICB1cmw6IG9wdGlvbnMudXJsLFxuICAgIH0pO1xuICAgIHJldHVybiB1cmw7XG59O1xuZXhwb3J0cy5idWlsZFVybCA9IGJ1aWxkVXJsO1xuY29uc3QgZ2V0VXJsID0gKHsgYmFzZVVybCwgcGF0aCwgcXVlcnksIHF1ZXJ5U2VyaWFsaXplciwgdXJsOiBfdXJsLCB9KSA9PiB7XG4gICAgY29uc3QgcGF0aFVybCA9IF91cmwuc3RhcnRzV2l0aChcIi9cIikgPyBfdXJsIDogYC8ke191cmx9YDtcbiAgICBsZXQgdXJsID0gKGJhc2VVcmwgPz8gXCJcIikgKyBwYXRoVXJsO1xuICAgIGlmIChwYXRoKSB7XG4gICAgICAgIHVybCA9IGRlZmF1bHRQYXRoU2VyaWFsaXplcih7IHBhdGgsIHVybCB9KTtcbiAgICB9XG4gICAgbGV0IHNlYXJjaCA9IHF1ZXJ5ID8gcXVlcnlTZXJpYWxpemVyKHF1ZXJ5KSA6IFwiXCI7XG4gICAgaWYgKHNlYXJjaC5zdGFydHNXaXRoKFwiP1wiKSkge1xuICAgICAgICBzZWFyY2ggPSBzZWFyY2guc3Vic3RyaW5nKDEpO1xuICAgIH1cbiAgICBpZiAoc2VhcmNoKSB7XG4gICAgICAgIHVybCArPSBgPyR7c2VhcmNofWA7XG4gICAgfVxuICAgIHJldHVybiB1cmw7XG59O1xuZXhwb3J0cy5nZXRVcmwgPSBnZXRVcmw7XG5jb25zdCBtZXJnZUNvbmZpZ3MgPSAoYSwgYikgPT4ge1xuICAgIGNvbnN0IGNvbmZpZyA9IHsgLi4uYSwgLi4uYiB9O1xuICAgIGlmIChjb25maWcuYmFzZVVybD8uZW5kc1dpdGgoXCIvXCIpKSB7XG4gICAgICAgIGNvbmZpZy5iYXNlVXJsID0gY29uZmlnLmJhc2VVcmwuc3Vic3RyaW5nKDAsIGNvbmZpZy5iYXNlVXJsLmxlbmd0aCAtIDEpO1xuICAgIH1cbiAgICBjb25maWcuaGVhZGVycyA9ICgwLCBleHBvcnRzLm1lcmdlSGVhZGVycykoYS5oZWFkZXJzLCBiLmhlYWRlcnMpO1xuICAgIHJldHVybiBjb25maWc7XG59O1xuZXhwb3J0cy5tZXJnZUNvbmZpZ3MgPSBtZXJnZUNvbmZpZ3M7XG5jb25zdCBtZXJnZUhlYWRlcnMgPSAoLi4uaGVhZGVycykgPT4ge1xuICAgIGNvbnN0IG1lcmdlZEhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICAgIGZvciAoY29uc3QgaGVhZGVyIG9mIGhlYWRlcnMpIHtcbiAgICAgICAgaWYgKCFoZWFkZXIgfHwgdHlwZW9mIGhlYWRlciAhPT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaXRlcmF0b3IgPSBoZWFkZXIgaW5zdGFuY2VvZiBIZWFkZXJzID8gaGVhZGVyLmVudHJpZXMoKSA6IE9iamVjdC5lbnRyaWVzKGhlYWRlcik7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGl0ZXJhdG9yKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBtZXJnZWRIZWFkZXJzLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHYgb2YgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVyZ2VkSGVhZGVycy5hcHBlbmQoa2V5LCB2KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgLy8gYXNzdW1lIG9iamVjdCBoZWFkZXJzIGFyZSBtZWFudCB0byBiZSBKU09OIHN0cmluZ2lmaWVkLCBpLmUuIHRoZWlyXG4gICAgICAgICAgICAgICAgLy8gY29udGVudCB2YWx1ZSBpbiBPcGVuQVBJIHNwZWNpZmljYXRpb24gaXMgJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgICAgICAgICAgbWVyZ2VkSGVhZGVycy5zZXQoa2V5LCB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgPyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgOiB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1lcmdlZEhlYWRlcnM7XG59O1xuZXhwb3J0cy5tZXJnZUhlYWRlcnMgPSBtZXJnZUhlYWRlcnM7XG5jbGFzcyBJbnRlcmNlcHRvcnMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfZm5zXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX2ZucyA9IFtdO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5fZm5zID0gW107XG4gICAgfVxuICAgIGdldEludGVyY2VwdG9ySW5kZXgoaWQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Zuc1tpZF0gPyBpZCA6IC0xO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Zucy5pbmRleE9mKGlkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBleGlzdHMoaWQpIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmdldEludGVyY2VwdG9ySW5kZXgoaWQpO1xuICAgICAgICByZXR1cm4gISF0aGlzLl9mbnNbaW5kZXhdO1xuICAgIH1cbiAgICBlamVjdChpZCkge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuZ2V0SW50ZXJjZXB0b3JJbmRleChpZCk7XG4gICAgICAgIGlmICh0aGlzLl9mbnNbaW5kZXhdKSB7XG4gICAgICAgICAgICB0aGlzLl9mbnNbaW5kZXhdID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUoaWQsIGZuKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5nZXRJbnRlcmNlcHRvckluZGV4KGlkKTtcbiAgICAgICAgaWYgKHRoaXMuX2Zuc1tpbmRleF0pIHtcbiAgICAgICAgICAgIHRoaXMuX2Zuc1tpbmRleF0gPSBmbjtcbiAgICAgICAgICAgIHJldHVybiBpZDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1c2UoZm4pIHtcbiAgICAgICAgdGhpcy5fZm5zID0gWy4uLnRoaXMuX2ZucywgZm5dO1xuICAgICAgICByZXR1cm4gdGhpcy5fZm5zLmxlbmd0aCAtIDE7XG4gICAgfVxufVxuLy8gZG8gbm90IGFkZCBgTWlkZGxld2FyZWAgYXMgcmV0dXJuIHR5cGUgc28gd2UgY2FuIHVzZSBfZm5zIGludGVybmFsbHlcbmNvbnN0IGNyZWF0ZUludGVyY2VwdG9ycyA9ICgpID0+ICh7XG4gICAgZXJyb3I6IG5ldyBJbnRlcmNlcHRvcnMoKSxcbiAgICByZXF1ZXN0OiBuZXcgSW50ZXJjZXB0b3JzKCksXG4gICAgcmVzcG9uc2U6IG5ldyBJbnRlcmNlcHRvcnMoKSxcbn0pO1xuZXhwb3J0cy5jcmVhdGVJbnRlcmNlcHRvcnMgPSBjcmVhdGVJbnRlcmNlcHRvcnM7XG5jb25zdCBkZWZhdWx0UXVlcnlTZXJpYWxpemVyID0gKDAsIGV4cG9ydHMuY3JlYXRlUXVlcnlTZXJpYWxpemVyKSh7XG4gICAgYWxsb3dSZXNlcnZlZDogZmFsc2UsXG4gICAgYXJyYXk6IHtcbiAgICAgICAgZXhwbG9kZTogdHJ1ZSxcbiAgICAgICAgc3R5bGU6IFwiZm9ybVwiLFxuICAgIH0sXG4gICAgb2JqZWN0OiB7XG4gICAgICAgIGV4cGxvZGU6IHRydWUsXG4gICAgICAgIHN0eWxlOiBcImRlZXBPYmplY3RcIixcbiAgICB9LFxufSk7XG5jb25zdCBkZWZhdWx0SGVhZGVycyA9IHtcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbn07XG5jb25zdCBjcmVhdGVDb25maWcgPSAob3ZlcnJpZGUgPSB7fSkgPT4gKHtcbiAgICAuLi5ib2R5U2VyaWFsaXplcl9qc18xLmpzb25Cb2R5U2VyaWFsaXplcixcbiAgICBoZWFkZXJzOiBkZWZhdWx0SGVhZGVycyxcbiAgICBwYXJzZUFzOiBcImF1dG9cIixcbiAgICBxdWVyeVNlcmlhbGl6ZXI6IGRlZmF1bHRRdWVyeVNlcmlhbGl6ZXIsXG4gICAgLi4ub3ZlcnJpZGUsXG59KTtcbmV4cG9ydHMuY3JlYXRlQ29uZmlnID0gY3JlYXRlQ29uZmlnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/auth.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/auth.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAuthToken = void 0;\nconst getAuthToken = async (auth, callback) => {\n    const token = typeof callback === \"function\" ? await callback(auth) : callback;\n    if (!token) {\n        return;\n    }\n    if (auth.scheme === \"bearer\") {\n        return `Bearer ${token}`;\n    }\n    if (auth.scheme === \"basic\") {\n        return `Basic ${btoa(token)}`;\n    }\n    return token;\n};\nexports.getAuthToken = getAuthToken;\n//# sourceMappingURL=auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jb3JlL2F1dGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixNQUFNO0FBQy9CO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvaW5zaWdodC9kaXN0L2Nqcy9jbGllbnQvY29yZS9hdXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRBdXRoVG9rZW4gPSB2b2lkIDA7XG5jb25zdCBnZXRBdXRoVG9rZW4gPSBhc3luYyAoYXV0aCwgY2FsbGJhY2spID0+IHtcbiAgICBjb25zdCB0b2tlbiA9IHR5cGVvZiBjYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiID8gYXdhaXQgY2FsbGJhY2soYXV0aCkgOiBjYWxsYmFjaztcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGF1dGguc2NoZW1lID09PSBcImJlYXJlclwiKSB7XG4gICAgICAgIHJldHVybiBgQmVhcmVyICR7dG9rZW59YDtcbiAgICB9XG4gICAgaWYgKGF1dGguc2NoZW1lID09PSBcImJhc2ljXCIpIHtcbiAgICAgICAgcmV0dXJuIGBCYXNpYyAke2J0b2EodG9rZW4pfWA7XG4gICAgfVxuICAgIHJldHVybiB0b2tlbjtcbn07XG5leHBvcnRzLmdldEF1dGhUb2tlbiA9IGdldEF1dGhUb2tlbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/auth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/bodySerializer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/bodySerializer.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.urlSearchParamsBodySerializer = exports.jsonBodySerializer = exports.formDataBodySerializer = void 0;\nconst serializeFormDataPair = (data, key, value) => {\n    if (typeof value === \"string\" || value instanceof Blob) {\n        data.append(key, value);\n    }\n    else {\n        data.append(key, JSON.stringify(value));\n    }\n};\nconst serializeUrlSearchParamsPair = (data, key, value) => {\n    if (typeof value === \"string\") {\n        data.append(key, value);\n    }\n    else {\n        data.append(key, JSON.stringify(value));\n    }\n};\nexports.formDataBodySerializer = {\n    bodySerializer: (body) => {\n        const data = new FormData();\n        Object.entries(body).forEach(([key, value]) => {\n            if (value === undefined || value === null) {\n                return;\n            }\n            if (Array.isArray(value)) {\n                value.forEach((v) => serializeFormDataPair(data, key, v));\n            }\n            else {\n                serializeFormDataPair(data, key, value);\n            }\n        });\n        return data;\n    },\n};\nexports.jsonBodySerializer = {\n    bodySerializer: (body) => JSON.stringify(body, (_key, value) => typeof value === \"bigint\" ? value.toString() : value),\n};\nexports.urlSearchParamsBodySerializer = {\n    bodySerializer: (body) => {\n        const data = new URLSearchParams();\n        Object.entries(body).forEach(([key, value]) => {\n            if (value === undefined || value === null) {\n                return;\n            }\n            if (Array.isArray(value)) {\n                value.forEach((v) => serializeUrlSearchParamsPair(data, key, v));\n            }\n            else {\n                serializeUrlSearchParamsPair(data, key, value);\n            }\n        });\n        return data.toString();\n    },\n};\n//# sourceMappingURL=bodySerializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jb3JlL2JvZHlTZXJpYWxpemVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQyxHQUFHLDBCQUEwQixHQUFHLDhCQUE4QjtBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jb3JlL2JvZHlTZXJpYWxpemVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51cmxTZWFyY2hQYXJhbXNCb2R5U2VyaWFsaXplciA9IGV4cG9ydHMuanNvbkJvZHlTZXJpYWxpemVyID0gZXhwb3J0cy5mb3JtRGF0YUJvZHlTZXJpYWxpemVyID0gdm9pZCAwO1xuY29uc3Qgc2VyaWFsaXplRm9ybURhdGFQYWlyID0gKGRhdGEsIGtleSwgdmFsdWUpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiIHx8IHZhbHVlIGluc3RhbmNlb2YgQmxvYikge1xuICAgICAgICBkYXRhLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRhdGEuYXBwZW5kKGtleSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgICB9XG59O1xuY29uc3Qgc2VyaWFsaXplVXJsU2VhcmNoUGFyYW1zUGFpciA9IChkYXRhLCBrZXksIHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBkYXRhLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRhdGEuYXBwZW5kKGtleSwgSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgICB9XG59O1xuZXhwb3J0cy5mb3JtRGF0YUJvZHlTZXJpYWxpemVyID0ge1xuICAgIGJvZHlTZXJpYWxpemVyOiAoYm9keSkgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGJvZHkpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKCh2KSA9PiBzZXJpYWxpemVGb3JtRGF0YVBhaXIoZGF0YSwga2V5LCB2KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXJpYWxpemVGb3JtRGF0YVBhaXIoZGF0YSwga2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9LFxufTtcbmV4cG9ydHMuanNvbkJvZHlTZXJpYWxpemVyID0ge1xuICAgIGJvZHlTZXJpYWxpemVyOiAoYm9keSkgPT4gSlNPTi5zdHJpbmdpZnkoYm9keSwgKF9rZXksIHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgPT09IFwiYmlnaW50XCIgPyB2YWx1ZS50b1N0cmluZygpIDogdmFsdWUpLFxufTtcbmV4cG9ydHMudXJsU2VhcmNoUGFyYW1zQm9keVNlcmlhbGl6ZXIgPSB7XG4gICAgYm9keVNlcmlhbGl6ZXI6IChib2R5KSA9PiB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGJvZHkpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKCh2KSA9PiBzZXJpYWxpemVVcmxTZWFyY2hQYXJhbXNQYWlyKGRhdGEsIGtleSwgdikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc2VyaWFsaXplVXJsU2VhcmNoUGFyYW1zUGFpcihkYXRhLCBrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkYXRhLnRvU3RyaW5nKCk7XG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ib2R5U2VyaWFsaXplci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/bodySerializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/params.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/params.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildClientParams = void 0;\nconst extraPrefixesMap = {\n    $body_: \"body\",\n    $headers_: \"headers\",\n    $path_: \"path\",\n    $query_: \"query\",\n};\nconst extraPrefixes = Object.entries(extraPrefixesMap);\nconst buildKeyMap = (fields, map) => {\n    if (!map) {\n        map = new Map();\n    }\n    for (const config of fields) {\n        if (\"in\" in config) {\n            if (config.key) {\n                map.set(config.key, {\n                    in: config.in,\n                    map: config.map,\n                });\n            }\n        }\n        else if (config.args) {\n            buildKeyMap(config.args, map);\n        }\n    }\n    return map;\n};\nconst stripEmptySlots = (params) => {\n    for (const [slot, value] of Object.entries(params)) {\n        if (value && typeof value === \"object\" && !Object.keys(value).length) {\n            delete params[slot];\n        }\n    }\n};\nconst buildClientParams = (args, fields) => {\n    const params = {\n        body: {},\n        headers: {},\n        path: {},\n        query: {},\n    };\n    const map = buildKeyMap(fields);\n    let config;\n    for (const [index, arg] of args.entries()) {\n        if (fields[index]) {\n            config = fields[index];\n        }\n        if (!config) {\n            continue;\n        }\n        if (\"in\" in config) {\n            if (config.key) {\n                const field = map.get(config.key);\n                const name = field.map || config.key;\n                params[field.in][name] = arg;\n            }\n            else {\n                params.body = arg;\n            }\n        }\n        else {\n            for (const [key, value] of Object.entries(arg ?? {})) {\n                const field = map.get(key);\n                if (field) {\n                    const name = field.map || key;\n                    params[field.in][name] = value;\n                }\n                else {\n                    const extra = extraPrefixes.find(([prefix]) => key.startsWith(prefix));\n                    if (extra) {\n                        const [prefix, slot] = extra;\n                        params[slot][key.slice(prefix.length)] = value;\n                    }\n                    else {\n                        for (const [slot, allowed] of Object.entries(config.allowExtra ?? {})) {\n                            if (allowed) {\n                                params[slot][key] = value;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    stripEmptySlots(params);\n    return params;\n};\nexports.buildClientParams = buildClientParams;\n//# sourceMappingURL=params.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jb3JlL3BhcmFtcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCLG1CQUFtQjtBQUNuQixnQkFBZ0I7QUFDaEIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRDtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RkFBNEY7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvaW5zaWdodC9kaXN0L2Nqcy9jbGllbnQvY29yZS9wYXJhbXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJ1aWxkQ2xpZW50UGFyYW1zID0gdm9pZCAwO1xuY29uc3QgZXh0cmFQcmVmaXhlc01hcCA9IHtcbiAgICAkYm9keV86IFwiYm9keVwiLFxuICAgICRoZWFkZXJzXzogXCJoZWFkZXJzXCIsXG4gICAgJHBhdGhfOiBcInBhdGhcIixcbiAgICAkcXVlcnlfOiBcInF1ZXJ5XCIsXG59O1xuY29uc3QgZXh0cmFQcmVmaXhlcyA9IE9iamVjdC5lbnRyaWVzKGV4dHJhUHJlZml4ZXNNYXApO1xuY29uc3QgYnVpbGRLZXlNYXAgPSAoZmllbGRzLCBtYXApID0+IHtcbiAgICBpZiAoIW1hcCkge1xuICAgICAgICBtYXAgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgY29uZmlnIG9mIGZpZWxkcykge1xuICAgICAgICBpZiAoXCJpblwiIGluIGNvbmZpZykge1xuICAgICAgICAgICAgaWYgKGNvbmZpZy5rZXkpIHtcbiAgICAgICAgICAgICAgICBtYXAuc2V0KGNvbmZpZy5rZXksIHtcbiAgICAgICAgICAgICAgICAgICAgaW46IGNvbmZpZy5pbixcbiAgICAgICAgICAgICAgICAgICAgbWFwOiBjb25maWcubWFwLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNvbmZpZy5hcmdzKSB7XG4gICAgICAgICAgICBidWlsZEtleU1hcChjb25maWcuYXJncywgbWFwKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWFwO1xufTtcbmNvbnN0IHN0cmlwRW1wdHlTbG90cyA9IChwYXJhbXMpID0+IHtcbiAgICBmb3IgKGNvbnN0IFtzbG90LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocGFyYW1zKSkge1xuICAgICAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmICFPYmplY3Qua2V5cyh2YWx1ZSkubGVuZ3RoKSB7XG4gICAgICAgICAgICBkZWxldGUgcGFyYW1zW3Nsb3RdO1xuICAgICAgICB9XG4gICAgfVxufTtcbmNvbnN0IGJ1aWxkQ2xpZW50UGFyYW1zID0gKGFyZ3MsIGZpZWxkcykgPT4ge1xuICAgIGNvbnN0IHBhcmFtcyA9IHtcbiAgICAgICAgYm9keToge30sXG4gICAgICAgIGhlYWRlcnM6IHt9LFxuICAgICAgICBwYXRoOiB7fSxcbiAgICAgICAgcXVlcnk6IHt9LFxuICAgIH07XG4gICAgY29uc3QgbWFwID0gYnVpbGRLZXlNYXAoZmllbGRzKTtcbiAgICBsZXQgY29uZmlnO1xuICAgIGZvciAoY29uc3QgW2luZGV4LCBhcmddIG9mIGFyZ3MuZW50cmllcygpKSB7XG4gICAgICAgIGlmIChmaWVsZHNbaW5kZXhdKSB7XG4gICAgICAgICAgICBjb25maWcgPSBmaWVsZHNbaW5kZXhdO1xuICAgICAgICB9XG4gICAgICAgIGlmICghY29uZmlnKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoXCJpblwiIGluIGNvbmZpZykge1xuICAgICAgICAgICAgaWYgKGNvbmZpZy5rZXkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IG1hcC5nZXQoY29uZmlnLmtleSk7XG4gICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IGZpZWxkLm1hcCB8fCBjb25maWcua2V5O1xuICAgICAgICAgICAgICAgIHBhcmFtc1tmaWVsZC5pbl1bbmFtZV0gPSBhcmc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBwYXJhbXMuYm9keSA9IGFyZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGFyZyA/PyB7fSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IG1hcC5nZXQoa2V5KTtcbiAgICAgICAgICAgICAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IGZpZWxkLm1hcCB8fCBrZXk7XG4gICAgICAgICAgICAgICAgICAgIHBhcmFtc1tmaWVsZC5pbl1bbmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4dHJhID0gZXh0cmFQcmVmaXhlcy5maW5kKChbcHJlZml4XSkgPT4ga2V5LnN0YXJ0c1dpdGgocHJlZml4KSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChleHRyYSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgW3ByZWZpeCwgc2xvdF0gPSBleHRyYTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtc1tzbG90XVtrZXkuc2xpY2UocHJlZml4Lmxlbmd0aCldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtzbG90LCBhbGxvd2VkXSBvZiBPYmplY3QuZW50cmllcyhjb25maWcuYWxsb3dFeHRyYSA/PyB7fSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWxsb3dlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXNbc2xvdF1ba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RyaXBFbXB0eVNsb3RzKHBhcmFtcyk7XG4gICAgcmV0dXJuIHBhcmFtcztcbn07XG5leHBvcnRzLmJ1aWxkQ2xpZW50UGFyYW1zID0gYnVpbGRDbGllbnRQYXJhbXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJhbXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/params.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/pathSerializer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/pathSerializer.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.serializeObjectParam = exports.serializePrimitiveParam = exports.serializeArrayParam = exports.separatorObjectExplode = exports.separatorArrayNoExplode = exports.separatorArrayExplode = void 0;\nconst separatorArrayExplode = (style) => {\n    switch (style) {\n        case \"label\":\n            return \".\";\n        case \"matrix\":\n            return \";\";\n        case \"simple\":\n            return \",\";\n        default:\n            return \"&\";\n    }\n};\nexports.separatorArrayExplode = separatorArrayExplode;\nconst separatorArrayNoExplode = (style) => {\n    switch (style) {\n        case \"form\":\n            return \",\";\n        case \"pipeDelimited\":\n            return \"|\";\n        case \"spaceDelimited\":\n            return \"%20\";\n        default:\n            return \",\";\n    }\n};\nexports.separatorArrayNoExplode = separatorArrayNoExplode;\nconst separatorObjectExplode = (style) => {\n    switch (style) {\n        case \"label\":\n            return \".\";\n        case \"matrix\":\n            return \";\";\n        case \"simple\":\n            return \",\";\n        default:\n            return \"&\";\n    }\n};\nexports.separatorObjectExplode = separatorObjectExplode;\nconst serializeArrayParam = ({ allowReserved, explode, name, style, value, }) => {\n    if (!explode) {\n        const joinedValues = (allowReserved ? value : value.map((v) => encodeURIComponent(v))).join((0, exports.separatorArrayNoExplode)(style));\n        switch (style) {\n            case \"label\":\n                return `.${joinedValues}`;\n            case \"matrix\":\n                return `;${name}=${joinedValues}`;\n            case \"simple\":\n                return joinedValues;\n            default:\n                return `${name}=${joinedValues}`;\n        }\n    }\n    const separator = (0, exports.separatorArrayExplode)(style);\n    const joinedValues = value\n        .map((v) => {\n        if (style === \"label\" || style === \"simple\") {\n            return allowReserved ? v : encodeURIComponent(v);\n        }\n        return (0, exports.serializePrimitiveParam)({\n            allowReserved,\n            name,\n            value: v,\n        });\n    })\n        .join(separator);\n    return style === \"label\" || style === \"matrix\"\n        ? separator + joinedValues\n        : joinedValues;\n};\nexports.serializeArrayParam = serializeArrayParam;\nconst serializePrimitiveParam = ({ allowReserved, name, value, }) => {\n    if (value === undefined || value === null) {\n        return \"\";\n    }\n    if (typeof value === \"object\") {\n        throw new Error(\"Deeply-nested arrays/objects aren’t supported. Provide your own `querySerializer()` to handle these.\");\n    }\n    return `${name}=${allowReserved ? value : encodeURIComponent(value)}`;\n};\nexports.serializePrimitiveParam = serializePrimitiveParam;\nconst serializeObjectParam = ({ allowReserved, explode, name, style, value, valueOnly, }) => {\n    if (value instanceof Date) {\n        return valueOnly ? value.toISOString() : `${name}=${value.toISOString()}`;\n    }\n    if (style !== \"deepObject\" && !explode) {\n        let values = [];\n        Object.entries(value).forEach(([key, v]) => {\n            values = [\n                ...values,\n                key,\n                allowReserved ? v : encodeURIComponent(v),\n            ];\n        });\n        const joinedValues = values.join(\",\");\n        switch (style) {\n            case \"form\":\n                return `${name}=${joinedValues}`;\n            case \"label\":\n                return `.${joinedValues}`;\n            case \"matrix\":\n                return `;${name}=${joinedValues}`;\n            default:\n                return joinedValues;\n        }\n    }\n    const separator = (0, exports.separatorObjectExplode)(style);\n    const joinedValues = Object.entries(value)\n        .map(([key, v]) => (0, exports.serializePrimitiveParam)({\n        allowReserved,\n        name: style === \"deepObject\" ? `${name}[${key}]` : key,\n        value: v,\n    }))\n        .join(separator);\n    return style === \"label\" || style === \"matrix\"\n        ? separator + joinedValues\n        : joinedValues;\n};\nexports.serializeObjectParam = serializeObjectParam;\n//# sourceMappingURL=pathSerializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9jb3JlL3BhdGhTZXJpYWxpemVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLCtCQUErQixHQUFHLDJCQUEyQixHQUFHLDhCQUE4QixHQUFHLCtCQUErQixHQUFHLDZCQUE2QjtBQUMvTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsK0JBQStCLDZDQUE2QztBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixhQUFhO0FBQ3hDO0FBQ0EseUJBQXlCLEVBQUUsS0FBSyxHQUFHLGFBQWE7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLEtBQUssR0FBRyxhQUFhO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixtQ0FBbUMsNkJBQTZCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsS0FBSyxHQUFHLGtEQUFrRDtBQUN4RTtBQUNBLCtCQUErQjtBQUMvQixnQ0FBZ0Msd0RBQXdEO0FBQ3hGO0FBQ0Esb0RBQW9ELEtBQUssR0FBRyxvQkFBb0I7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixLQUFLLEdBQUcsYUFBYTtBQUMvQztBQUNBLDJCQUEyQixhQUFhO0FBQ3hDO0FBQ0EseUJBQXlCLEVBQUUsS0FBSyxHQUFHLGFBQWE7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxLQUFLLEdBQUcsSUFBSTtBQUN0RDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2luc2lnaHQvZGlzdC9janMvY2xpZW50L2NvcmUvcGF0aFNlcmlhbGl6ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNlcmlhbGl6ZU9iamVjdFBhcmFtID0gZXhwb3J0cy5zZXJpYWxpemVQcmltaXRpdmVQYXJhbSA9IGV4cG9ydHMuc2VyaWFsaXplQXJyYXlQYXJhbSA9IGV4cG9ydHMuc2VwYXJhdG9yT2JqZWN0RXhwbG9kZSA9IGV4cG9ydHMuc2VwYXJhdG9yQXJyYXlOb0V4cGxvZGUgPSBleHBvcnRzLnNlcGFyYXRvckFycmF5RXhwbG9kZSA9IHZvaWQgMDtcbmNvbnN0IHNlcGFyYXRvckFycmF5RXhwbG9kZSA9IChzdHlsZSkgPT4ge1xuICAgIHN3aXRjaCAoc3R5bGUpIHtcbiAgICAgICAgY2FzZSBcImxhYmVsXCI6XG4gICAgICAgICAgICByZXR1cm4gXCIuXCI7XG4gICAgICAgIGNhc2UgXCJtYXRyaXhcIjpcbiAgICAgICAgICAgIHJldHVybiBcIjtcIjtcbiAgICAgICAgY2FzZSBcInNpbXBsZVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiLFwiO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFwiJlwiO1xuICAgIH1cbn07XG5leHBvcnRzLnNlcGFyYXRvckFycmF5RXhwbG9kZSA9IHNlcGFyYXRvckFycmF5RXhwbG9kZTtcbmNvbnN0IHNlcGFyYXRvckFycmF5Tm9FeHBsb2RlID0gKHN0eWxlKSA9PiB7XG4gICAgc3dpdGNoIChzdHlsZSkge1xuICAgICAgICBjYXNlIFwiZm9ybVwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiLFwiO1xuICAgICAgICBjYXNlIFwicGlwZURlbGltaXRlZFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwifFwiO1xuICAgICAgICBjYXNlIFwic3BhY2VEZWxpbWl0ZWRcIjpcbiAgICAgICAgICAgIHJldHVybiBcIiUyMFwiO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFwiLFwiO1xuICAgIH1cbn07XG5leHBvcnRzLnNlcGFyYXRvckFycmF5Tm9FeHBsb2RlID0gc2VwYXJhdG9yQXJyYXlOb0V4cGxvZGU7XG5jb25zdCBzZXBhcmF0b3JPYmplY3RFeHBsb2RlID0gKHN0eWxlKSA9PiB7XG4gICAgc3dpdGNoIChzdHlsZSkge1xuICAgICAgICBjYXNlIFwibGFiZWxcIjpcbiAgICAgICAgICAgIHJldHVybiBcIi5cIjtcbiAgICAgICAgY2FzZSBcIm1hdHJpeFwiOlxuICAgICAgICAgICAgcmV0dXJuIFwiO1wiO1xuICAgICAgICBjYXNlIFwic2ltcGxlXCI6XG4gICAgICAgICAgICByZXR1cm4gXCIsXCI7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gXCImXCI7XG4gICAgfVxufTtcbmV4cG9ydHMuc2VwYXJhdG9yT2JqZWN0RXhwbG9kZSA9IHNlcGFyYXRvck9iamVjdEV4cGxvZGU7XG5jb25zdCBzZXJpYWxpemVBcnJheVBhcmFtID0gKHsgYWxsb3dSZXNlcnZlZCwgZXhwbG9kZSwgbmFtZSwgc3R5bGUsIHZhbHVlLCB9KSA9PiB7XG4gICAgaWYgKCFleHBsb2RlKSB7XG4gICAgICAgIGNvbnN0IGpvaW5lZFZhbHVlcyA9IChhbGxvd1Jlc2VydmVkID8gdmFsdWUgOiB2YWx1ZS5tYXAoKHYpID0+IGVuY29kZVVSSUNvbXBvbmVudCh2KSkpLmpvaW4oKDAsIGV4cG9ydHMuc2VwYXJhdG9yQXJyYXlOb0V4cGxvZGUpKHN0eWxlKSk7XG4gICAgICAgIHN3aXRjaCAoc3R5bGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJsYWJlbFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBgLiR7am9pbmVkVmFsdWVzfWA7XG4gICAgICAgICAgICBjYXNlIFwibWF0cml4XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGA7JHtuYW1lfT0ke2pvaW5lZFZhbHVlc31gO1xuICAgICAgICAgICAgY2FzZSBcInNpbXBsZVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBqb2luZWRWYWx1ZXM7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBgJHtuYW1lfT0ke2pvaW5lZFZhbHVlc31gO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHNlcGFyYXRvciA9ICgwLCBleHBvcnRzLnNlcGFyYXRvckFycmF5RXhwbG9kZSkoc3R5bGUpO1xuICAgIGNvbnN0IGpvaW5lZFZhbHVlcyA9IHZhbHVlXG4gICAgICAgIC5tYXAoKHYpID0+IHtcbiAgICAgICAgaWYgKHN0eWxlID09PSBcImxhYmVsXCIgfHwgc3R5bGUgPT09IFwic2ltcGxlXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBhbGxvd1Jlc2VydmVkID8gdiA6IGVuY29kZVVSSUNvbXBvbmVudCh2KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIGV4cG9ydHMuc2VyaWFsaXplUHJpbWl0aXZlUGFyYW0pKHtcbiAgICAgICAgICAgIGFsbG93UmVzZXJ2ZWQsXG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgdmFsdWU6IHYsXG4gICAgICAgIH0pO1xuICAgIH0pXG4gICAgICAgIC5qb2luKHNlcGFyYXRvcik7XG4gICAgcmV0dXJuIHN0eWxlID09PSBcImxhYmVsXCIgfHwgc3R5bGUgPT09IFwibWF0cml4XCJcbiAgICAgICAgPyBzZXBhcmF0b3IgKyBqb2luZWRWYWx1ZXNcbiAgICAgICAgOiBqb2luZWRWYWx1ZXM7XG59O1xuZXhwb3J0cy5zZXJpYWxpemVBcnJheVBhcmFtID0gc2VyaWFsaXplQXJyYXlQYXJhbTtcbmNvbnN0IHNlcmlhbGl6ZVByaW1pdGl2ZVBhcmFtID0gKHsgYWxsb3dSZXNlcnZlZCwgbmFtZSwgdmFsdWUsIH0pID0+IHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEZWVwbHktbmVzdGVkIGFycmF5cy9vYmplY3RzIGFyZW7igJl0IHN1cHBvcnRlZC4gUHJvdmlkZSB5b3VyIG93biBgcXVlcnlTZXJpYWxpemVyKClgIHRvIGhhbmRsZSB0aGVzZS5cIik7XG4gICAgfVxuICAgIHJldHVybiBgJHtuYW1lfT0ke2FsbG93UmVzZXJ2ZWQgPyB2YWx1ZSA6IGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSl9YDtcbn07XG5leHBvcnRzLnNlcmlhbGl6ZVByaW1pdGl2ZVBhcmFtID0gc2VyaWFsaXplUHJpbWl0aXZlUGFyYW07XG5jb25zdCBzZXJpYWxpemVPYmplY3RQYXJhbSA9ICh7IGFsbG93UmVzZXJ2ZWQsIGV4cGxvZGUsIG5hbWUsIHN0eWxlLCB2YWx1ZSwgdmFsdWVPbmx5LCB9KSA9PiB7XG4gICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICByZXR1cm4gdmFsdWVPbmx5ID8gdmFsdWUudG9JU09TdHJpbmcoKSA6IGAke25hbWV9PSR7dmFsdWUudG9JU09TdHJpbmcoKX1gO1xuICAgIH1cbiAgICBpZiAoc3R5bGUgIT09IFwiZGVlcE9iamVjdFwiICYmICFleHBsb2RlKSB7XG4gICAgICAgIGxldCB2YWx1ZXMgPSBbXTtcbiAgICAgICAgT2JqZWN0LmVudHJpZXModmFsdWUpLmZvckVhY2goKFtrZXksIHZdKSA9PiB7XG4gICAgICAgICAgICB2YWx1ZXMgPSBbXG4gICAgICAgICAgICAgICAgLi4udmFsdWVzLFxuICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICBhbGxvd1Jlc2VydmVkID8gdiA6IGVuY29kZVVSSUNvbXBvbmVudCh2KSxcbiAgICAgICAgICAgIF07XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBqb2luZWRWYWx1ZXMgPSB2YWx1ZXMuam9pbihcIixcIik7XG4gICAgICAgIHN3aXRjaCAoc3R5bGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJmb3JtXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGAke25hbWV9PSR7am9pbmVkVmFsdWVzfWA7XG4gICAgICAgICAgICBjYXNlIFwibGFiZWxcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gYC4ke2pvaW5lZFZhbHVlc31gO1xuICAgICAgICAgICAgY2FzZSBcIm1hdHJpeFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBgOyR7bmFtZX09JHtqb2luZWRWYWx1ZXN9YDtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGpvaW5lZFZhbHVlcztcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBzZXBhcmF0b3IgPSAoMCwgZXhwb3J0cy5zZXBhcmF0b3JPYmplY3RFeHBsb2RlKShzdHlsZSk7XG4gICAgY29uc3Qgam9pbmVkVmFsdWVzID0gT2JqZWN0LmVudHJpZXModmFsdWUpXG4gICAgICAgIC5tYXAoKFtrZXksIHZdKSA9PiAoMCwgZXhwb3J0cy5zZXJpYWxpemVQcmltaXRpdmVQYXJhbSkoe1xuICAgICAgICBhbGxvd1Jlc2VydmVkLFxuICAgICAgICBuYW1lOiBzdHlsZSA9PT0gXCJkZWVwT2JqZWN0XCIgPyBgJHtuYW1lfVske2tleX1dYCA6IGtleSxcbiAgICAgICAgdmFsdWU6IHYsXG4gICAgfSkpXG4gICAgICAgIC5qb2luKHNlcGFyYXRvcik7XG4gICAgcmV0dXJuIHN0eWxlID09PSBcImxhYmVsXCIgfHwgc3R5bGUgPT09IFwibWF0cml4XCJcbiAgICAgICAgPyBzZXBhcmF0b3IgKyBqb2luZWRWYWx1ZXNcbiAgICAgICAgOiBqb2luZWRWYWx1ZXM7XG59O1xuZXhwb3J0cy5zZXJpYWxpemVPYmplY3RQYXJhbSA9IHNlcmlhbGl6ZU9iamVjdFBhcmFtO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGF0aFNlcmlhbGl6ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/core/pathSerializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This file is auto-generated by @hey-api/openapi-ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./sdk.gen.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/sdk.gen.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types.gen.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/types.gen.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLHVEQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLDJGQUFjO0FBQzNDLHFCQUFxQixtQkFBTyxDQUFDLCtGQUFnQjtBQUM3QyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIFRoaXMgZmlsZSBpcyBhdXRvLWdlbmVyYXRlZCBieSBAaGV5LWFwaS9vcGVuYXBpLXRzXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2RrLmdlbi5qc1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy5nZW4uanNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/sdk.gen.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/sdk.gen.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This file is auto-generated by @hey-api/openapi-ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.postServiceWebhooksFiltersValidate = exports.getV1WalletsByWalletAddressTransactions = exports.getV1NftsMetadataRefreshByContractAddressByTokenId = exports.getV1NftsMetadataRefreshByContractAddress = exports.getV1NftsByContractAddressByTokenId = exports.getV1NftsTransfersByContractAddressByTokenId = exports.getV1NftsByContractAddress = exports.getV1NftsTransfersByContractAddress = exports.getV1NftsTransfersTransactionByTransactionHash = exports.getV1NftsTransfers = exports.getV1NftsOwnersByContractAddressByTokenId = exports.getV1NftsOwnersByContractAddress = exports.getV1Nfts = exports.getV1NftsCollectionsByContractAddress = exports.getV1NftsBalanceByOwnerAddress = exports.postV1DecodeByContractAddress = exports.getV1ContractsMetadataByContractAddress = exports.getV1ContractsAbiByContractAddress = exports.getV1Blocks = exports.getV1ResolveByInput = exports.getV1TokensLookup = exports.getV1TokensPrice = exports.getV1TokensPriceSupported = exports.getV1TokensErc1155ByOwnerAddress = exports.getV1TokensErc721ByOwnerAddress = exports.getV1Tokens = exports.getV1TokensErc20ByOwnerAddress = exports.getV1TokensTransfers = exports.getV1TokensTransfersByContractAddress = exports.getV1TokensTransfersTransactionByTransactionHash = exports.getV1TokensOwners = exports.getV1TransactionsByContractAddressBySignature = exports.getV1TransactionsByContractAddress = exports.getV1Transactions = exports.getV1EventsByContractAddressBySignature = exports.getV1EventsByContractAddress = exports.getV1Events = exports.postV1WebhooksTest = exports.patchV1WebhooksByWebhookId = exports.deleteV1WebhooksByWebhookId = exports.postV1Webhooks = exports.getV1Webhooks = void 0;\nconst client_gen_js_1 = __webpack_require__(/*! ./client.gen.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client.gen.js\");\n/**\n * Get webhooks\n * Get a list of webhooks or a single webhook by ID\n * @deprecated\n */\nconst getV1Webhooks = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks\",\n        ...options,\n    });\n};\nexports.getV1Webhooks = getV1Webhooks;\n/**\n * Create webhook\n * Deprecated - Insight webhooks will remain active for a while, but new ones cannot be created. A general thirdweb webhook solution will be available instead. Create a new webhook. In order to receive decoded data, specify a partial ABI in the filters.\n * @deprecated\n */\nconst postV1Webhooks = (options) => {\n    return (options?.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\nexports.postV1Webhooks = postV1Webhooks;\n/**\n * Delete webhook\n * Delete a webhook. This action cannot be undone.\n * @deprecated\n */\nconst deleteV1WebhooksByWebhookId = (options) => {\n    return (options.client ?? client_gen_js_1.client).delete({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks/{webhook_id}\",\n        ...options,\n    });\n};\nexports.deleteV1WebhooksByWebhookId = deleteV1WebhooksByWebhookId;\n/**\n * Update webhook\n * Update a webhook.\n * @deprecated\n */\nconst patchV1WebhooksByWebhookId = (options) => {\n    return (options.client ?? client_gen_js_1.client).patch({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks/{webhook_id}\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        },\n    });\n};\nexports.patchV1WebhooksByWebhookId = patchV1WebhooksByWebhookId;\n/**\n * Test webhook\n * Test your webhook URL. This will send a test event to the webhook URL signed with an example secret 'test123'. NB! The payload does not necessarily match your webhook filters. You can however use it to test signature verification and payload format handling.\n * @deprecated\n */\nconst postV1WebhooksTest = (options) => {\n    return (options?.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-secret-key\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/webhooks/test\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\nexports.postV1WebhooksTest = postV1WebhooksTest;\n/**\n * Get events\n * Get events\n */\nconst getV1Events = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/events\",\n        ...options,\n    });\n};\nexports.getV1Events = getV1Events;\n/**\n * Get contract events\n * Get contract events\n */\nconst getV1EventsByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/events/{contractAddress}\",\n        ...options,\n    });\n};\nexports.getV1EventsByContractAddress = getV1EventsByContractAddress;\n/**\n * Get contract events with specific signature\n * Get specific contract events\n */\nconst getV1EventsByContractAddressBySignature = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/events/{contractAddress}/{signature}\",\n        ...options,\n    });\n};\nexports.getV1EventsByContractAddressBySignature = getV1EventsByContractAddressBySignature;\n/**\n * Get transactions\n * Get transactions\n */\nconst getV1Transactions = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions\",\n        ...options,\n    });\n};\nexports.getV1Transactions = getV1Transactions;\n/**\n * Get contract transactions\n * Get contract transactions\n */\nconst getV1TransactionsByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/{contractAddress}\",\n        ...options,\n    });\n};\nexports.getV1TransactionsByContractAddress = getV1TransactionsByContractAddress;\n/**\n * Get contract transactions with specific signature\n * Get specific contract transactions\n */\nconst getV1TransactionsByContractAddressBySignature = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/transactions/{contractAddress}/{signature}\",\n        ...options,\n    });\n};\nexports.getV1TransactionsByContractAddressBySignature = getV1TransactionsByContractAddressBySignature;\n/**\n * Get token owners by contract\n * Get token owners for specific contract\n */\nconst getV1TokensOwners = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/owners\",\n        ...options,\n    });\n};\nexports.getV1TokensOwners = getV1TokensOwners;\n/**\n * Get token transfers by transaction\n * Get token transfers by transaction\n */\nconst getV1TokensTransfersTransactionByTransactionHash = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/transfers/transaction/{transaction_hash}\",\n        ...options,\n    });\n};\nexports.getV1TokensTransfersTransactionByTransactionHash = getV1TokensTransfersTransactionByTransactionHash;\n/**\n * Get token transfers by contract\n * Get token transfers by contract\n */\nconst getV1TokensTransfersByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/transfers/{contract_address}\",\n        ...options,\n    });\n};\nexports.getV1TokensTransfersByContractAddress = getV1TokensTransfersByContractAddress;\n/**\n * Get token transfers\n * Get token transfers\n */\nconst getV1TokensTransfers = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/transfers\",\n        ...options,\n    });\n};\nexports.getV1TokensTransfers = getV1TokensTransfers;\n/**\n * Get ERC-20 balances by address\n * Get ERC-20 balances for a given address. [BEING DEPRECATED IN FAVOR OF /tokens]\n * @deprecated\n */\nconst getV1TokensErc20ByOwnerAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/erc20/{ownerAddress}\",\n        ...options,\n    });\n};\nexports.getV1TokensErc20ByOwnerAddress = getV1TokensErc20ByOwnerAddress;\n/**\n * Get tokens\n * Query tokens\n */\nconst getV1Tokens = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens\",\n        ...options,\n    });\n};\nexports.getV1Tokens = getV1Tokens;\n/**\n * Get ERC-721 balances by address\n * Get ERC-721 (NFT) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n * @deprecated\n */\nconst getV1TokensErc721ByOwnerAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/erc721/{ownerAddress}\",\n        ...options,\n    });\n};\nexports.getV1TokensErc721ByOwnerAddress = getV1TokensErc721ByOwnerAddress;\n/**\n * Get ERC-1155 balances by address\n * Get ERC-1155 (Multi Token) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n * @deprecated\n */\nconst getV1TokensErc1155ByOwnerAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/erc1155/{ownerAddress}\",\n        ...options,\n    });\n};\nexports.getV1TokensErc1155ByOwnerAddress = getV1TokensErc1155ByOwnerAddress;\n/**\n * Get supported tokens for price data\n * Get supported tokens for price data\n */\nconst getV1TokensPriceSupported = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/price/supported\",\n        ...options,\n    });\n};\nexports.getV1TokensPriceSupported = getV1TokensPriceSupported;\n/**\n * Get token price\n * Get price in USD for given token(s)\n */\nconst getV1TokensPrice = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/price\",\n        ...options,\n    });\n};\nexports.getV1TokensPrice = getV1TokensPrice;\n/**\n * Token lookup\n * Look up a fungible token by symbol\n */\nconst getV1TokensLookup = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/tokens/lookup\",\n        ...options,\n    });\n};\nexports.getV1TokensLookup = getV1TokensLookup;\n/**\n * Resolve\n * Resolve\n */\nconst getV1ResolveByInput = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/resolve/{input}\",\n        ...options,\n    });\n};\nexports.getV1ResolveByInput = getV1ResolveByInput;\n/**\n * Get blocks\n * Get blocks\n */\nconst getV1Blocks = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/blocks\",\n        ...options,\n    });\n};\nexports.getV1Blocks = getV1Blocks;\n/**\n * Get contract ABI​\n * Get contract ABI​\n */\nconst getV1ContractsAbiByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/contracts/abi/{contractAddress}\",\n        ...options,\n    });\n};\nexports.getV1ContractsAbiByContractAddress = getV1ContractsAbiByContractAddress;\n/**\n * Get contract metadata​\n * Get contract metadata​\n */\nconst getV1ContractsMetadataByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/contracts/metadata/{contractAddress}\",\n        ...options,\n    });\n};\nexports.getV1ContractsMetadataByContractAddress = getV1ContractsMetadataByContractAddress;\n/**\n * Decode logs and transactions​\n * Decode logs and transactions​\n */\nconst postV1DecodeByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/decode/{contractAddress}\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers,\n        },\n    });\n};\nexports.postV1DecodeByContractAddress = postV1DecodeByContractAddress;\n/**\n * Get NFT balances by address\n * Get NFT balances for a given address\n */\nconst getV1NftsBalanceByOwnerAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/balance/{ownerAddress}\",\n        ...options,\n    });\n};\nexports.getV1NftsBalanceByOwnerAddress = getV1NftsBalanceByOwnerAddress;\n/**\n * Get collection\n * Retrieve metadata about a collection\n */\nconst getV1NftsCollectionsByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/collections/{contract_address}\",\n        ...options,\n    });\n};\nexports.getV1NftsCollectionsByContractAddress = getV1NftsCollectionsByContractAddress;\n/**\n * Get NFTs\n * Get NFTs\n */\nconst getV1Nfts = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts\",\n        ...options,\n    });\n};\nexports.getV1Nfts = getV1Nfts;\n/**\n * Get NFT owners by contract\n * Get NFT owners by contract\n */\nconst getV1NftsOwnersByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/owners/{contract_address}\",\n        ...options,\n    });\n};\nexports.getV1NftsOwnersByContractAddress = getV1NftsOwnersByContractAddress;\n/**\n * Get NFT owners by token\n * Get NFT owners by token\n */\nconst getV1NftsOwnersByContractAddressByTokenId = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/owners/{contract_address}/{token_id}\",\n        ...options,\n    });\n};\nexports.getV1NftsOwnersByContractAddressByTokenId = getV1NftsOwnersByContractAddressByTokenId;\n/**\n * Get NFT transfers\n * Get NFT transfers\n */\nconst getV1NftsTransfers = (options) => {\n    return (options?.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/transfers\",\n        ...options,\n    });\n};\nexports.getV1NftsTransfers = getV1NftsTransfers;\n/**\n * Get NFT transfers by transaction\n * Get NFT transfers by transaction\n */\nconst getV1NftsTransfersTransactionByTransactionHash = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/transfers/transaction/{transaction_hash}\",\n        ...options,\n    });\n};\nexports.getV1NftsTransfersTransactionByTransactionHash = getV1NftsTransfersTransactionByTransactionHash;\n/**\n * Get NFT transfers by contract\n * Get NFT transfers by contract\n */\nconst getV1NftsTransfersByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/transfers/{contract_address}\",\n        ...options,\n    });\n};\nexports.getV1NftsTransfersByContractAddress = getV1NftsTransfersByContractAddress;\n/**\n * Get NFTs by contract\n * Get NFTs by contract\n */\nconst getV1NftsByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/{contract_address}\",\n        ...options,\n    });\n};\nexports.getV1NftsByContractAddress = getV1NftsByContractAddress;\n/**\n * Get NFT transfers by token\n * Get NFT transfers by token\n */\nconst getV1NftsTransfersByContractAddressByTokenId = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/transfers/{contract_address}/{token_id}\",\n        ...options,\n    });\n};\nexports.getV1NftsTransfersByContractAddressByTokenId = getV1NftsTransfersByContractAddressByTokenId;\n/**\n * Get NFT by token ID\n * Get NFT by token ID\n */\nconst getV1NftsByContractAddressByTokenId = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/{contract_address}/{token_id}\",\n        ...options,\n    });\n};\nexports.getV1NftsByContractAddressByTokenId = getV1NftsByContractAddressByTokenId;\n/**\n * Force refresh collection metadata\n * Force refresh collection metadata for the specified contract (across multiple chains if provided)\n */\nconst getV1NftsMetadataRefreshByContractAddress = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/metadata/refresh/{contract_address}\",\n        ...options,\n    });\n};\nexports.getV1NftsMetadataRefreshByContractAddress = getV1NftsMetadataRefreshByContractAddress;\n/**\n * Force refresh token metadata\n * Force refresh token metadata for the specified contract and token ID (across multiple chains if provided)\n */\nconst getV1NftsMetadataRefreshByContractAddressByTokenId = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/nfts/metadata/refresh/{contract_address}/{token_id}\",\n        ...options,\n    });\n};\nexports.getV1NftsMetadataRefreshByContractAddressByTokenId = getV1NftsMetadataRefreshByContractAddressByTokenId;\n/**\n * Get wallet transactions\n * Get incoming and outgoing transactions for a wallet\n */\nconst getV1WalletsByWalletAddressTransactions = (options) => {\n    return (options.client ?? client_gen_js_1.client).get({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/v1/wallets/{wallet_address}/transactions\",\n        ...options,\n    });\n};\nexports.getV1WalletsByWalletAddressTransactions = getV1WalletsByWalletAddressTransactions;\n/**\n * Validate webhook filters\n * Webhook filters are complex and unique to Insight. Since webhooks are not created through this service anymore, this functionality to validate them is now exposed through this endpoint.\n */\nconst postServiceWebhooksFiltersValidate = (options) => {\n    return (options?.client ?? client_gen_js_1.client).post({\n        security: [\n            {\n                name: \"x-client-id\",\n                type: \"apiKey\",\n            },\n        ],\n        url: \"/service/webhooks/filters/validate\",\n        ...options,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options?.headers,\n        },\n    });\n};\nexports.postServiceWebhooksFiltersValidate = postServiceWebhooksFiltersValidate;\n//# sourceMappingURL=sdk.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/sdk.gen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/types.gen.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/client/types.gen.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// This file is auto-generated by @hey-api/openapi-ts\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.gen.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC90eXBlcy5nZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NsaWVudC90eXBlcy5nZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBUaGlzIGZpbGUgaXMgYXV0by1nZW5lcmF0ZWQgYnkgQGhleS1hcGkvb3BlbmFwaS10c1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuZ2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/types.gen.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/configure.js":
/*!******************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/configure.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.configure = configure;\nconst client_gen_js_1 = __webpack_require__(/*! ./client/client.gen.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/client.gen.js\");\nfunction configure(options) {\n    client_gen_js_1.client.setConfig({\n        headers: {\n            ...(options.clientId && { \"x-client-id\": options.clientId }),\n            ...(options.secretKey && { \"x-secret-key\": options.secretKey }),\n        },\n        ...(options.override ?? {}),\n    });\n}\n//# sourceMappingURL=configure.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2NvbmZpZ3VyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakIsd0JBQXdCLG1CQUFPLENBQUMsd0dBQXdCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxpQ0FBaUM7QUFDdkUsdUNBQXVDLG1DQUFtQztBQUMxRSxTQUFTO0FBQ1Qsa0NBQWtDO0FBQ2xDLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2luc2lnaHQvZGlzdC9janMvY29uZmlndXJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb25maWd1cmUgPSBjb25maWd1cmU7XG5jb25zdCBjbGllbnRfZ2VuX2pzXzEgPSByZXF1aXJlKFwiLi9jbGllbnQvY2xpZW50Lmdlbi5qc1wiKTtcbmZ1bmN0aW9uIGNvbmZpZ3VyZShvcHRpb25zKSB7XG4gICAgY2xpZW50X2dlbl9qc18xLmNsaWVudC5zZXRDb25maWcoe1xuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAuLi4ob3B0aW9ucy5jbGllbnRJZCAmJiB7IFwieC1jbGllbnQtaWRcIjogb3B0aW9ucy5jbGllbnRJZCB9KSxcbiAgICAgICAgICAgIC4uLihvcHRpb25zLnNlY3JldEtleSAmJiB7IFwieC1zZWNyZXQta2V5XCI6IG9wdGlvbnMuc2VjcmV0S2V5IH0pLFxuICAgICAgICB9LFxuICAgICAgICAuLi4ob3B0aW9ucy5vdmVycmlkZSA/PyB7fSksXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25maWd1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/configure.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/exports/thirdweb.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/insight/dist/cjs/exports/thirdweb.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.configure = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ../client/index.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/client/index.js\"), exports);\nvar configure_js_1 = __webpack_require__(/*! ../configure.js */ \"(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/configure.js\");\nObject.defineProperty(exports, \"configure\", ({ enumerable: true, get: function () { return configure_js_1.configure; } }));\n//# sourceMappingURL=thirdweb.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9pbnNpZ2h0L2Rpc3QvY2pzL2V4cG9ydHMvdGhpcmR3ZWIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLGdCQUFnQixtQkFBTyxDQUFDLHVEQUFPO0FBQy9CLHFCQUFxQixtQkFBTyxDQUFDLCtGQUFvQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyx5RkFBaUI7QUFDOUMsNkNBQTRDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQ3hIIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9AdGhpcmR3ZWItZGV2L2luc2lnaHQvZGlzdC9janMvZXhwb3J0cy90aGlyZHdlYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29uZmlndXJlID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuLi9jbGllbnQvaW5kZXguanNcIiksIGV4cG9ydHMpO1xudmFyIGNvbmZpZ3VyZV9qc18xID0gcmVxdWlyZShcIi4uL2NvbmZpZ3VyZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNvbmZpZ3VyZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uZmlndXJlX2pzXzEuY29uZmlndXJlOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhpcmR3ZWIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@thirdweb-dev/insight/dist/cjs/exports/thirdweb.js\n");

/***/ })

};
;