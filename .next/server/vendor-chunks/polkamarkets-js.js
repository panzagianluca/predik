/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/polkamarkets-js";
exports.ids = ["vendor-chunks/polkamarkets-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/Achievements.json":
/*!*************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/Achievements.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"Achievements","abi":[{"inputs":[{"internalType":"string","name":"token","type":"string"},{"internalType":"string","name":"ticker","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"achievementId","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"content","type":"string"}],"name":"LogNewAchievement","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"achievementIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"achievements","outputs":[{"internalType":"enum Achievements.Action","name":"action","type":"uint8"},{"internalType":"uint256","name":"occurrences","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"predictionMarket","outputs":[{"internalType":"contract PredictionMarketV2","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract PredictionMarketV2","name":"_predictionMarket","type":"address"}],"name":"setContracts","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI_","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum Achievements.Action","name":"action","type":"uint8"},{"internalType":"uint256","name":"occurrences","type":"uint256"},{"internalType":"string","name":"content","type":"string"}],"name":"createAchievement","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"achievementId","type":"uint256"}],"name":"hasUserClaimedAchievement","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"hasUserPlacedPrediction","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"hasUserAddedLiquidity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"hasUserClaimedWinnings","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_marketId","type":"uint256"}],"name":"hasUserCreatedMarket","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"achievementId","type":"uint256"},{"internalType":"uint256[]","name":"marketIds","type":"uint256[]"}],"name":"claimAchievement","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tokenIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x608060405260006008553480156200001657600080fd5b506040516200244238038062002442833981016040819052620000399162000128565b8181600062000049838262000221565b50600162000058828262000221565b5050505050620002ed565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008b57600080fd5b81516001600160401b0380821115620000a857620000a862000063565b604051601f8301601f19908116603f01168101908282118183101715620000d357620000d362000063565b81604052838152602092508683858801011115620000f057600080fd5b600091505b83821015620001145785820183015181830184015290820190620000f5565b600093810190920192909252949350505050565b600080604083850312156200013c57600080fd5b82516001600160401b03808211156200015457600080fd5b620001628683870162000079565b935060208501519150808211156200017957600080fd5b50620001888582860162000079565b9150509250929050565b600181811c90821680620001a757607f821691505b602082108103620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021c57600081815260208120601f850160051c81016020861015620001f75750805b601f850160051c820191505b81811015620002185782815560010162000203565b5050505b505050565b81516001600160401b038111156200023d576200023d62000063565b62000255816200024e845462000192565b84620001ce565b602080601f8311600181146200028d5760008415620002745750858301515b600019600386901b1c1916600185901b17855562000218565b600085815260208120601f198616915b82811015620002be578886015182559484019460019091019084016200029d565b5085821015620002dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61214580620002fd6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636352211e116100f9578063c8c787ae11610097578063def114b611610071578063def114b6146103e0578063e7c38730146103f3578063e985e9c514610406578063ecf5f69b1461044257600080fd5b8063c8c787ae146103bc578063c99aea33146103cf578063d55f9273146103d857600080fd5b806395d89b41116100d357806395d89b411461037b578063a22cb46514610383578063b88d4fde14610396578063c87b56dd146103a957600080fd5b80636352211e1461034257806370a0823114610355578063947f53a21461036857600080fd5b806327aed72e11610166578063497e409611610140578063497e4096146102db5780634f64b2be146102fc57806355f804b31461031c5780635a2e2f471461032f57600080fd5b806327aed72e1461025157806342842e0e1461028c57806342da0beb1461029f57600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b3146102165780630c04f83b1461022b57806323b872dd1461023e575b600080fd5b6101c16101bc3660046118de565b610458565b60405190151581526020015b60405180910390f35b6101de6104aa565b6040516101cd919061194b565b6101fe6101f936600461195e565b61053c565b6040516001600160a01b0390911681526020016101cd565b61022961022436600461198c565b610563565b005b6101c161023936600461198c565b61067d565b61022961024c3660046119b8565b6107b1565b61027e61025f36600461195e565b6009602052600090815260409020805460019091015460ff9091169082565b6040516101cd929190611a0f565b61022961029a3660046119b8565b6107e2565b6101c16102ad36600461198c565b60009081526009602090815260408083206001600160a01b0394909416835260029093019052205460ff1690565b6102ee6102e9366004611aa6565b6107fd565b6040519081526020016101cd565b6102ee61030a36600461195e565b600a6020526000908152604090205481565b61022961032a366004611bc0565b610a19565b61022961033d366004611bf5565b610a8b565b6101fe61035036600461195e565b610b72565b6102ee610363366004611bf5565b610bd2565b6101c161037636600461198c565b610c58565b6101de610e16565b610229610391366004611c12565b610e25565b6102296103a4366004611c50565b610e30565b6101de6103b736600461195e565b610e68565b6102ee6103ca366004611cd0565b610ecf565b6102ee60085481565b6102ee610fba565b6007546101fe906001600160a01b031681565b6101c161040136600461198c565b610fca565b6101c1610414366004611d2d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101c161045036600461198c565b600092915050565b60006001600160e01b031982166380ac58cd60e01b148061048957506001600160e01b03198216635b5e139f60e01b145b806104a457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104b990611d5b565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590611d5b565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b5050505050905090565b6000610547826110ad565b506000908152600460205260409020546001600160a01b031690565b600061056e82610b72565b9050806001600160a01b0316836001600160a01b0316036105e05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105fc57506105fc8133610414565b61066e5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016105d7565b610678838361110f565b505050565b60075460405163b31eb89560e01b8152600481018390526001600160a01b03848116602483015260009260609291169063b31eb89590604401600060405180830381865afa1580156106d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106fb9190810190611d95565b915060009050805b825181101561074957600083828151811061072057610720611e23565b602002602001015111156107375760019150610749565b8061074181611e4f565b915050610703565b506001811515146107a65760405162461bcd60e51b815260206004820152602160248201527f7573657220646f6573206e6f7420686f6c64206f7574636f6d652073686172656044820152607360f81b60648201526084016105d7565b506001949350505050565b6107bb338261117d565b6107d75760405162461bcd60e51b81526004016105d790611e68565b6106788383836111fc565b61067883838360405180602001604052806000815250610e30565b60008281526009602090815260408083203384526002810190925282205460ff161561086b5760405162461bcd60e51b815260206004820152601b60248201527f416368696576656d656e7420616c726561647920636c61696d6564000000000060448201526064016105d7565b80600101548351146108d15760405162461bcd60e51b815260206004820152602960248201527f4d61726b65747320636f756e7420616e64206f6363757272656e63657320646f6044820152680dc4ee840dac2e8c6d60bb1b60648201526084016105d7565b60005b8351811015610a065760008482815181106108f1576108f1611e23565b602002602001015190506000600381111561090e5761090e6119f9565b835460ff166003811115610924576109246119f9565b0361093957610933338261067d565b506109f3565b6001835460ff166003811115610951576109516119f9565b03610960576109333382610fca565b6002835460ff166003811115610978576109786119f9565b03610987576109333382610c58565b6003835460ff16600381111561099f5761099f6119f9565b036109ab576000610933565b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420616368696576656d656e7420616374696f6e00000000000060448201526064016105d7565b50806109fe81611e4f565b9150506108d4565b50610a113385611360565b505092915050565b610a216113cc565b5115610a7b5760405162461bcd60e51b8152602060048201526024808201527f626173655552492063616e206f6e6c7920626520696e697469616c697a6564206044820152636f6e636560e01b60648201526084016105d7565b600b610a878282611f03565b5050565b6007546001600160a01b031615610afa5760405162461bcd60e51b815260206004820152602d60248201527f70726564696374696f6e4d61726b65742063616e206f6e6c7920626520696e6960448201526c7469616c697a6564206f6e636560981b60648201526084016105d7565b6001600160a01b038116610b505760405162461bcd60e51b815260206004820152601e60248201527f5f70726564696374696f6e4d61726b657420616464726573732069732030000060448201526064016105d7565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600260205260408120546001600160a01b0316806104a45760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d7565b60006001600160a01b038216610c3c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105d7565b506001600160a01b031660009081526003602052604090205490565b60075460405163b31eb89560e01b8152600481018390526001600160a01b03848116602483015260009260609291169063b31eb89590604401600060405180830381865afa158015610cae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cd69190810190611d95565b60075460405163bf45572160e01b815260048101879052919350600092506001600160a01b03169063bf45572190602401602060405180830381865afa158015610d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d489190611fc3565b90506000811215610d9b5760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6574206973207374696c6c206e6f74207265736f6c7665640000000060448201526064016105d7565b6000828281518110610daf57610daf611e23565b6020026020010151116107a65760405162461bcd60e51b815260206004820152602960248201527f7573657220646f6573206e6f7420686f6c642077696e6e696e67206f7574636f6044820152686d652073686172657360b81b60648201526084016105d7565b6060600180546104b990611d5b565b610a873383836113db565b610e3a338361117d565b610e565760405162461bcd60e51b81526004016105d790611e68565b610e62848484846114a9565b50505050565b6060610e73826110ad565b6000610e7d6113cc565b90506000815111610e9d5760405180602001604052806000815250610ec8565b80610ea7846114dc565b604051602001610eb8929190611fdc565b6040516020818303038152906040525b9392505050565b6000808311610f2c5760405162461bcd60e51b8152602060048201526024808201527f6f6363757272656e6365732068617320746f20626520677265617465722074686044820152630616e20360e41b60648201526084016105d7565b600854600081815260096020526040902080548690829060ff19166001836003811115610f5b57610f5b6119f9565b021790555060018101859055604051339083907ff12dd2cec284c7695fa5ff87a683b64add6d47d7a74e190171798ee5e70a744c90610f9b90889061194b565b60405180910390a3610fae82600161200b565b60085550949350505050565b6000610fc560065490565b905090565b60075460405163b31eb89560e01b8152600481018390526001600160a01b038481166024830152600092839291169063b31eb89590604401600060405180830381865afa15801561101f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110479190810190611d95565b509050806110a35760405162461bcd60e51b815260206004820152602360248201527f7573657220646f6573206e6f7420686f6c64206c69717569646974792073686160448201526272657360e81b60648201526084016105d7565b5060019392505050565b6000818152600260205260409020546001600160a01b031661110c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d7565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061114482610b72565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061118983610b72565b9050806001600160a01b0316846001600160a01b031614806111d057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806111f45750836001600160a01b03166111e98461053c565b6001600160a01b0316145b949350505050565b826001600160a01b031661120f82610b72565b6001600160a01b0316146112355760405162461bcd60e51b81526004016105d79061201e565b6001600160a01b0382166112975760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105d7565b826001600160a01b03166112aa82610b72565b6001600160a01b0316146112d05760405162461bcd60e51b81526004016105d79061201e565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611370600680546001019055565b600061137b60065490565b9050611387848261156f565b6000818152600a60209081526040808320869055858352600982528083206001600160a01b03881684526002019091529020805460ff19166001179055905092915050565b6060600b80546104b990611d5b565b816001600160a01b0316836001600160a01b03160361143c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105d7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6114b48484846111fc565b6114c0848484846116fa565b610e625760405162461bcd60e51b81526004016105d790612063565b606060006114e9836117f0565b600101905060008167ffffffffffffffff81111561150957611509611a3b565b6040519080825280601f01601f191660200182016040528015611533576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461153d57509392505050565b6001600160a01b0382166115c55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105d7565b6000818152600260205260409020546001600160a01b03161561162a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d7565b6000818152600260205260409020546001600160a01b03161561168f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d7565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156107a657604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061173e9033908990889088906004016120b5565b6020604051808303816000875af1925050508015611779575060408051601f3d908101601f19168201909252611776918101906120f2565b60015b6117d6573d8080156117a7576040519150601f19603f3d011682016040523d82523d6000602084013e6117ac565b606091505b5080516000036117ce5760405162461bcd60e51b81526004016105d790612063565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111f4565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061182f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061185b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061187957662386f26fc10000830492506010015b6305f5e1008310611891576305f5e100830492506008015b61271083106118a557612710830492506004015b606483106118b7576064830492506002015b600a83106104a45760010192915050565b6001600160e01b03198116811461110c57600080fd5b6000602082840312156118f057600080fd5b8135610ec8816118c8565b60005b838110156119165781810151838201526020016118fe565b50506000910152565b600081518084526119378160208601602086016118fb565b601f01601f19169290920160200192915050565b602081526000610ec8602083018461191f565b60006020828403121561197057600080fd5b5035919050565b6001600160a01b038116811461110c57600080fd5b6000806040838503121561199f57600080fd5b82356119aa81611977565b946020939093013593505050565b6000806000606084860312156119cd57600080fd5b83356119d881611977565b925060208401356119e881611977565b929592945050506040919091013590565b634e487b7160e01b600052602160045260246000fd5b6040810160048410611a3157634e487b7160e01b600052602160045260246000fd5b9281526020015290565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a7a57611a7a611a3b565b604052919050565b600067ffffffffffffffff821115611a9c57611a9c611a3b565b5060051b60200190565b60008060408385031215611ab957600080fd5b8235915060208084013567ffffffffffffffff811115611ad857600080fd5b8401601f81018613611ae957600080fd5b8035611afc611af782611a82565b611a51565b81815260059190911b82018301908381019088831115611b1b57600080fd5b928401925b82841015611b3957833582529284019290840190611b20565b80955050505050509250929050565b600067ffffffffffffffff831115611b6257611b62611a3b565b611b75601f8401601f1916602001611a51565b9050828152838383011115611b8957600080fd5b828260208301376000602084830101529392505050565b600082601f830112611bb157600080fd5b610ec883833560208501611b48565b600060208284031215611bd257600080fd5b813567ffffffffffffffff811115611be957600080fd5b6111f484828501611ba0565b600060208284031215611c0757600080fd5b8135610ec881611977565b60008060408385031215611c2557600080fd5b8235611c3081611977565b915060208301358015158114611c4557600080fd5b809150509250929050565b60008060008060808587031215611c6657600080fd5b8435611c7181611977565b93506020850135611c8181611977565b925060408501359150606085013567ffffffffffffffff811115611ca457600080fd5b8501601f81018713611cb557600080fd5b611cc487823560208401611b48565b91505092959194509250565b600080600060608486031215611ce557600080fd5b833560048110611cf457600080fd5b925060208401359150604084013567ffffffffffffffff811115611d1757600080fd5b611d2386828701611ba0565b9150509250925092565b60008060408385031215611d4057600080fd5b8235611d4b81611977565b91506020830135611c4581611977565b600181811c90821680611d6f57607f821691505b602082108103611d8f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008060408385031215611da857600080fd5b8251915060208084015167ffffffffffffffff811115611dc757600080fd5b8401601f81018613611dd857600080fd5b8051611de6611af782611a82565b81815260059190911b82018301908381019088831115611e0557600080fd5b928401925b82841015611b3957835182529284019290840190611e0a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611e6157611e61611e39565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b601f82111561067857600081815260208120601f850160051c81016020861015611edc5750805b601f850160051c820191505b81811015611efb57828155600101611ee8565b505050505050565b815167ffffffffffffffff811115611f1d57611f1d611a3b565b611f3181611f2b8454611d5b565b84611eb5565b602080601f831160018114611f665760008415611f4e5750858301515b600019600386901b1c1916600185901b178555611efb565b600085815260208120601f198616915b82811015611f9557888601518255948401946001909101908401611f76565b5085821015611fb35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611fd557600080fd5b5051919050565b60008351611fee8184602088016118fb565b8351908301906120028183602088016118fb565b01949350505050565b808201808211156104a4576104a4611e39565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120e89083018461191f565b9695505050505050565b60006020828403121561210457600080fd5b8151610ec8816118c856fea2646970667358221220ca3f34b9087ef8cee0c049fbb129772ed755c0b24706e2bd8937e1b25da7c75d64736f6c63430008120033"}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/ERC20PresetMinterPauser.json":
/*!************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/ERC20PresetMinterPauser.json ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"ERC20PresetMinterPauser","abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x60806040523480156200001157600080fd5b5060405162001d5738038062001d578339810160408190526200003491620002f7565b81816005620000448382620003ef565b506006620000538282620003ef565b50506007805460ff19169055506200006d600033620000cd565b620000997f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000cd565b620000c57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000cd565b5050620004bb565b620000d98282620000dd565b5050565b620000f482826200012060201b6200093d1760201c565b60008281526001602090815260409091206200011b918390620009c1620001c0821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000d9576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200017c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001d7836001600160a01b038416620001e0565b90505b92915050565b60008181526001830160205260408120546200022957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620001da565b506000620001da565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025a57600080fd5b81516001600160401b038082111562000277576200027762000232565b604051601f8301601f19908116603f01168101908282118183101715620002a257620002a262000232565b81604052838152602092508683858801011115620002bf57600080fd5b600091505b83821015620002e35785820183015181830184015290820190620002c4565b600093810190920192909252949350505050565b600080604083850312156200030b57600080fd5b82516001600160401b03808211156200032357600080fd5b620003318683870162000248565b935060208501519150808211156200034857600080fd5b50620003578582860162000248565b9150509250929050565b600181811c908216806200037657607f821691505b6020821081036200039757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011b57600081815260208120601f850160051c81016020861015620003c65750805b601f850160051c820191505b81811015620003e757828155600101620003d2565b505050505050565b81516001600160401b038111156200040b576200040b62000232565b62000423816200041c845462000361565b846200039d565b602080601f8311600181146200045b5760008415620004425750858301515b600019600386901b1c1916600185901b178555620003e7565b600085815260208120601f198616915b828110156200048c578886015182559484019460019091019084016200046b565b5085821015620004ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61188c80620004cb6000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d5391393146103af578063d547741f146103d6578063dd62ed3e146103e9578063e63ab1e9146103fc57600080fd5b8063a457c2d714610376578063a9059cbb14610389578063ca15c8731461039c57600080fd5b80639010d07c116100d35780639010d07c1461032857806391d148541461035357806395d89b4114610366578063a217fddf1461036e57600080fd5b806370a08231146102e457806379cc67901461030d5780638456cb591461032057600080fd5b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102ab57806340c10f19146102b357806342966c68146102c65780635c975abb146102d957600080fd5b8063313ce5671461027657806336568abe14610285578063395093511461029857600080fd5b806318160ddd116101a257806318160ddd1461021957806323b872dd1461022b578063248a9ca31461023e5780632f2ff15d1461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063095ea7b314610206575b600080fd5b6101dc6101d736600461154c565b610423565b60405190151581526020015b60405180910390f35b6101f961044e565b6040516101e8919061159a565b6101dc6102143660046115e9565b6104e0565b6004545b6040519081526020016101e8565b6101dc610239366004611613565b6104f8565b61021d61024c36600461164f565b60009081526020819052604090206001015490565b61027461026f366004611668565b61051c565b005b604051601281526020016101e8565b610274610293366004611668565b610546565b6101dc6102a63660046115e9565b6105c9565b6102746105eb565b6102746102c13660046115e9565b610691565b6102746102d436600461164f565b610730565b60075460ff166101dc565b61021d6102f2366004611694565b6001600160a01b031660009081526002602052604090205490565b61027461031b3660046115e9565b61073d565b610274610752565b61033b6103363660046116af565b6107f6565b6040516001600160a01b0390911681526020016101e8565b6101dc610361366004611668565b610815565b6101f961083e565b61021d600081565b6101dc6103843660046115e9565b61084d565b6101dc6103973660046115e9565b6108c8565b61021d6103aa36600461164f565b6108d6565b61021d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102746103e4366004611668565b6108ed565b61021d6103f73660046116d1565b610912565b61021d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104485750610448826109d6565b92915050565b60606005805461045d906116fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610489906116fb565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b6000336104ee818585610a0b565b5060019392505050565b600033610506858285610b2f565b610511858585610ba9565b506001949350505050565b60008281526020819052604090206001015461053781610d5f565b6105418383610d69565b505050565b6001600160a01b03811633146105bb5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105c58282610d8b565b5050565b6000336104ee8185856105dc8383610912565b6105e6919061174b565b610a0b565b6106157f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610815565b6106875760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e70617573650000000000000060648201526084016105b2565b61068f610dad565b565b6106bb7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610815565b6107265760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d7573742068616044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b60648201526084016105b2565b6105c58282610dff565b61073a3382610ecc565b50565b610748823383610b2f565b6105c58282610ecc565b61077c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610815565b6107ee5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20706175736500000000000000000060648201526084016105b2565b61068f61100c565b600082815260016020526040812061080e9083611049565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60606006805461045d906116fb565b6000338161085b8286610912565b9050838110156108bb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105b2565b6105118286868403610a0b565b6000336104ee818585610ba9565b600081815260016020526040812061044890611055565b60008281526020819052604090206001015461090881610d5f565b6105418383610d8b565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6109478282610815565b6105c5576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561097d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061080e836001600160a01b03841661105f565b60006001600160e01b03198216637965db0b60e01b148061044857506301ffc9a760e01b6001600160e01b0319831614610448565b6001600160a01b038316610a6d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105b2565b6001600160a01b038216610ace5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105b2565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610b3b8484610912565b90506000198114610ba35781811015610b965760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105b2565b610ba38484848403610a0b565b50505050565b6001600160a01b038316610c0d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105b2565b6001600160a01b038216610c6f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105b2565b610c7a8383836110ae565b6001600160a01b03831660009081526002602052604090205481811015610cf25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105b2565b6001600160a01b0380851660008181526002602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d529086815260200190565b60405180910390a3610ba3565b61073a81336110b9565b610d73828261093d565b600082815260016020526040902061054190826109c1565b610d958282611112565b60008281526001602052604090206105419082611177565b610db561118c565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610e555760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105b2565b610e61600083836110ae565b8060046000828254610e73919061174b565b90915550506001600160a01b0382166000818152600260209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610f2c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105b2565b610f38826000836110ae565b6001600160a01b03821660009081526002602052604090205481811015610fac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105b2565b6001600160a01b03831660008181526002602090815260408083208686039055600480548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6110146111d5565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610de23390565b600061080e838361121b565b6000610448825490565b60008181526001830160205260408120546110a657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610448565b506000610448565b610541838383611245565b6110c38282610815565b6105c5576110d0816112ab565b6110db8360206112bd565b6040516020016110ec92919061175e565b60408051601f198184030181529082905262461bcd60e51b82526105b29160040161159a565b61111c8282610815565b156105c5576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061080e836001600160a01b038416611459565b60075460ff1661068f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105b2565b60075460ff161561068f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105b2565b6000826000018281548110611232576112326117d3565b9060005260206000200154905092915050565b60075460ff16156105415760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016105b2565b60606104486001600160a01b03831660145b606060006112cc8360026117e9565b6112d790600261174b565b67ffffffffffffffff8111156112ef576112ef611800565b6040519080825280601f01601f191660200182016040528015611319576020820181803683370190505b509050600360fc1b81600081518110611334576113346117d3565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611363576113636117d3565b60200101906001600160f81b031916908160001a90535060006113878460026117e9565b61139290600161174b565b90505b600181111561140a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106113c6576113c66117d3565b1a60f81b8282815181106113dc576113dc6117d3565b60200101906001600160f81b031916908160001a90535060049490941c9361140381611816565b9050611395565b50831561080e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105b2565b6000818152600183016020526040812054801561154257600061147d60018361182d565b85549091506000906114919060019061182d565b90508181146114f65760008660000182815481106114b1576114b16117d3565b90600052602060002001549050808760000184815481106114d4576114d46117d3565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061150757611507611840565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610448565b6000915050610448565b60006020828403121561155e57600080fd5b81356001600160e01b03198116811461080e57600080fd5b60005b83811015611591578181015183820152602001611579565b50506000910152565b60208152600082518060208401526115b9816040850160208701611576565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146115e457600080fd5b919050565b600080604083850312156115fc57600080fd5b611605836115cd565b946020939093013593505050565b60008060006060848603121561162857600080fd5b611631846115cd565b925061163f602085016115cd565b9150604084013590509250925092565b60006020828403121561166157600080fd5b5035919050565b6000806040838503121561167b57600080fd5b8235915061168b602084016115cd565b90509250929050565b6000602082840312156116a657600080fd5b61080e826115cd565b600080604083850312156116c257600080fd5b50508035926020909101359150565b600080604083850312156116e457600080fd5b6116ed836115cd565b915061168b602084016115cd565b600181811c9082168061170f57607f821691505b60208210810361172f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561044857610448611735565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611796816017850160208801611576565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117c7816028840160208801611576565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761044857610448611735565b634e487b7160e01b600052604160045260246000fd5b60008161182557611825611735565b506000190190565b8181038181111561044857610448611735565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220418d1946927bf7685f6f7a76bbda410f10dd3508f16434f9023411dee1c69f9264736f6c63430008120033"}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/FantasyERC20.json":
/*!*************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/FantasyERC20.json ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"type":"constructor","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"_tokenAmountToClaim","type":"uint256","internalType":"uint256"},{"name":"_tokenManager","type":"address","internalType":"address"},{"name":"_PMV3Factory","type":"address","internalType":"address"},{"name":"_PMV3Controller","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"DEFAULT_ADMIN_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"MINTER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAUSER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"burnFrom","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimAndApproveTokens","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimTokens","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"hasUserClaimedTokens","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"callerConfirmation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tokenAmountToClaim","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tokenManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleAdminChanged","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"previousAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokensClaimed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Unpaused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AccessControlBadConfirmation","inputs":[]},{"type":"error","name":"AccessControlUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"neededRole","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"ERC20InsufficientAllowance","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"allowance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InsufficientBalance","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC20InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC20InvalidSpender","inputs":[{"name":"spender","type":"address","internalType":"address"}]},{"type":"error","name":"EnforcedPause","inputs":[]},{"type":"error","name":"ExpectedPause","inputs":[]}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarket.json":
/*!*****************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/PredictionMarket.json ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"PredictionMarket","abi":[{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"},{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"uint256","name":"_requiredBalance","type":"uint256"},{"internalType":"address","name":"_realitioAddress","type":"address"},{"internalType":"uint256","name":"_realitioTimeout","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"enum PredictionMarket.MarketAction","name":"action","type":"uint8"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketActionTx","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomes","type":"uint256"},{"indexed":false,"internalType":"string","name":"question","type":"string"},{"indexed":false,"internalType":"string","name":"image","type":"string"}],"name":"MarketCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketOutcomePrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketResolved","type":"event"},{"inputs":[],"name":"MAX_UINT_256","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"realitioAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"realitioTimeout","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"requiredBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"question","type":"string"},{"internalType":"string","name":"image","type":"string"},{"internalType":"uint256","name":"closesAt","type":"uint256"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint256","name":"outcomes","type":"uint256"}],"name":"createMarket","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"calcBuyAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"calcSellAmount","outputs":[{"internalType":"uint256","name":"outcomeTokenSellAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"minOutcomeSharesToBuy","type":"uint256"}],"name":"buy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxOutcomeSharesToSell","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"addLiquidity","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"removeLiquidity","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"resolveMarketOutcome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimWinnings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"claimVoidedOutcomeShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimFees","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserMarketShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserClaimStatus","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserLiquidityPoolShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserClaimableFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarkets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketData","outputs":[{"internalType":"enum PredictionMarket.MarketState","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketAltData","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketQuestion","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketLiquidityPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketResolvedOutcome","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"isMarketVoided","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketOutcomeIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"getMarketOutcomePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"getMarketOutcomeData","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x60806040523480156200001157600080fd5b506040516200371c3803806200371c8339810160408190526200003491620000ca565b6001600160a01b038216620000665760405162461bcd60e51b81526004016200005d9062000125565b60405180910390fd5b60008111620000895760405162461bcd60e51b81526004016200005d906200015c565b600394909455600680546001600160a01b039485166001600160a01b03199182161790915560079290925560048054919093169116179055600555620001ac565b600080600080600060a08688031215620000e2578081fd5b855194506020860151620000f68162000193565b604087015160608801519195509350620001108162000193565b80925050608086015190509295509295909350565b6020808252601d908201527f5f7265616c6974696f4164647265737320697320616464726573732030000000604082015260600190565b60208082526018908201527f74696d656f7574206d75737420626520706f7369746976650000000000000000604082015260600190565b6001600160a01b0381168114620001a957600080fd5b50565b61356080620001bc6000396000f3fe6080604052600436106102045760003560e01c80638c7adc1511610118578063c346a9d0116100a0578063ec93f0f51161006f578063ec93f0f5146105a1578063efbc47dc146105c1578063efce4313146105d4578063fc0c546a146105f4578063fdff80851461060957610204565b8063c346a9d014610537578063c8f70d0114610557578063ddca3f4314610577578063ec2c90161461058c57610204565b8063ac68a748116100e7578063ac68a7481461049d578063b31eb895146104b0578063bf455721146104d0578063bfacba3d146104f0578063c2ee3a081461052257610204565b80638c7adc15146104355780638cd415521461044a5780639d7de6b31461046a578063aa22a02e1461047d57610204565b806340993b261161019b57806351c6590a1161016a57806351c6590a146103a05780635e648eff146103b3578063677bd9ff146103d35780637b34e6e0146103f357806385b91d8e1461041557610204565b806340993b2614610320578063429c9dff146103335780634397c4ce14610353578063441cf65e1461037357610204565b806331877a38116101d757806331877a38146102b45780633620875e146102e15780633d41a26b146102f65780633fe45e3b1461030b57610204565b806308560ace146102095780631d7920aa1461023457806328747a80146102635780632c2aa24e14610283575b600080fd5b34801561021557600080fd5b5061021e610629565b60405161022b9190612df7565b60405180910390f35b34801561024057600080fd5b5061025461024f366004612c82565b61062f565b60405161022b939291906134ad565b34801561026f57600080fd5b5061021e61027e366004612c82565b61064e565b34801561028f57600080fd5b506102a361029e366004612c9a565b6107e4565b60405161022b959493929190612dd0565b3480156102c057600080fd5b506102d46102cf366004612c82565b6108b4565b60405161022b9190612d81565b6102f46102ef366004612d12565b61091d565b005b34801561030257600080fd5b5061021e610b6b565b34801561031757600080fd5b5061021e610b71565b6102f461032e366004612ce7565b610b77565b34801561033f57600080fd5b5061021e61034e366004612ce7565b610d38565b34801561035f57600080fd5b5061021e61036e366004612c82565b610e98565b34801561037f57600080fd5b5061039361038e366004612c82565b610ead565b60405161022b9190612dc5565b6102f46103ae366004612c82565b610ef2565b3480156103bf57600080fd5b506102f46103ce366004612c82565b610f8d565b3480156103df57600080fd5b506102f46103ee366004612c82565b61115a565b3480156103ff57600080fd5b506104086112c5565b60405161022b9190612d6d565b34801561042157600080fd5b50610254610430366004612c82565b6112d4565b34801561044157600080fd5b5061021e611305565b34801561045657600080fd5b5061021e610465366004612cc6565b61130b565b6102f4610478366004612cc6565b6113cb565b34801561048957600080fd5b5061021e610498366004612c9a565b6117e2565b6102f46104ab366004612c82565b611835565b3480156104bc57600080fd5b506102546104cb366004612c9a565b6118fe565b3480156104dc57600080fd5b5061021e6104eb366004612c82565b611959565b3480156104fc57600080fd5b5061051061050b366004612c82565b611996565b60405161022b96959493929190612e00565b34801561052e57600080fd5b5061021e6119ef565b34801561054357600080fd5b5061021e610552366004612ce7565b6119fb565b34801561056357600080fd5b5061021e610572366004612c82565b611b2b565b34801561058357600080fd5b5061021e611bde565b34801561059857600080fd5b506102d4611be4565b3480156105ad57600080fd5b506102f46105bc366004612cc6565b611c3c565b61021e6105cf366004612bf1565b611e0f565b3480156105e057600080fd5b506102546105ef366004612cc6565b6120fb565b34801561060057600080fd5b5061040861213f565b34801561061557600080fd5b5061021e610624366004612c9a565b61214e565b60075481565b6000908152600160205260409020600a81015460099091015490918190565b60008181526001602052604081205482904211801561068a575060008181526001602052604081206006015460ff16600281111561068857fe5b145b1561069857610698816121f4565b8260018060008381526001602052604090206006015460ff1660028111156106bc57fe5b146106e25760405162461bcd60e51b81526004016106d990613348565b60405180910390fd5b600085815260016020526040808220600480546009830154935163684e62bf60e11b81528a9593946001600160a01b039092169392849263d09cc57e926107299201612df7565b60206040518083038186803b15801561074157600080fd5b505afa158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107799190810190612bd9565b60088401819055604051909150899033907f67a6457c8912ae1b7a9fbdfa311cbd016ba606b548bf06bc80bc751072d91bbc906107b990859042906134fc565b60405180910390a36107ca89612244565b50506008015494506107db816121f4565b50505050919050565b600082815260016020526040812081908190819081906002600682015460ff16600281111561080f57fe5b14610834576000806000806108248c8c61214e565b95509550955095509550506108aa565b60088101546000908152600e8201602090815260408083206001600160a01b038b16845260048082018452828520546005808401865284872054928801865284872054908801909552929094205490939115159260ff92831692901515911661089d8d8d61214e565b9650965096509650965050505b9295509295909350565b600081815260016020908152604091829020600d81018054845181850281018501909552808552606094929383018282801561090f57602002820191906000526020600020905b8154815260200190600101908083116108fb575b50505050509150505b919050565b600084815260016020526040902054849042118015610959575060008181526001602052604081206006015460ff16600281111561095757fe5b145b1561096757610967816121f4565b8460008060008381526001602052604090206006015460ff16600281111561098b57fe5b146109a85760405162461bcd60e51b81526004016106d990613348565b6000878152600160209081526040808320898452600e8101909252822090916109d2888b8b6119fb565b9050868111156109f45760405162461bcd60e51b81526004016106d990613433565b60008111610a145760405162461bcd60e51b81526004016106d990612f82565b336000908152600483016020526040902054811115610a455760405162461bcd60e51b81526004016106d990613307565b610a51338b8b846122f9565b6000610a70600354670de0b6b3a764000061239890919063ffffffff16565b600a850154610a86908b9063ffffffff6123c016565b81610a8d57fe5b600b8601549190049150610aa7908263ffffffff6123fa16565b600b8501556000610abe8a8363ffffffff6123fa16565b90508085600101541015610ae45760405162461bcd60e51b81526004016106d9906132c4565b610aee8c8261241f565b60405133908b156108fc02908c906000818181858888f19350505050158015610b1b573d6000803e3d6000fd5b508b6001336001600160a01b031660008051602061350b8339815191528e878f42604051610b4c9493929190612e37565b60405180910390a4610b5d8c612244565b505050505050505050505050565b60001981565b60055481565b600083815260016020526040902054839042118015610bb3575060008181526001602052604081206006015460ff166002811115610bb157fe5b145b15610bc157610bc1816121f4565b8360008060008381526001602052604090206006015460ff166002811115610be557fe5b14610c025760405162461bcd60e51b81526004016106d990613348565b6000868152600160205260408120903490610c1e828a8a610d38565b905086811015610c405760405162461bcd60e51b81526004016106d9906133fc565b60008111610c605760405162461bcd60e51b81526004016106d990612f82565b600a830154600090670de0b6b3a764000090610c8390859063ffffffff6123c016565b81610c8a57fe5b600b8601549190049150610ca4908263ffffffff6123fa16565b600b8501556000610cbb848363ffffffff61239816565b60008b8152600e870160205260409020909150610cd88c836124c2565b6003810154841115610cfc5760405162461bcd60e51b81526004016106d99061337f565b610d08338d8d8761255b565b8b6000336001600160a01b031660008051602061350b8339815191528e888a42604051610b4c9493929190612e37565b60008281526001602052604081206060610d51856125ea565b90506000610d91670de0b6b3a7640000610d7b85600a01600001548a6123c090919063ffffffff16565b81610d8257fe5b8991900463ffffffff61239816565b90506000828681518110610da157fe5b602002602001015190506000610dc8670de0b6b3a7640000836123c090919063ffffffff16565b905060005b8451811015610e3357878114610e2b576000858281518110610deb57fe5b60200260200101519050610e27610e0b86836123fa90919063ffffffff16565b610e1b858463ffffffff6123c016565b9063ffffffff61267d16565b9250505b600101610dcd565b5060008111610e545760405162461bcd60e51b81526004016106d990612ea4565b610e8b610e6f82670de0b6b3a764000063ffffffff61267d16565b610e7f848663ffffffff6123fa16565b9063ffffffff61239816565b9998505050505050505050565b60009081526001602052604090206009015490565b60008181526001602052604081206002600682015460ff166002811115610ed057fe5b14610edf576000915050610918565b600d810154600890910154101592915050565b600081815260016020526040902054819042118015610f2e575060008181526001602052604081206006015460ff166002811115610f2c57fe5b145b15610f3c57610f3c816121f4565b8160008060008381526001602052604090206006015460ff166002811115610f6057fe5b14610f7d5760405162461bcd60e51b81526004016106d990613348565b610f8784346126ad565b50505050565b8060028060008381526001602052604090206006015460ff166002811115610fb157fe5b14610fce5760405162461bcd60e51b81526004016106d990613348565b6000838152600160205260409020610fe584611835565b3360009081526004820160205260409020546110135760405162461bcd60e51b81526004016106d990613281565b33600090815260058201602052604090205460ff16156110455760405162461bcd60e51b81526004016106d99061323a565b600061105085611b2b565b33600090815260048401602052604081205491925090670de0b6b3a76400009061108190849063ffffffff6123c016565b8161108857fe5b04905080836001015410156110af5760405162461bcd60e51b81526004016106d99061309d565b60018301546110c4908263ffffffff61239816565b600184810191909155336000818152600580870160209081526040808420805460ff19169096179095556004880190528382205493518a9491939260008051602061350b8339815191529261111c9288904290612e37565b60405180910390a4604051339082156108fc029083906000818181858888f19350505050158015611151573d6000803e3d6000fd5b50505050505050565b8060028060008381526001602052604090206006015460ff16600281111561117e57fe5b1461119b5760405162461bcd60e51b81526004016106d990613348565b600083815260016020908152604080832060088101548452600e81018352818420338552600481019093529220546111e55760405162461bcd60e51b81526004016106d990612fae565b33600090815260058201602052604090205460ff16156112175760405162461bcd60e51b81526004016106d990613161565b336000908152600482016020526040902054600183015481111561124d5760405162461bcd60e51b81526004016106d99061309d565b6001830154611262908263ffffffff61239816565b6001808501919091553360009081526005840160205260409020805460ff19169091179055856004600885015433600081815260048701602052604090819020549051919260008051602061350b8339815191529261111c929088904290612e37565b6004546001600160a01b031681565b60008060006112e284611b2b565b6112ed85600061130b565b6112f886600161130b565b9250925092509193909250565b60025481565b6000828152600160209081526040808320848452600e810190925282206002600683015460ff16600281111561133d57fe5b148015611350575061134e85610ead565b155b1561137a5760088201548414611367576000611371565b670de0b6b3a76400005b925050506113c5565b600380830154908201546113c091906113b490670de0b6b3a7640000906113a890849063ffffffff61239816565b9063ffffffff6123c016565b9063ffffffff612a6a16565b925050505b92915050565b600082815260016020526040902054829042118015611407575060008181526001602052604081206006015460ff16600281111561140557fe5b145b1561141557611415816121f4565b8260008060008381526001602052604090206006015460ff16600281111561143957fe5b146114565760405162461bcd60e51b81526004016106d990613348565b600085815260016020908152604080832033845260048101909252909120548511156114945760405162461bcd60e51b81526004016106d990613307565b61149d86611835565b6114a986866003612a8b565b5060606114b5876125ea565b9050606081516040519080825280602002602001820160405280156114e4578160200160208202803883390190505b50905060001960005b835181101561152357600084828151811061150457fe5b602002602001015190508083111561151a578092505b506001016114ed565b506002840154600090611540906113b48b8563ffffffff6123c016565b905060005b84518110156115de5785600201546115798b87848151811061156357fe5b60200260200101516123c090919063ffffffff16565b8161158057fe5b0484828151811061158d57fe5b6020026020010181815250506115bf828583815181106115a957fe5b602002602001015161239890919063ffffffff16565b8482815181106115cb57fe5b6020908102919091010152600101611545565b506115e98a8261241f565b60028501546115fe908a63ffffffff61239816565b6002860155336000908152600486016020526040902054611625908a63ffffffff61239816565b3360009081526004870160205260408120919091555b845181101561172657600084828151811061165257fe5b6020026020010151111561171e576003808701546000838152600e89016020526040902090910154855161169f9033908f9086908a908290811061169257fe5b602002602001015161255b565b8c6000336001600160a01b031660008051602061350b833981519152868a88815181106116c857fe5b60200260200101516117028e600301546113b48e8c815181106116e757fe5b60200260200101516113a88b8d61239890919063ffffffff16565b426040516117139493929190612e37565b60405180910390a450505b60010161163b565b50604051339082156108fc029083906000818181858888f19350505050158015611754573d6000803e3d6000fd5b50896003336001600160a01b031660008051602061350b83398151915260008d86426040516117869493929190612e37565b60405180910390a4897f1eca98f266e5348ae38d5d057a4d8e451e76672f69ac6ba4b0e3b31ea9c7eb2b86600201546117be8d611b2b565b426040516117ce939291906134ad565b60405180910390a250505050505050505050565b600082815260016020908152604080832060028101546001600160a01b03861685526004820190935290832054909161182d916113b490670de0b6b3a764000063ffffffff6123c016565b949350505050565b60008181526001602052604081209061184e833361214e565b905080156118ba57336000908152600c83016020526040902054611878908263ffffffff6123fa16565b336000818152600c85016020526040808220939093559151909183156108fc02918491818181858888f193505050501580156118b8573d6000803e3d6000fd5b505b82600633600081815260048601602052604080822054905160008051602061350b833981519152926118f192909188904290612e37565b60405180910390a4505050565b60009182526001602081815260408085206001600160a01b03949094168086526004808601845282872054878052600e9096018085528388208389528201855283882054958852845282872091875201909152909220549092565b60008181526001602052604081206002600682015460ff16600281111561197c57fe5b1461198c57600019915050610918565b6008015492915050565b6000818152600160208190526040822060068101548154600283015493830154600384015486958695869586958695929460ff90921693909290916119da8d611959565b949d939c50919a509850965090945092505050565b670de0b6b3a764000081565b60008281526001602052604081206060611a14856125ea565b600a830154909150600090611a3890670de0b6b3a76400009063ffffffff61239816565b611a5088670de0b6b3a764000063ffffffff6123c016565b81611a5757fe5b0490506000828681518110611a6857fe5b602002602001015190506000611a8f670de0b6b3a7640000836123c090919063ffffffff16565b905060005b8451811015611ade57878114611ad6576000858281518110611ab257fe5b60200260200101519050611ad2610e0b868361239890919063ffffffff16565b9250505b600101611a94565b5060008111611aff5760405162461bcd60e51b81526004016106d990612ea4565b610e8b82610e7f611b1e84670de0b6b3a764000063ffffffff61267d16565b869063ffffffff6123fa16565b60008181526001602052604081206002600682015460ff166002811115611b4e57fe5b148015611b615750611b5f83610ead565b155b15611ba957600281015460088201546000908152600e83016020526040902060030154611ba191906113b490670de0b6b3a764000063ffffffff6123c016565b915050610918565b6003810154600d8201546002830154611bd792916113b49190670de0b6b3a76400000263ffffffff6123c016565b9392505050565b60035481565b60606000805480602002602001604051908101604052809291908181526020018280548015611c3257602002820191906000526020600020905b815481526020019060010190808311611c1e575b5050505050905090565b8160028060008381526001602052604090206006015460ff166002811115611c6057fe5b14611c7d5760405162461bcd60e51b81526004016106d990613348565b6000848152600160209081526040808320868452600e8101835281842033855260048101909352922054611cc35760405162461bcd60e51b81526004016106d990612f0a565b33600090815260068201602052604090205460ff1615611cf55760405162461bcd60e51b81526004016106d99061346a565b6000611d01878761130b565b33600090815260048401602052604081205491925090611d3690670de0b6b3a7640000906113b490859063ffffffff6123c016565b90508084600101541015611d5c5760405162461bcd60e51b81526004016106d99061309d565b6001840154611d71908263ffffffff61239816565b6001808601919091553360009081526006850160205260409020805460ff191690911790558760073360008181526004870160205260409081902054905160008051602061350b83398151915291611dcf918d919088904290612e37565b60405180910390a4604051339082156108fc029083906000818181858888f19350505050158015611e04573d6000803e3d6000fd5b505050505050505050565b6007546006546040516370a0823160e01b8152600092916001600160a01b0316906370a0823190611e44903390600401612d6d565b60206040518083038186803b158015611e5c57600080fd5b505afa158015611e70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e949190810190612bd9565b1015611eb25760405162461bcd60e51b81526004016106d990613117565b60025460008054600181810183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091018390558282526020526040902034611f0e5760405162461bcd60e51b81526004016106d990612edb565b428611611f2d5760405162461bcd60e51b81526004016106d9906131f0565b6001600160a01b038516611f535760405162461bcd60e51b81526004016106d9906133c5565b83600214611f735760405162461bcd60e51b81526004016106d990612ff8565b85815560068101805460ff19169055600354600a820155600019600882015560005b84811015611fd757600d820180546001818101835560009283526020808420909201849055838352600e85019091526040909120848155810182905501611f95565b506000600460009054906101000a90046001600160a01b03169050806001600160a01b031663d4876b9f60028d8d8a6005548d6000806040518963ffffffff1660e01b8152600401612030989796959493929190612e52565b602060405180830381600087803b15801561204a57600080fd5b505af115801561205e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120829190810190612bd9565b600983015561209183346126ad565b61209a83612244565b82336001600160a01b03167f928446b14f4c661d8499681f1d2eb118eb6e89066877a7d43e0672a27cc63a32878e8e8e8e6040516120dc9594939291906134c3565b60405180910390a3505060028054600101905598975050505050505050565b6000828152600160209081526040808320848452600e8101909252822082918291612126878761130b565b6003820154600290920154909891975095509350505050565b6006546001600160a01b031681565b600082815260016020908152604080832060028101546001600160a01b03861685526004820190935290832054600b82015491928492612198926113b4919063ffffffff6123c016565b6001600160a01b0385166000908152600c840160205260409020549091508110156121c8576000925050506113c5565b6001600160a01b0384166000908152600c830160205260409020546113c090829063ffffffff61239816565b6000818152600160205260409020600681015460ff16600281111561221557fe5b600101600281111561222357fe5b60068201805460ff1916600183600281111561223b57fe5b02179055505050565b6000818152600160205260408120905b600d8201548110156122ac5780837f8270f0a0534b13b7f92d1dbd58aa75c5207b40c55fefa7a17110c6136ad7270b61228d868561130b565b4260405161229c9291906134fc565b60405180910390a3600101612254565b50817f1eca98f266e5348ae38d5d057a4d8e451e76672f69ac6ba4b0e3b31ea9c7eb2b82600201546122dd85611b2b565b426040516122ed939291906134ad565b60405180910390a25050565b6000838152600160209081526040808320858452600e810183528184206001600160a01b03891685526004810190935292205461233c908463ffffffff61239816565b6001600160a01b0387166000908152600483016020526040902055600381015461236c908463ffffffff6123fa16565b600380830191909155820154612388908463ffffffff6123fa16565b8260030181905550505050505050565b6000828211156123ba5760405162461bcd60e51b81526004016106d990613066565b50900390565b6000826123cf575060006113c5565b828202828482816123dc57fe5b0414611bd75760405162461bcd60e51b81526004016106d9906131af565b600082820183811015611bd75760405162461bcd60e51b81526004016106d990612f4b565b6000828152600160205260408120905b600d8201548110156124a2576000818152600e8301602052604090206003810154612460908563ffffffff61239816565b6003820155600281015461247a908563ffffffff61239816565b60028201556003830154612494908563ffffffff61239816565b60038401555060010161242f565b5060018101546124b8908363ffffffff61239816565b6001909101555050565b6000828152600160205260408120905b600d820154811015612545576000818152600e8301602052604090206003810154612503908563ffffffff6123fa16565b6003820155600281015461251d908563ffffffff6123fa16565b60028201556003830154612537908563ffffffff6123fa16565b6003840155506001016124d2565b5060018101546124b8908363ffffffff6123fa16565b6000838152600160209081526040808320858452600e810183528184206001600160a01b03891685526004810190935292205461259e908463ffffffff6123fa16565b6001600160a01b038716600090815260048301602052604090205560038101546125ce908463ffffffff61239816565b600380830191909155820154612388908463ffffffff61239816565b600081815260016020908152604091829020600d8101548351818152818402810190930190935260609290918391801561262e578160200160208202803883390190505b50905060005b600d830154811015612675576000818152600e84016020526040902060030154825183908390811061266257fe5b6020908102919091010152600101612634565b509392505050565b6000821561269c5781600184038161269157fe5b0460010190506113c5565b8183816126a557fe5b049392505050565b6000828152600160205260409020548290421180156126e9575060008181526001602052604081206006015460ff1660028111156126e757fe5b145b156126f7576126f7816121f4565b8260008060008381526001602052604090206006015460ff16600281111561271b57fe5b146127385760405162461bcd60e51b81526004016106d990613348565b6000858152600160205260409020846127635760405162461bcd60e51b81526004016106d99061302f565b60006060612770886125ea565b90506060815160405190808252806020026020018201604052801561279f578160200160208202803883390190505b5060028501549091506000901561288e5760005b83518110156127e95760008482815181106127ca57fe5b60200260200101519050808310156127e0578092505b506001016127b3565b5060005b83518110156128595760008261281f86848151811061280857fe5b60200260200101518d6123c090919063ffffffff16565b8161282657fe5b0490506128398b8263ffffffff61239816565b84838151811061284557fe5b6020908102919091010152506001016127ed565b508061287286600201548b6123c090919063ffffffff16565b8161287957fe5b0493506128888a856002612a8b565b50612892565b8893505b60028501546128a7908563ffffffff6123fa16565b60028601553360009081526004860160205260409020546128ce908563ffffffff6123fa16565b3360009081526004870160205260409020556128ea8a8a6124c2565b60005b82518110156129b057600083828151811061290457fe5b602002602001015111156129a8576003808701546000838152600e8901602052604090209091015484516129449033908f90869089908290811061169257fe5b8c6000336001600160a01b031660008051602061350b8339815191528689888151811061296d57fe5b602002602001015161298c8e600301546113b48d8c815181106116e757fe5b4260405161299d9493929190612e37565b60405180910390a450505b6001016128ed565b5060006129bc8b611b2b565b90506000670de0b6b3a76400006129d9838863ffffffff6123c016565b816129e057fe5b0490508b6002336001600160a01b031660008051602061350b83398151915260008a8642604051612a149493929190612e37565b60405180910390a48b7f1eca98f266e5348ae38d5d057a4d8e451e76672f69ac6ba4b0e3b31ea9c7eb2b88600201548442604051612a54939291906134ad565b60405180910390a2505050505050505050505050565b600080821161269c5760405162461bcd60e51b81526004016106d9906130e0565b60008381526001602052604081206002810154600b8201548391612aba916113b490889063ffffffff6123c016565b90506002846007811115612aca57fe5b1415612b2357600b820154612ae5908263ffffffff6123fa16565b600b830155336000908152600c83016020526040902054612b0c908263ffffffff6123fa16565b336000908152600c84016020526040902055612b72565b600b820154612b38908263ffffffff61239816565b600b830155336000908152600c83016020526040902054612b5f908263ffffffff61239816565b336000908152600c840160205260409020555b50509392505050565b80356001600160a01b03811681146113c557600080fd5b60008083601f840112612ba3578182fd5b50813567ffffffffffffffff811115612bba578182fd5b602083019150836020828501011115612bd257600080fd5b9250929050565b600060208284031215612bea578081fd5b5051919050565b600080600080600080600060a0888a031215612c0b578283fd5b873567ffffffffffffffff80821115612c22578485fd5b612c2e8b838c01612b92565b909950975060208a0135915080821115612c46578485fd5b50612c538a828b01612b92565b90965094505060408801359250612c6d8960608a01612b7b565b91506080880135905092959891949750929550565b600060208284031215612c93578081fd5b5035919050565b60008060408385031215612cac578182fd5b82359150612cbd8460208501612b7b565b90509250929050565b60008060408385031215612cd8578182fd5b50508035926020909101359150565b600080600060608486031215612cfb578283fd5b505081359360208301359350604090920135919050565b60008060008060808587031215612d27578384fd5b5050823594602084013594506040840135936060013592509050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015612db957835183529284019291840191600101612d9d565b50909695505050505050565b901515815260200190565b94151585529215156020850152901515604084015215156060830152608082015260a00190565b90815260200190565b60c0810160038810612e0e57fe5b968152602081019590955260408501939093526060840191909152608083015260a09091015290565b93845260208401929092526040830152606082015260800190565b600089825260e06020830152612e6c60e08301898b612d43565b6001600160a01b039790971660408301525063ffffffff948516606082015292909316608083015260a082015260c001529392505050565b6020808252601b908201527f6d7573742068617665206e6f6e2d7a65726f2062616c616e6365730000000000604082015260600190565b60208082526015908201527407374616b65206e6565647320746f206265203e203605c1b604082015260600190565b60208082526021908201527f7573657220646f6573206e6f7420686f6c64206f7574636f6d652073686172656040820152607360f81b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b602080825260129082015271073686172657320616d6f756e7420697320360741b604082015260600190565b6020808252602a908201527f7573657220646f6573206e6f7420686f6c64207265736f6c766564206f7574636040820152696f6d652073686172657360b01b606082015260800190565b6020808252601e908201527f6e756d626572206f66206f7574636f6d65732068617320746f20626520320000604082015260600190565b6020808252601f908201527f7374616b652068617320746f2062652067726561746572207468616e20302e00604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526023908201527f4d61726b657420646f6573206e6f74206861766520656e6f7567682062616c616040820152626e636560e81b606082015260800190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b6020808252602a908201527f6d73672e73656e646572206d75737420686f6c64206d696e696d756d2065726360408201526932302062616c616e636560b01b606082015260800190565b6020808252602e908201527f7573657220616c726561647920636c61696d6564207265736f6c766564206f7560408201526d74636f6d652077696e6e696e677360901b606082015260800190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252602a908201527f6d61726b6574206d757374207265736f6c7665206166746572207468652063756040820152697272656e74206461746560b01b606082015260800190565b60208082526027908201527f7573657220616c726561647920636c61696d6564206c69717569646974792077604082015266696e6e696e677360c81b606082015260800190565b60208082526023908201527f7573657220646f6573206e6f7420686f6c64206c69717569646974792073686160408201526272657360e81b606082015260800190565b60208082526023908201527f6d61726b657420646f6573206e6f74206861766520656e6f7567682062616c616040820152626e636560e81b606082015260800190565b60208082526021908201527f7573657220646f6573206e6f74206861766520656e6f7567682062616c616e636040820152606560f81b606082015260800190565b60208082526019908201527f4d61726b657420696e20696e636f727265637420737461746500000000000000604082015260600190565b60208082526026908201527f6f7574636f6d652073686172657320706f6f6c2062616c616e636520697320746040820152656f6f206c6f7760d01b606082015260800190565b6020808252601a908201527f696e76616c69642061726269747261746f722061646472657373000000000000604082015260600190565b6020808252601e908201527f6d696e696d756d2062757920616d6f756e74206e6f7420726561636865640000604082015260600190565b6020808252601c908201527f6d6178696d756d2073656c6c20616d6f756e7420657863656564656400000000604082015260600190565b60208082526023908201527f7573657220616c726561647920636c61696d6564206f7574636f6d652073686160408201526272657360e81b606082015260800190565b9283526020830191909152604082015260600190565b6000868252606060208301526134dd606083018688612d43565b82810360408401526134f0818587612d43565b98975050505050505050565b91825260208201526040019056fe9dcabe311735ed0d65f0c22c5425d1f17331f94c9d0767f59e58473cf95ada61a2646970667358221220b89e6e619d3667e7c276432c71b641eebfbf7287208a480d66b694bc76a6b1e464736f6c63430006020033"}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV2.json":
/*!*******************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/PredictionMarketV2.json ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"PredictionMarketV2","abi":[{"inputs":[{"internalType":"contract IERC20","name":"_requiredBalanceToken","type":"address"},{"internalType":"uint256","name":"_requiredBalance","type":"uint256"},{"internalType":"address","name":"_realitioAddress","type":"address"},{"internalType":"uint256","name":"_realitioTimeout","type":"uint256"},{"internalType":"contract IWETH","name":"_WETH","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"enum PredictionMarketV2.MarketAction","name":"action","type":"uint8"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketActionTx","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomes","type":"uint256"},{"indexed":false,"internalType":"string","name":"question","type":"string"},{"indexed":false,"internalType":"string","name":"image","type":"string"},{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"}],"name":"MarketCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketOutcomePrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"outcomeShares","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"}],"name":"MarketOutcomeShares","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketResolved","type":"event"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_OUTCOMES","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_UINT_256","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"realitioAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"realitioTimeout","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"requiredBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"requiredBalanceToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"},{"inputs":[{"components":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"closesAt","type":"uint256"},{"internalType":"uint256","name":"outcomes","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256[]","name":"distribution","type":"uint256[]"},{"internalType":"string","name":"question","type":"string"},{"internalType":"string","name":"image","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"treasuryFee","type":"uint256"},{"internalType":"address","name":"treasury","type":"address"}],"internalType":"struct PredictionMarketV2.CreateMarketDescription","name":"desc","type":"tuple"}],"name":"createMarket","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"closesAt","type":"uint256"},{"internalType":"uint256","name":"outcomes","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256[]","name":"distribution","type":"uint256[]"},{"internalType":"string","name":"question","type":"string"},{"internalType":"string","name":"image","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"treasuryFee","type":"uint256"},{"internalType":"address","name":"treasury","type":"address"}],"internalType":"struct PredictionMarketV2.CreateMarketDescription","name":"desc","type":"tuple"}],"name":"createMarketWithETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"calcBuyAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"calcSellAmount","outputs":[{"internalType":"uint256","name":"outcomeTokenSellAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"minOutcomeSharesToBuy","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"buy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"minOutcomeSharesToBuy","type":"uint256"}],"name":"buyWithETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxOutcomeSharesToSell","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxOutcomeSharesToSell","type":"uint256"}],"name":"sellToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"addLiquidityWithETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"removeLiquidityToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"resolveMarketOutcome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimWinnings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimWinningsToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"claimVoidedOutcomeShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"claimVoidedOutcomeSharesToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimLiquidityToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimFeesToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserMarketShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserClaimStatus","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserLiquidityPoolShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserClaimableFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarkets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketData","outputs":[{"internalType":"enum PredictionMarketV2.MarketState","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketAltData","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"contract IERC20","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketQuestion","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketLiquidityPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketResolvedOutcome","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"isMarketVoided","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketOutcomeIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"getMarketOutcomePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"getMarketOutcomeData","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x6101206040523480156200001257600080fd5b506040516200553238038062005532833981016040819052620000359162000129565b60016000556001600160a01b038316620000965760405162461bcd60e51b815260206004820152601d60248201527f5f7265616c6974696f416464726573732069732061646472657373203000000060448201526064015b60405180910390fd5b60008211620000e85760405162461bcd60e51b815260206004820152601860248201527f74696d656f7574206d75737420626520706f736974697665000000000000000060448201526064016200008d565b6001600160a01b0394851660c05260e09390935290831660805260a052166101005262000191565b6001600160a01b03811681146200012657600080fd5b50565b600080600080600060a086880312156200014257600080fd5b85516200014f8162000110565b602087015160408801519196509450620001698162000110565b606087015160808801519194509250620001838162000110565b809150509295509295909350565b60805160a05160c05160e0516101005161527c620002b6600039600081816102a7015281816107f601528181610c8b01528181610cec01528181610d5a0152818161119c015281816111f4015281816112610152818161136b015281816113c301528181611438015281816115170152818161156f01528181611aba01528181611b1201528181611b6a01528181611fe4015281816120d00152818161214c015281816121a40152818161220a015281816122a50152818161242801528181612480015281816124e7015281816125fd015261265501526000818161034e015281816126ad01526126e8015260008181610640015261270a01526000818161056c0152612ad60152600081816106cc01528181610f420152612aa1015261527c6000f3fe6080604052600436106102975760003560e01c80638c7adc151161015a578063c2ee3a08116100c1578063ec2c90161161007a578063ec2c90161461095c578063ec93f0f514610971578063efce431314610991578063f5f1dbf9146109cc578063fdff8085146109df578063feebaca0146109ff57600080fd5b8063c2ee3a08146108b8578063c346a9d0146108d4578063c8f70d01146108f4578063d3d15d6714610914578063d450deca14610927578063dc73d1641461094757600080fd5b8063ad5c464811610113578063ad5c4648146107e4578063b02ed3db14610818578063b31eb8951461082b578063bc063e1a1461084b578063bf45572114610866578063bfacba3d1461088657600080fd5b80638c7adc151461072e5780638cd41552146107445780639cd441da146107645780639d7de6b314610784578063aa22a02e146107a4578063ac68a748146107c457600080fd5b80633d41a26b116101fe5780635c6d91d0116101b75780635c6d91d01461062e5780635e648eff1461067a578063677bd9ff1461069a5780637b34e6e0146106ba5780637ef1c3c7146106ee57806385b91d8e1461070e57600080fd5b80633d41a26b146105445780633fe45e3b1461055a578063411e0b171461058e578063429c9dff146105ae5780634397c4ce146105ce578063441cf65e146105fe57600080fd5b806328747a801161025057806328747a80146104475780632c2aa24e1461046757806331877a38146104b7578063325a00a8146104e45780633620875e1461050457806336d06c0a1461052457600080fd5b806302dafc8b146102db57806305a7e5b71461030e57806308560ace1461033c5780630d1ee133146103705780631281311d146103905780631d7920aa146103b057600080fd5b366102d657336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102d4576102d4614c44565b005b600080fd5b3480156102e757600080fd5b506102fb6102f6366004614c5a565b610a1f565b6040519081526020015b60405180910390f35b34801561031a57600080fd5b5061032e610329366004614c96565b610bc9565b604051610305929190614cea565b34801561034857600080fd5b506102fb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561037c57600080fd5b506102d461038b366004614d03565b610c88565b34801561039c57600080fd5b506102d46103ab366004614d25565b610e2d565b3480156103bc57600080fd5b5061040b6103cb366004614c96565b6000908152600260205260409020600a81015460098201546011830154600e840154600d909401549294919384936001600160a01b039283169391921690565b604080519687526020870195909552938501929092526001600160a01b03908116606085015260808401919091521660a082015260c001610305565b34801561045357600080fd5b506102fb610462366004614c96565b610e7a565b34801561047357600080fd5b50610487610482366004614d6c565b611022565b6040805195151586529315156020860152911515928401929092529015156060830152608082015260a001610305565b3480156104c357600080fd5b506104d76104d2366004614c96565b6110f9565b6040516103059190614d9c565b3480156104f057600080fd5b506102d46104ff366004614c96565b611199565b34801561051057600080fd5b506102d461051f366004614d25565b61132d565b34801561053057600080fd5b506102d461053f366004614c96565b611368565b34801561055057600080fd5b506102fb60001981565b34801561056657600080fd5b506102fb7f000000000000000000000000000000000000000000000000000000000000000081565b34801561059a57600080fd5b506102d46105a9366004614d03565b611514565b3480156105ba57600080fd5b506102fb6105c9366004614daf565b6115c4565b3480156105da57600080fd5b506102fb6105e9366004614c96565b60009081526002602052604090206009015490565b34801561060a57600080fd5b5061061e610619366004614c96565b611728565b6040519015158152602001610305565b34801561063a57600080fd5b506106627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610305565b34801561068657600080fd5b506102d4610695366004614c96565b611773565b3480156106a657600080fd5b506102d46106b5366004614c96565b6117ae565b3480156106c657600080fd5b506106627f000000000000000000000000000000000000000000000000000000000000000081565b3480156106fa57600080fd5b506102fb610709366004614c96565b6117b9565b34801561071a57600080fd5b5061032e610729366004614c96565b6117e2565b34801561073a57600080fd5b506102fb60035481565b34801561075057600080fd5b506102fb61075f366004614d03565b611899565b34801561077057600080fd5b506102d461077f366004614d03565b6119a1565b34801561079057600080fd5b506102d461079f366004614d03565b6119e3565b3480156107b057600080fd5b506102fb6107bf366004614d6c565b611a1a565b3480156107d057600080fd5b506102d46107df366004614c96565b611a6a565b3480156107f057600080fd5b506106627f000000000000000000000000000000000000000000000000000000000000000081565b6102d4610826366004614daf565b611ab7565b34801561083757600080fd5b5061032e610846366004614d6c565b611be8565b34801561085757600080fd5b506102fb66b1a2bc2ec5000081565b34801561087257600080fd5b506102fb610881366004614c96565b611cd5565b34801561089257600080fd5b506108a66108a1366004614c96565b611d18565b60405161030596959493929190614df1565b3480156108c457600080fd5b506102fb670de0b6b3a764000081565b3480156108e057600080fd5b506102fb6108ef366004614daf565b611d70565b34801561090057600080fd5b506102fb61090f366004614c96565b611eb5565b6102fb610922366004614c5a565b611fd8565b34801561093357600080fd5b506102d4610942366004614d25565b612149565b34801561095357600080fd5b506102fb602081565b34801561096857600080fd5b506104d761237d565b34801561097d57600080fd5b506102d461098c366004614d03565b6123d5565b34801561099d57600080fd5b506109b16109ac366004614d03565b6123e1565b60408051938452602084019290925290820152606001610305565b6102d46109da366004614c96565b612425565b3480156109eb57600080fd5b506102fb6109fa366004614d6c565b61255f565b348015610a0b57600080fd5b506102d4610a1a366004614c96565b6125fa565b600080610b99604051806101600160405280856000013581526020018560200135815260200185604001358152602001856060016020810190610a629190614e3c565b6001600160a01b03168152602001610a7d6080870187614e59565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505090825250602001610ac160a0870187614ea3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610b0860c0870187614ea3565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610b53610100870160e08801614e3c565b6001600160a01b0316815261010086013560208201526101208601356040820152606001610b8961016087016101408801614e3c565b6001600160a01b031690526126a9565b9050610bc333308535610bb26080880160608901614e3c565b6001600160a01b0316929190612bd6565b92915050565b6000818152600260205260408120600f81015460609190839067ffffffffffffffff811115610bfa57610bfa614eea565b604051908082528060200260200182016040528015610c23578160200160208202803683370190505b50905060005b82600f0154811015610c785760008181526010840160205260409020600301548251839083908110610c5d57610c5d614f00565b6020908102919091010152610c7181614f2c565b9050610c29565b5060029091015494909350915050565b817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610cd85760405162461bcd60e51b8152600401610ccf90614f45565b60405180910390fd5b6000818152600260205260409020601101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116911614610d355760405162461bcd60e51b8152600401610ccf90614f7c565b6000610d418484612c41565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610da657600080fd5b505af1158015610dba573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d8060008114610e00576040519150601f19603f3d011682016040523d82523d6000602084013e610e05565b606091505b5050905080610e265760405162461bcd60e51b8152600401610ccf90614fb3565b5050505050565b610e35612ea2565b60008481526002602052604090206011810154610e5d906001600160a01b0316333085612bd6565b610e6985858585612efb565b50610e746001600055565b50505050565b600081815260026020526040812054829042118015610ebd5750600081815260026020819052604082206006015460ff1690811115610ebb57610ebb614ddb565b145b15610ecb57610ecb816131bc565b8260018060008381526002602081905260409091206006015460ff1690811115610ef757610ef7614ddb565b14610f145760405162461bcd60e51b8152600401610ccf90614fe1565b6000858152600260205260408082206009810154915163684e62bf60e11b8152889391926001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163d09cc57e91610f799160040190815260200190565b602060405180830381865afa158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba9190615018565b6008830181905560408051828152426020820152919250899133917f67a6457c8912ae1b7a9fbdfa311cbd016ba606b548bf06bc80bc751072d91bbc910160405180910390a36110098861322c565b50600801549450611019816131bc565b50505050919050565b60008281526002602081905260408220829182918291829190600682015460ff16600281111561105457611054614ddb565b14611079576000806000806110698c8c61255f565b95509550955095509550506110ef565b6008810154600090815260108201602090815260408083206001600160a01b038b16845260048082018452828520546005808401865284872054928801865284872054908801909552929094205490939115159260ff9283169290151591166110e28d8d61255f565b9650965096509650965050505b9295509295909350565b6000818152600260205260408120600f8101546060929067ffffffffffffffff81111561112857611128614eea565b604051908082528060200260200182016040528015611151578160200160208202803683370190505b50905060005b82600f0154811015611191578082828151811061117657611176614f00565b602090810291909101015261118a81614f2c565b9050611157565b509392505050565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166111e05760405162461bcd60e51b8152600401610ccf90614f45565b6000818152600260205260409020601101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161461123d5760405162461bcd60e51b8152600401610ccf90614f7c565b60006112488361331e565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156112ad57600080fd5b505af11580156112c1573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d8060008114611307576040519150601f19603f3d011682016040523d82523d6000602084013e61130c565b606091505b5050905080610e745760405162461bcd60e51b8152600401610ccf90614fb3565b611335612ea2565b61134184848484613509565b60008481526002602052604090206011810154610e69906001600160a01b0316338561381b565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166113af5760405162461bcd60e51b8152600401610ccf90614f45565b6000818152600260205260409020601101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161461140c5760405162461bcd60e51b8152600401610ccf90614f7c565b611414612ea2565b600061141f8361384b565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561148457600080fd5b505af1158015611498573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d80600081146114de576040519150601f19603f3d011682016040523d82523d6000602084013e6114e3565b606091505b50509050806115045760405162461bcd60e51b8152600401610ccf90614fb3565b50506115106001600055565b5050565b817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661155b5760405162461bcd60e51b8152600401610ccf90614f45565b6000818152600260205260409020601101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146115b85760405162461bcd60e51b8152600401610ccf90614f7c565b6000610d4184846138ed565b6000806115d084613ddd565b905060006115dd856117b9565b90506000670de0b6b3a76400006115f48389615031565b6115fe9190615048565b611608908861506a565b9050600083868151811061161e5761161e614f00565b602002602001015190506000670de0b6b3a76400008261163e9190615031565b905060005b85518110156116a45787811461169457600086828151811061166757611667614f00565b602002602001015190506116908582611680919061507d565b61168a8386615031565b90613e8a565b9250505b61169d81614f2c565b9050611643565b50600081116116f55760405162461bcd60e51b815260206004820152601b60248201527f6d7573742068617665206e6f6e2d7a65726f2062616c616e63657300000000006044820152606401610ccf565b61170781670de0b6b3a7640000613e8a565b611711848461507d565b61171b919061506a565b9998505050505050505050565b6000818152600260208190526040822090600682015460ff16600281111561175257611752614ddb565b146117605750600092915050565b600f810154600890910154101592915050565b600061177e82613ec4565b60008381526002602052604090206011810154919250906117a9906001600160a01b0316338461381b565b505050565b600061177e8261331e565b6000818152600260205260408120600e810154600a8201546117db919061507d565b9392505050565b6000818152600260205260408120600f81015460609190839067ffffffffffffffff81111561181357611813614eea565b60405190808252806020026020018201604052801561183c578160200160208202803683370190505b50905060005b82600f0154811015611885576118588682611899565b82828151811061186a5761186a614f00565b602090810291909101015261187e81614f2c565b9050611842565b5061188f85611eb5565b9590945092505050565b6000828152600260208190526040822090600682015460ff1660028111156118c3576118c3614ddb565b1480156118d657506118d484611728565b155b156118ff57600881015483146118ed5760006118f7565b670de0b6b3a76400005b915050610bc3565b670de0b6b3a764000060005b82600f015481101561197a5780851461196a576000818152601084016020526040808220600390810154888452919092209091015461195390670de0b6b3a764000090615031565b61195d9190615048565b611967908361507d565b91505b61197381614f2c565b905061190b565b508061198e670de0b6b3a764000080615031565b6119989190615048565b95945050505050565b6040805160008152602081019091526119bb8383836140c0565b60008381526002602052604090206011810154610e74906001600160a01b0316333086612bd6565b60006119ef83836138ed565b6000848152600260205260409020601181015491925090610e74906001600160a01b0316338461381b565b6000828152600260208181526040808420928301546001600160a01b038616855260048401909252832054611a5890670de0b6b3a764000090615031565b611a629190615048565b949350505050565b611a72612ea2565b6000611a7d8261384b565b6000838152600260205260409020601181015491925090611aa8906001600160a01b0316338461381b565b5050611ab46001600055565b50565b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611afe5760405162461bcd60e51b8152600401610ccf90614f45565b6000818152600260205260409020601101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03908116911614611b5b5760405162461bcd60e51b8152600401610ccf90614f7c565b611b63612ea2565b60003490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611bc357600080fd5b505af1158015611bd7573d6000803e3d6000fd5b5050505050610e6985858584612efb565b6000828152600260205260408120600f81015460609190839067ffffffffffffffff811115611c1957611c19614eea565b604051908082528060200260200182016040528015611c42578160200160208202803683370190505b50905060005b82600f0154811015611cab57600081815260108401602090815260408083206001600160a01b038a1684526004019091529020548251839083908110611c9057611c90614f00565b6020908102919091010152611ca481614f2c565b9050611c48565b506001600160a01b03851660009081526004909201602052604090912054925090505b9250929050565b6000818152600260208190526040822090600682015460ff166002811115611cff57611cff614ddb565b14611d0e575060001992915050565b6008015492915050565b6000818152600260208190526040822060068101548154928201546001830154600384015486958695869586958695929460ff90921693929091611d5b8d611cd5565b949d939c50919a509850965090945092505050565b600080611d7c84613ddd565b90506000611d89856117b9565b90506000611d9f82670de0b6b3a764000061506a565b611db1670de0b6b3a764000089615031565b611dbb9190615048565b90506000838681518110611dd157611dd1614f00565b602002602001015190506000670de0b6b3a764000082611df19190615031565b905060005b8551811015611e4757878114611e37576000868281518110611e1a57611e1a614f00565b60200260200101519050611e338582611680919061506a565b9250505b611e4081614f2c565b9050611df6565b5060008111611e985760405162461bcd60e51b815260206004820152601b60248201527f6d7573742068617665206e6f6e2d7a65726f2062616c616e63657300000000006044820152606401610ccf565b81611eab82670de0b6b3a7640000613e8a565b611711908561507d565b6000818152600260208190526040822090600682015460ff166002811115611edf57611edf614ddb565b148015611ef25750611ef083611728565b155b15611f3257600281015460088201546000908152601083016020526040902060030154611f2890670de0b6b3a764000090615031565b6117db9190615048565b6000805b82600f0154811015611f9157600081815260108401602052604090206003810154611f69670de0b6b3a764000080615031565b611f739190615048565b611f7d908461507d565b92505080611f8a90614f2c565b9050611f36565b50808260020154670de0b6b3a764000080670de0b6b3a764000086600f0154611fba9190615031565b611fc49190615031565b611fce9190615031565b611a589190615048565b60006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166120146080840160608501614e3c565b6001600160a01b03161461203a5760405162461bcd60e51b8152600401610ccf90614f7c565b3482351461208a5760405162461bcd60e51b815260206004820152601e60248201527f76616c756520646f6573206e6f74206d6174636820617267756d656e747300006044820152606401610ccf565b60006120cc604051806101600160405280856000013581526020018560200135815260200185604001358152602001856060016020810190610a629190614e3c565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561212957600080fd5b505af115801561213d573d6000803e3d6000fd5b50939695505050505050565b837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166121905760405162461bcd60e51b8152600401610ccf90614f45565b6000818152600260205260409020601101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146121ed5760405162461bcd60e51b8152600401610ccf90614f7c565b6121f5612ea2565b600085815260026020526040902060118101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146122835760405162461bcd60e51b815260206004820152601860248201527f6d61726b657420746f6b656e206973206e6f74205745544800000000000000006044820152606401610ccf565b61228f86868686613509565b604051632e1a7d4d60e01b8152600481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156122f157600080fd5b505af1158015612305573d6000803e3d6000fd5b50506040516000925033915086908381818185875af1925050503d806000811461234b576040519150601f19603f3d011682016040523d82523d6000602084013e612350565b606091505b50509050806123715760405162461bcd60e51b8152600401610ccf90614fb3565b5050610e266001600055565b606060018054806020026020016040519081016040528092919081815260200182805480156123cb57602002820191906000526020600020905b8154815260200190600101908083116123b7575b5050505050905090565b60006119ef8383612c41565b60008281526002602090815260408083208484526010810190925282208291829161240c8787611899565b6003820154600290920154909891975095509350505050565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661246c5760405162461bcd60e51b8152600401610ccf90614f45565b6000818152600260205260409020601101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146124c95760405162461bcd60e51b8152600401610ccf90614f7c565b60408051600081526020810190915234906124e58483836140c0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561254057600080fd5b505af1158015612554573d6000803e3d6000fd5b505050505050505050565b6000828152600260208181526040808420928301546001600160a01b038616855260048401909252832054600b83015484929161259b91615031565b6125a59190615048565b6001600160a01b0385166000908152600c840160205260409020549091508110156125d557600092505050610bc3565b6001600160a01b0384166000908152600c83016020526040902054611998908261506a565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166126415760405162461bcd60e51b8152600401610ccf90614f45565b6000818152600260205260409020601101547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161461269e5760405162461bcd60e51b8152600401610ccf90614f7c565b600061124883613ec4565b60007f0000000000000000000000000000000000000000000000000000000000000000158061278057506040516370a0823160e01b81523360048201527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015612759573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277d9190615018565b10155b6127cc5760405162461bcd60e51b815260206004820152601e60248201527f6d696e696d756d2065726332302062616c616e6365206e6f742068656c6400006044820152606401610ccf565b600354600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601819055600081815260026020526040902083516128525760405162461bcd60e51b815260206004820152601560248201527407374616b65206e6565647320746f206265203e203605c1b6044820152606401610ccf565b428460200151116128a55760405162461bcd60e51b815260206004820152601e60248201527f7265736f6c7574696f6e206265666f72652063757272656e74206461746500006044820152606401610ccf565b60e08401516001600160a01b03166128ff5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c69642061726269747261746f7220616464726573730000000000006044820152606401610ccf565b6000846040015111801561291857506020846040015111155b6129645760405162461bcd60e51b815260206004820152601e60248201527f6f7574636f6d6520636f756e74206e6f74206265747765656e20312d333200006044820152606401610ccf565b66b1a2bc2ec5000084610100015111156129b45760405162461bcd60e51b8152602060048201526011602482015270666565206d757374206265203c3d20352560781b6044820152606401610ccf565b66b1a2bc2ec500008461012001511115612a105760405162461bcd60e51b815260206004820152601a60248201527f747265617375727920666565206d757374206265203c3d2035250000000000006044820152606401610ccf565b60608401516011820180546001600160a01b03199081166001600160a01b0393841617909155602086015180845560068401805460ff19169055610100870151600a850155610120870151600e850155610140870151600d85018054909316908416179091556000196008840155604080870151600f85015560a087015160e0880151915163d4876b9f60e01b81527f00000000000000000000000000000000000000000000000000000000000000009094169363d4876b9f93612b03936002939290917f00000000000000000000000000000000000000000000000000000000000000009160009081906004016150e0565b6020604051808303816000875af1158015612b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b469190615018565b600982015583516080850151612b5d9184916140c0565b612b668261322c565b81336001600160a01b03167f57c2e8e67a3a13bc1991cd4ba3ed6733e269f1de098668140234d41dcb145ee486604001518760a001518860c001518960600151604051612bb69493929190615130565b60405180910390a3600354612bcc90600161507d565b6003555092915050565b6040516001600160a01b0380851660248301528316604482015260648101829052610e749085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261473c565b60008260028060008381526002602081905260409091206006015460ff1690811115612c6f57612c6f614ddb565b14612c8c5760405162461bcd60e51b8152600401610ccf90614fe1565b600085815260026020908152604080832087845260108101909252909120612cb387611728565b612cf65760405162461bcd60e51b81526020600482015260146024820152731b585c9ad95d081a5cc81b9bdd081d9bda59195960621b6044820152606401610ccf565b336000908152600482016020526040902054612d545760405162461bcd60e51b815260206004820181905260248201527f7573657220646f65736e277420686f6c64206f7574636f6d65207368617265736044820152606401610ccf565b33600090815260068201602052604090205460ff1615612db65760405162461bcd60e51b815260206004820152601b60248201527f7573657220616c726561647920636c61696d65642073686172657300000000006044820152606401610ccf565b6000612dc28888611899565b33600090815260048401602052604081205491925090670de0b6b3a764000090612dec9084615031565b612df69190615048565b90508084600101541015612e1c5760405162461bcd60e51b8152600401610ccf90615175565b808460010154612e2c919061506a565b6001858101919091553360008181526006860160209081526040808320805460ff1916909517909455600487018152908390205483518c8152918201529182018390524260608301528a91600791906000805160206152278339815191529060800160405180910390a498975050505050505050565b600260005403612ef45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ccf565b6002600055565b600084815260026020526040902054849042118015612f3e5750600081815260026020819052604082206006015460ff1690811115612f3c57612f3c614ddb565b145b15612f4c57612f4c816131bc565b8460008060008381526002602081905260409091206006015460ff1690811115612f7857612f78614ddb565b14612f955760405162461bcd60e51b8152600401610ccf90614fe1565b600087815260026020526040812090612faf868a8a6115c4565b9050868110156130015760405162461bcd60e51b815260206004820152601e60248201527f6d696e696d756d2062757920616d6f756e74206e6f74207265616368656400006044820152606401610ccf565b600081116130465760405162461bcd60e51b8152602060048201526012602482015271073686172657320616d6f756e7420697320360741b6044820152606401610ccf565b600a820154600090670de0b6b3a7640000906130629089615031565b61306c9190615048565b600b84015490915061307f90829061507d565b600b8401556000613090828961506a565b90506000670de0b6b3a764000085600a01600401548a6130b09190615031565b6130ba9190615048565b90506130c6818361506a565b60008c815260108701602052604090209092506130e38d8461480e565b60038101548511156131375760405162461bcd60e51b815260206004820152601e60248201527f73686172657320706f6f6c2062616c616e636520697320746f6f206c6f7700006044820152606401610ccf565b613143338e8e886148a5565b8c6000604080518f8152602081018990529081018d905242606082015233906000805160206152278339815191529060800160405180910390a46131868d61322c565b81156131ad57600d86015460118701546131ad916001600160a01b0391821691168461381b565b50505050505050505050505050565b60008181526002602081905260409091206006810154909160ff909116908111156131e9576131e9614ddb565b6131f490600161507d565b600281111561320557613205614ddb565b60068201805460ff1916600183600281111561322357613223614ddb565b02179055505050565b6000818152600260205260408120600f81015490919067ffffffffffffffff81111561325a5761325a614eea565b604051908082528060200260200182016040528015613283578160200160208202803683370190505b50905060005b82600f01548110156132d857600081815260108401602052604090206003015482518390839081106132bd576132bd614f00565b60209081029190910101526132d181614f2c565b9050613289565b50827fb1bbae7680415a1349ae813ba7d737ca09df07db1f6ce058b3e0812ec15e888642838560020154604051613311939291906151ac565b60405180910390a2505050565b60008160028060008381526002602081905260409091206006015460ff169081111561334c5761334c614ddb565b146133695760405162461bcd60e51b8152600401610ccf90614fe1565b600084815260026020908152604080832060088101548452601081018352818420338552600481019093529220546133e35760405162461bcd60e51b815260206004820181905260248201527f7573657220646f65736e277420686f6c64206f7574636f6d65207368617265736044820152606401610ccf565b33600090815260058201602052604090205460ff16156134455760405162461bcd60e51b815260206004820152601d60248201527f7573657220616c726561647920636c61696d65642077696e6e696e67730000006044820152606401610ccf565b336000908152600482016020526040902054600183015481111561347b5760405162461bcd60e51b8152600401610ccf90615175565b80836001015461348b919061506a565b6001808501919091553360009081526005840160205260409020805460ff19169091179055866004600885015433600081815260048701602090815260409182902054825194855290840152820185905242606083015290600080516020615227833981519152906080015b60405180910390a49695505050505050565b60008481526002602052604090205484904211801561354c5750600081815260026020819052604082206006015460ff169081111561354a5761354a614ddb565b145b1561355a5761355a816131bc565b8460008060008381526002602081905260409091206006015460ff169081111561358657613586614ddb565b146135a35760405162461bcd60e51b8152600401610ccf90614fe1565b600087815260026020908152604080832089845260108101909252822090916135cd888b8b611d70565b90508681111561361f5760405162461bcd60e51b815260206004820152601c60248201527f6d6178696d756d2073656c6c20616d6f756e74206578636565646564000000006044820152606401610ccf565b600081116136645760405162461bcd60e51b8152602060048201526012602482015271073686172657320616d6f756e7420697320360741b6044820152606401610ccf565b3360009081526004830160205260409020548111156136c55760405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e74207368617265732062616c616e636500000000006044820152606401610ccf565b6136d1338b8b84614935565b60006136dc8b6117b9565b905060006136f282670de0b6b3a764000061506a565b600a860154613701908c615031565b61370b9190615048565b600b86015490915061371e90829061507d565b600b86015550600061373882670de0b6b3a764000061506a565b613742838c615031565b61374c9190615048565b613756908b61507d565b9050808560010154101561377c5760405162461bcd60e51b8152600401610ccf90615175565b6137868c826149b5565b8b6001604080518e8152602081018790529081018d905242606082015233906000805160206152278339815191529060800160405180910390a46137c98c61322c565b60006137dd83670de0b6b3a764000061506a565b600e8701546137ec908d615031565b6137f69190615048565b905080156131ad57600d86015460118701546131ad916001600160a01b039182169116835b6040516001600160a01b0383166024820152604481018290526117a990849063a9059cbb60e01b90606401612c0a565b600081815260026020526040812081613864843361255f565b9050801561389c57336000908152600c8301602052604090205461388990829061507d565b336000908152600c840160205260409020555b83600633600081815260048601602090815260408083205481519384529183019190915281018590524260608201526000805160206152278339815191529060800160405180910390a49392505050565b6000828152600260205260408120548390421180156139305750600081815260026020819052604082206006015460ff169081111561392e5761392e614ddb565b145b1561393e5761393e816131bc565b8360008060008381526002602081905260409091206006015460ff169081111561396a5761396a614ddb565b146139875760405162461bcd60e51b8152600401610ccf90614fe1565b600086815260026020908152604080832033845260048101909252909120548611156139f55760405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e74207368617265732062616c616e636500000000006044820152606401610ccf565b6139fe87611a6a565b613a0a87876003614a42565b6000613a1588613ddd565b90506000815167ffffffffffffffff811115613a3357613a33614eea565b604051908082528060200260200182016040528015613a5c578160200160208202803683370190505b50905060001960005b8351811015613aa9576000848281518110613a8257613a82614f00565b6020026020010151905080831115613a98578092505b50613aa281614f2c565b9050613a65565b506002840154600090613abc838c615031565b613ac69190615048565b905060005b8451811015613b785785600201548b868381518110613aec57613aec614f00565b6020026020010151613afe9190615031565b613b089190615048565b848281518110613b1a57613b1a614f00565b60200260200101818152505081848281518110613b3957613b39614f00565b6020026020010151613b4b919061506a565b848281518110613b5d57613b5d614f00565b6020908102919091010152613b7181614f2c565b9050613acb565b50613b838b826149b5565b898560020154613b93919061506a565b6002860155336000908152600486016020526040902054613bb5908b9061506a565b3360009081526004870160205260408120919091555b8451811015613c2b576000848281518110613be857613be8614f00565b60200260200101511115613c1b57613c1b338d83878581518110613c0e57613c0e614f00565b60200260200101516148a5565b613c2481614f2c565b9050613bcb565b506000613c398c6000611899565b905060005b8551811015613d43576000858281518110613c5b57613c5b614f00565b60200260200101511115613d335760008181526010880160205260408082206003908101548380529183200154613c929085615031565b613c9c9190615048565b90508d6000336001600160a01b0316600080516020615227833981519152858a8781518110613ccd57613ccd614f00565b6020026020010151670de0b6b3a7640000878d8a81518110613cf157613cf1614f00565b6020026020010151613d039190615031565b613d0d9190615048565b6040805193845260208401929092529082015242606082015260800160405180910390a4505b613d3c81614f2c565b9050613c3e565b508b60036040805160008152602081018f905290810185905242606082015233906000805160206152278339815191529060800160405180910390a48b7f1eca98f266e5348ae38d5d057a4d8e451e76672f69ac6ba4b0e3b31ea9c7eb2b8760020154613daf8f611eb5565b604080519283526020830191909152429082015260600160405180910390a2509a9950505050505050505050565b6000818152600260205260408120600f8101546060929067ffffffffffffffff811115613e0c57613e0c614eea565b604051908082528060200260200182016040528015613e35578160200160208202803683370190505b50905060005b82600f01548110156111915760008181526010840160205260409020600301548251839083908110613e6f57613e6f614f00565b6020908102919091010152613e8381614f2c565b9050613e3b565b60008215613eba5781613e9e60018561506a565b613ea89190615048565b613eb390600161507d565b9050610bc3565b6117db8284615048565b60008160028060008381526002602081905260409091206006015460ff1690811115613ef257613ef2614ddb565b14613f0f5760405162461bcd60e51b8152600401610ccf90614fe1565b6000848152600260205260409020613f2685611a6a565b336000908152600482016020526040902054613f845760405162461bcd60e51b815260206004820152601860248201527f7573657220646f65736e277420686f6c642073686172657300000000000000006044820152606401610ccf565b33600090815260058201602052604090205460ff1615613fe65760405162461bcd60e51b815260206004820152601b60248201527f7573657220616c726561647920636c61696d65642073686172657300000000006044820152606401610ccf565b6000613ff186611eb5565b33600090815260048401602052604081205491925090670de0b6b3a76400009061401b9084615031565b6140259190615048565b9050808360010154101561404b5760405162461bcd60e51b8152600401610ccf90615175565b80836001015461405b919061506a565b600184810191909155336000818152600580870160209081526040808420805460ff19169096179095556004880181528483205485519384529083015292810184905242606082015289929190600080516020615227833981519152906080016134f7565b6000838152600260205260409020548390421180156141035750600081815260026020819052604082206006015460ff169081111561410157614101614ddb565b145b1561411157614111816131bc565b8360008060008381526002602081905260409091206006015460ff169081111561413d5761413d614ddb565b1461415a5760405162461bcd60e51b8152600401610ccf90614fe1565b6000868152600260205260409020856141b55760405162461bcd60e51b815260206004820152601f60248201527f7374616b652068617320746f2062652067726561746572207468616e20302e006044820152606401610ccf565b6000806141c189613ddd565b90506000815167ffffffffffffffff8111156141df576141df614eea565b604051908082528060200260200182016040528015614208578160200160208202803683370190505b5090506000808560020154111561434f578851156142605760405162461bcd60e51b81526020600482015260156024820152741b585c9ad95d08185b1c9958591e48199d5b991959605a1b6044820152606401610ccf565b60005b83518110156142a757600084828151811061428057614280614f00565b6020026020010151905080831015614296578092505b506142a081614f2c565b9050614263565b5060005b8351811015614320576000828583815181106142c9576142c9614f00565b60200260200101518d6142dc9190615031565b6142e69190615048565b90506142f2818d61506a565b84838151811061430457614304614f00565b60209081029190910101525061431981614f2c565b90506142ab565b508085600201548b6143329190615031565b61433c9190615048565b935061434a8b856002614a42565b6144bf565b8851156144bb5782518951146143a75760405162461bcd60e51b815260206004820181905260248201527f646973747269627574696f6e206c656e677468206e6f74206d61746368696e676044820152606401610ccf565b6000805b8a518110156143ef5760008b82815181106143c8576143c8614f00565b60200260200101519050808310156143de578092505b506143e881614f2c565b90506143ab565b5060005b8a518110156144b8576000828c838151811061441157614411614f00565b60200260200101518e6144249190615031565b61442e9190615048565b9050600081116144805760405162461bcd60e51b815260206004820152601e60248201527f6d7573742068696e7420612076616c696420646973747269627574696f6e00006044820152606401610ccf565b61448a818e61506a565b85838151811061449c5761449c614f00565b6020908102919091010152506144b181614f2c565b90506143f3565b50505b8993505b8385600201546144cf919061507d565b60028601553360009081526004860160205260409020546144f190859061507d565b33600090815260048701602052604090205561450d8b8b61480e565b60005b825181101561456357600083828151811061452d5761452d614f00565b6020026020010151111561455357614553338d83868581518110613c0e57613c0e614f00565b61455c81614f2c565b9050614510565b5060006145718c6000611899565b905060005b835181101561467b57600084828151811061459357614593614f00565b6020026020010151111561466b57600081815260108801602052604080822060039081015483805291832001546145ca9085615031565b6145d49190615048565b90508d6000336001600160a01b03166000805160206152278339815191528589878151811061460557614605614f00565b6020026020010151670de0b6b3a7640000878c8a8151811061462957614629614f00565b602002602001015161463b9190615031565b6146459190615048565b6040805193845260208401929092529082015242606082015260800160405180910390a4505b61467481614f2c565b9050614576565b505060006146888c611eb5565b90506000670de0b6b3a764000061469f8784615031565b6146a99190615048565b90508c60026040805160008152602081018a905290810184905242606082015233906000805160206152278339815191529060800160405180910390a46002870154604080519182526020820184905242908201528d907f1eca98f266e5348ae38d5d057a4d8e451e76672f69ac6ba4b0e3b31ea9c7eb2b9060600160405180910390a250505050505050505050505050565b6000614791826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614b219092919063ffffffff16565b8051909150156117a957808060200190518101906147af91906151d5565b6117a95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ccf565b6000828152600260205260408120905b81600f015481101561488a5760008181526010830160205260409020600381015461484a90859061507d565b6003820155600281015461485f90859061507d565b6002820155600383015461487490859061507d565b60038401555061488381614f2c565b905061481e565b5081816001015461489b919061507d565b6001909101555050565b60008381526002602090815260408083208584526010810183528184206001600160a01b0389168552600481019093529220546148e390849061507d565b6001600160a01b0387166000908152600483016020526040902055600381015461490e90849061506a565b60038083019190915582015461492590849061506a565b8260030181905550505050505050565b60008381526002602090815260408083208584526010810183528184206001600160a01b03891685526004810190935292205461497390849061506a565b6001600160a01b0387166000908152600483016020526040902055600381015461499e90849061507d565b60038083019190915582015461492590849061507d565b6000828152600260205260408120905b81600f0154811015614a31576000818152601083016020526040902060038101546149f190859061506a565b60038201556002810154614a0690859061506a565b60028201556003830154614a1b90859061506a565b600384015550614a2a81614f2c565b90506149c5565b5081816001015461489b919061506a565b6000838152600260208190526040822090810154600b820154919291614a689086615031565b614a729190615048565b90506002836007811115614a8857614a88614ddb565b03614ad657600b820154614a9d90829061507d565b600b830155336000908152600c83016020526040902054614abf90829061507d565b336000908152600c84016020526040902055610e26565b600b820154614ae690829061506a565b600b830155336000908152600c83016020526040902054614b0890829061506a565b336000908152600c840160205260409020555050505050565b6060611a62848460008585600080866001600160a01b03168587604051614b4891906151f7565b60006040518083038185875af1925050503d8060008114614b85576040519150601f19603f3d011682016040523d82523d6000602084013e614b8a565b606091505b5091509150614b9b87838387614ba6565b979650505050505050565b60608315614c15578251600003614c0e576001600160a01b0385163b614c0e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ccf565b5081611a62565b611a628383815115614c2a5781518083602001fd5b8060405162461bcd60e51b8152600401610ccf9190615213565b634e487b7160e01b600052600160045260246000fd5b600060208284031215614c6c57600080fd5b813567ffffffffffffffff811115614c8357600080fd5b820161016081850312156117db57600080fd5b600060208284031215614ca857600080fd5b5035919050565b600081518084526020808501945080840160005b83811015614cdf57815187529582019590820190600101614cc3565b509495945050505050565b828152604060208201526000611a626040830184614caf565b60008060408385031215614d1657600080fd5b50508035926020909101359150565b60008060008060808587031215614d3b57600080fd5b5050823594602084013594506040840135936060013592509050565b6001600160a01b0381168114611ab457600080fd5b60008060408385031215614d7f57600080fd5b823591506020830135614d9181614d57565b809150509250929050565b6020815260006117db6020830184614caf565b600080600060608486031215614dc457600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052602160045260246000fd5b60c0810160038810614e1357634e487b7160e01b600052602160045260246000fd5b968152602081019590955260408501939093526060840191909152608083015260a09091015290565b600060208284031215614e4e57600080fd5b81356117db81614d57565b6000808335601e19843603018112614e7057600080fd5b83018035915067ffffffffffffffff821115614e8b57600080fd5b6020019150600581901b3603821315611cce57600080fd5b6000808335601e19843603018112614eba57600080fd5b83018035915067ffffffffffffffff821115614ed557600080fd5b602001915036819003821315611cce57600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201614f3e57614f3e614f16565b5060010190565b60208082526019908201527f5745544820616464726573732069732061646472657373203000000000000000604082015260600190565b60208082526018908201527f4d61726b657420746f6b656e206973206e6f7420574554480000000000000000604082015260600190565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60208082526019908201527f4d61726b657420696e20696e636f727265637420737461746500000000000000604082015260600190565b60006020828403121561502a57600080fd5b5051919050565b8082028115828204841417610bc357610bc3614f16565b60008261506557634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610bc357610bc3614f16565b80820180821115610bc357610bc3614f16565b60005b838110156150ab578181015183820152602001615093565b50506000910152565b600081518084526150cc816020860160208601615090565b601f01601f19169290920160200192915050565b87815260e0602082015260006150f960e08301896150b4565b6001600160a01b039790971660408301525063ffffffff948516606082015292909316608083015260a082015260c0015292915050565b84815260806020820152600061514960808301866150b4565b828103604084015261515b81866150b4565b91505060018060a01b038316606083015295945050505050565b6020808252601b908201527f696e73756666696369656e74206d61726b65742062616c616e63650000000000604082015260600190565b8381526060602082015260006151c56060830185614caf565b9050826040830152949350505050565b6000602082840312156151e757600080fd5b815180151581146117db57600080fd5b60008251615209818460208701615090565b9190910192915050565b6020815260006117db60208301846150b456fe9dcabe311735ed0d65f0c22c5425d1f17331f94c9d0767f59e58473cf95ada61a26469706673582212205d05df73e8dcd2bb1afccafe13f0c379a1ea486f509c4a81dee2d58c0438ca4e64736f6c63430008120033"}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3.json":
/*!*******************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/PredictionMarketV3.json ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"PredictionMarketV3","abi":[{"inputs":[{"internalType":"contract IWETH","name":"_WETH","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"enum PredictionMarketV3.MarketAction","name":"action","type":"uint8"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketActionTx","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomes","type":"uint256"},{"indexed":false,"internalType":"string","name":"question","type":"string"},{"indexed":false,"internalType":"string","name":"image","type":"string"},{"indexed":false,"internalType":"contract IERC20","name":"token","type":"address"}],"name":"MarketCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MarketOutcomePrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256[]","name":"outcomeShares","type":"uint256[]"},{"indexed":false,"internalType":"uint256","name":"liquidity","type":"uint256"}],"name":"MarketOutcomeShares","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"marketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outcomeId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"bool","name":"admin","type":"bool"}],"name":"MarketResolved","type":"event"},{"inputs":[],"name":"MAX_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_OUTCOMES","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_UINT_256","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"contract IWETH","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"marketIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"},{"inputs":[{"components":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"closesAt","type":"uint256"},{"internalType":"uint256","name":"outcomes","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256[]","name":"distribution","type":"uint256[]"},{"internalType":"string","name":"question","type":"string"},{"internalType":"string","name":"image","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"treasuryFee","type":"uint256"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"contract IRealityETH_ERC20","name":"realitio","type":"address"},{"internalType":"uint256","name":"realitioTimeout","type":"uint256"},{"internalType":"contract IPredictionMarketV3Manager","name":"manager","type":"address"}],"internalType":"struct PredictionMarketV3.CreateMarketDescription","name":"desc","type":"tuple"}],"name":"createMarket","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"closesAt","type":"uint256"},{"internalType":"uint256","name":"outcomes","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256[]","name":"distribution","type":"uint256[]"},{"internalType":"string","name":"question","type":"string"},{"internalType":"string","name":"image","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"treasuryFee","type":"uint256"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"contract IRealityETH_ERC20","name":"realitio","type":"address"},{"internalType":"uint256","name":"realitioTimeout","type":"uint256"},{"internalType":"contract IPredictionMarketV3Manager","name":"manager","type":"address"}],"internalType":"struct PredictionMarketV3.CreateMarketDescription","name":"desc","type":"tuple"}],"name":"createMarketWithETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"closesAt","type":"uint256"},{"internalType":"uint256","name":"outcomes","type":"uint256"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256[]","name":"distribution","type":"uint256[]"},{"internalType":"string","name":"question","type":"string"},{"internalType":"string","name":"image","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"treasuryFee","type":"uint256"},{"internalType":"address","name":"treasury","type":"address"},{"internalType":"contract IRealityETH_ERC20","name":"realitio","type":"address"},{"internalType":"uint256","name":"realitioTimeout","type":"uint256"},{"internalType":"contract IPredictionMarketV3Manager","name":"manager","type":"address"}],"internalType":"struct PredictionMarketV3.CreateMarketDescription","name":"desc","type":"tuple"}],"name":"mintAndCreateMarket","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"calcBuyAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"calcSellAmount","outputs":[{"internalType":"uint256","name":"outcomeTokenSellAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"minOutcomeSharesToBuy","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"buy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"minOutcomeSharesToBuy","type":"uint256"}],"name":"buyWithETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxOutcomeSharesToSell","type":"uint256"}],"name":"sell","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxOutcomeSharesToSell","type":"uint256"}],"name":"sellToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"addLiquidityWithETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"removeLiquidityToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"resolveMarketOutcome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"adminResolveMarketOutcome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimWinnings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimWinningsToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"claimVoidedOutcomeShares","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"claimVoidedOutcomeSharesToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimLiquidityToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"claimFeesToETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserMarketShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserClaimStatus","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserLiquidityPoolShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserClaimableFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarkets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketData","outputs":[{"internalType":"enum PredictionMarketV3.MarketState","name":"","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketAltData","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"contract IERC20","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"contract IRealityETH_ERC20","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"contract IPredictionMarketV3Manager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketCreator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketQuestion","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketLiquidityPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketResolvedOutcome","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"isMarketVoided","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"name":"getMarketOutcomeIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"getMarketOutcomePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"outcomeId","type":"uint256"}],"name":"getMarketOutcomeData","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":""}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3Controller.json":
/*!*****************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/PredictionMarketV3Controller.json ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"type":"constructor","inputs":[{"name":"_PMV3","type":"address","internalType":"address"},{"name":"_realitioLibraryAddress","type":"address","internalType":"address"},{"name":"_PMV3Factory","type":"address","internalType":"address"},{"name":"initialOwner","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"PMV3","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"PMV3Factory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"addAdminToLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"},{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createLand","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"tokenAmountToClaim","type":"uint256","internalType":"uint256"},{"name":"tokenToAnswer","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"nonpayable"},{"type":"function","name":"createLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"},{"name":"tokenToAnswer","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"nonpayable"},{"type":"function","name":"disableLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enableLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fantasyTokens","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getERC20RealitioAddress","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isAllowedToCreateMarket","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAllowedToEditMarket","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAllowedToResolveMarket","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isIERC20TokenSocial","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isLandAdmin","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"landPermissions","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"openMarketCreation","type":"bool","internalType":"bool"},{"name":"openAdminManagement","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"landTokens","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"landTokensLength","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"lands","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"active","type":"bool","internalType":"bool"},{"name":"lockAmount","type":"uint256","internalType":"uint256"},{"name":"lockUser","type":"address","internalType":"address"},{"name":"realitio","type":"address","internalType":"contract IRealityETH_IERC20"}],"stateMutability":"view"},{"type":"function","name":"lockAmount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"realitioFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract RealityETH_ERC20_Factory"}],"stateMutability":"view"},{"type":"function","name":"removeAdminFromLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"},{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setLandEveryoneCanCreateMarkets","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"},{"name":"canCreate","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlockOffsetFromLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateLockAmount","inputs":[{"name":"newLockAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"LandAdminAdded","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"admin","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LandAdminRemoved","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"admin","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LandCreated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"tokenToAnswer","type":"address","indexed":true,"internalType":"address"},{"name":"amountLocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LandDisabled","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amountUnlocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LandEnabled","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amountLocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LandOffsetUnlocked","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amountUnlocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LockAmountUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amountLocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3Factory.json":
/*!**************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/PredictionMarketV3Factory.json ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"type":"constructor","inputs":[{"name":"_token","type":"address","internalType":"contract IERC20"},{"name":"_lockAmount","type":"uint256","internalType":"uint256"},{"name":"_PMV3LibraryAddress","type":"address","internalType":"address"},{"name":"_realitioLibraryAddress","type":"address","internalType":"address"},{"name":"initialOwner","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"PMV3LibraryAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"addAdminToPMController","inputs":[{"name":"controllerAddress","type":"address","internalType":"address"},{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"controllers","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"active","type":"bool","internalType":"bool"},{"name":"lockAmount","type":"uint256","internalType":"uint256"},{"name":"lockUser","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"controllersAddresses","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"controllersLength","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"createPMController","inputs":[{"name":"_PMV3","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"contract PredictionMarketV3Controller"}],"stateMutability":"nonpayable"},{"type":"function","name":"disablePMController","inputs":[{"name":"controllerAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"enablePMController","inputs":[{"name":"controllerAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPMControllerActive","inputs":[{"name":"controllerAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isPMControllerAdmin","inputs":[{"name":"controllerAddress","type":"address","internalType":"address"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lockAmount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"realitioLibraryAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"removeAdminFromPMController","inputs":[{"name":"controllerAddress","type":"address","internalType":"address"},{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlockOffsetFromPMController","inputs":[{"name":"controllerAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateLockAmount","inputs":[{"name":"newLockAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updatePMV3LibraryAddress","inputs":[{"name":"_PMV3LibraryAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateRealitioLibraryAddress","inputs":[{"name":"_realitioLibraryAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ControllerAdminAdded","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"admin","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ControllerAdminRemoved","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"admin","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ControllerCreated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"amountLocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ControllerDisabled","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"amountUnlocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ControllerEnabled","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"amountUnlocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ControllerOffsetUnlocked","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"controller","type":"address","indexed":true,"internalType":"address"},{"name":"amountUnlocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"FailedDeployment","inputs":[]},{"type":"error","name":"InsufficientBalance","inputs":[{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"needed","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3Manager.json":
/*!**************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/PredictionMarketV3Manager.json ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"type":"constructor","inputs":[{"name":"_PMV3","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"contract IERC20"},{"name":"_lockAmount","type":"uint256","internalType":"uint256"},{"name":"_realitioLibraryAddress","type":"address","internalType":"address"},{"name":"initialOwner","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"PMV3","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"addAdminToLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"},{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createLand","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"tokenAmountToClaim","type":"uint256","internalType":"uint256"},{"name":"tokenToAnswer","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"nonpayable"},{"type":"function","name":"createLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"},{"name":"tokenToAnswer","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"nonpayable"},{"type":"function","name":"disableLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"enableLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fantasyTokens","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getERC20RealitioAddress","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isAllowedToCreateMarket","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAllowedToEditMarket","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAllowedToResolveMarket","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isIERC20TokenSocial","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isLandAdmin","inputs":[{"name":"marketToken","type":"address","internalType":"contract IERC20"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"landTokens","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"landTokensLength","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"lands","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"active","type":"bool","internalType":"bool"},{"name":"lockAmount","type":"uint256","internalType":"uint256"},{"name":"lockUser","type":"address","internalType":"address"},{"name":"realitio","type":"address","internalType":"contract IRealityETH_IERC20"}],"stateMutability":"view"},{"type":"function","name":"lockAmount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"realitioFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract RealityETH_ERC20_Factory"}],"stateMutability":"view"},{"type":"function","name":"removeAdminFromLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"},{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlockOffsetFromLand","inputs":[{"name":"landToken","type":"address","internalType":"contract IERC20"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateLockAmount","inputs":[{"name":"newLockAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"LandAdminAdded","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"admin","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LandAdminRemoved","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"admin","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LandCreated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"tokenToAnswer","type":"address","indexed":true,"internalType":"address"},{"name":"amountLocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LandDisabled","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amountUnlocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LandEnabled","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amountLocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LandOffsetUnlocked","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amountUnlocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LockAmountUpdated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amountLocked","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3Querier.json":
/*!**************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/PredictionMarketV3Querier.json ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"type":"constructor","inputs":[{"name":"_PredictionMarketV3","type":"address","internalType":"contract IPredictionMarketV3_4"}],"stateMutability":"nonpayable"},{"type":"function","name":"PredictionMarketV3","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPredictionMarketV3_4"}],"stateMutability":"view"},{"type":"function","name":"getMarketERC20Decimals","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getMarketPrices","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PredictionMarketV3Querier.MarketPrices","components":[{"name":"liquidityPrice","type":"uint256","internalType":"uint256"},{"name":"outcomePrices","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"view"},{"type":"function","name":"getMarketUsersData","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"users","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct PredictionMarketV3Querier.UserMarketData[]","components":[{"name":"liquidityShares","type":"uint256","internalType":"uint256"},{"name":"outcomeShares","type":"uint256[]","internalType":"uint256[]"},{"name":"winningsToClaim","type":"bool","internalType":"bool"},{"name":"winningsClaimed","type":"bool","internalType":"bool"},{"name":"liquidityToClaim","type":"bool","internalType":"bool"},{"name":"liquidityClaimed","type":"bool","internalType":"bool"},{"name":"voidedSharesToClaim","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getMarketsERC20Decimals","inputs":[{"name":"marketIds","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint8[]","internalType":"uint8[]"}],"stateMutability":"view"},{"type":"function","name":"getMarketsPrices","inputs":[{"name":"marketIds","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct PredictionMarketV3Querier.MarketPrices[]","components":[{"name":"liquidityPrice","type":"uint256","internalType":"uint256"},{"name":"outcomePrices","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"view"},{"type":"function","name":"getUserAllMarketsData","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct PredictionMarketV3Querier.UserMarketData[]","components":[{"name":"liquidityShares","type":"uint256","internalType":"uint256"},{"name":"outcomeShares","type":"uint256[]","internalType":"uint256[]"},{"name":"winningsToClaim","type":"bool","internalType":"bool"},{"name":"winningsClaimed","type":"bool","internalType":"bool"},{"name":"liquidityToClaim","type":"bool","internalType":"bool"},{"name":"liquidityClaimed","type":"bool","internalType":"bool"},{"name":"voidedSharesToClaim","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getUserMarketData","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct PredictionMarketV3Querier.UserMarketData","components":[{"name":"liquidityShares","type":"uint256","internalType":"uint256"},{"name":"outcomeShares","type":"uint256[]","internalType":"uint256[]"},{"name":"winningsToClaim","type":"bool","internalType":"bool"},{"name":"winningsClaimed","type":"bool","internalType":"bool"},{"name":"liquidityToClaim","type":"bool","internalType":"bool"},{"name":"liquidityClaimed","type":"bool","internalType":"bool"},{"name":"voidedSharesToClaim","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"getUserMarketsData","inputs":[{"name":"marketIds","type":"uint256[]","internalType":"uint256[]"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct PredictionMarketV3Querier.UserMarketData[]","components":[{"name":"liquidityShares","type":"uint256","internalType":"uint256"},{"name":"outcomeShares","type":"uint256[]","internalType":"uint256[]"},{"name":"winningsToClaim","type":"bool","internalType":"bool"},{"name":"winningsClaimed","type":"bool","internalType":"bool"},{"name":"liquidityToClaim","type":"bool","internalType":"bool"},{"name":"liquidityClaimed","type":"bool","internalType":"bool"},{"name":"voidedSharesToClaim","type":"bool","internalType":"bool"}]}],"stateMutability":"view"}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3_4.json":
/*!*********************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/PredictionMarketV3_4.json ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"MAX_FEE","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"MAX_OUTCOMES","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"MINIMUM_REALITIO_TIMEOUT","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"UPGRADE_INTERFACE_VERSION","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"WETH","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IWETH"}],"stateMutability":"view"},{"type":"function","name":"acceptOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addLiquidity","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"minSharesIn","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"adminPauseMarket","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"adminResolveMarketOutcome","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"adminSetMarketCloseDate","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"closesAt","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"adminUnpauseMarket","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"buy","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"},{"name":"minOutcomeSharesToBuy","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"buyWithETH","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"},{"name":"minOutcomeSharesToBuy","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"calcBuyAmount","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calcSellAmount","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claimFees","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimLiquidity","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimVoidedOutcomeShares","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimWinnings","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createMarket","inputs":[{"name":"desc","type":"tuple","internalType":"struct PredictionMarketV3_4.CreateMarketDescription","components":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"closesAt","type":"uint32","internalType":"uint32"},{"name":"outcomes","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"distribution","type":"uint256[]","internalType":"uint256[]"},{"name":"question","type":"string","internalType":"string"},{"name":"image","type":"string","internalType":"string"},{"name":"arbitrator","type":"address","internalType":"address"},{"name":"buyFees","type":"tuple","internalType":"struct PredictionMarketV3_4.Fees","components":[{"name":"fee","type":"uint256","internalType":"uint256"},{"name":"treasuryFee","type":"uint256","internalType":"uint256"},{"name":"distributorFee","type":"uint256","internalType":"uint256"}]},{"name":"sellFees","type":"tuple","internalType":"struct PredictionMarketV3_4.Fees","components":[{"name":"fee","type":"uint256","internalType":"uint256"},{"name":"treasuryFee","type":"uint256","internalType":"uint256"},{"name":"distributorFee","type":"uint256","internalType":"uint256"}]},{"name":"treasury","type":"address","internalType":"address"},{"name":"distributor","type":"address","internalType":"address"},{"name":"realitioTimeout","type":"uint32","internalType":"uint32"},{"name":"manager","type":"address","internalType":"contract IPredictionMarketV3Manager"}]}],"outputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMarketAltData","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"buyFee","type":"uint256","internalType":"uint256"},{"name":"questionId","type":"bytes32","internalType":"bytes32"},{"name":"questionIdUint","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"buyTreasuryFee","type":"uint256","internalType":"uint256"},{"name":"treasury","type":"address","internalType":"address"},{"name":"realitio","type":"address","internalType":"contract IRealityETH_ERC20"},{"name":"realitioTimeout","type":"uint256","internalType":"uint256"},{"name":"manager","type":"address","internalType":"contract IPredictionMarketV3Manager"}],"stateMutability":"view"},{"type":"function","name":"getMarketBuyFee","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMarketCreator","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getMarketData","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"state","type":"uint8","internalType":"enum PredictionMarketV3_4.MarketState"},{"name":"closesAt","type":"uint256","internalType":"uint256"},{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"sharesAvailable","type":"uint256","internalType":"uint256"},{"name":"resolvedOutcomeId","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"getMarketFee","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMarketFees","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"buyFees","type":"tuple","internalType":"struct PredictionMarketV3_4.Fees","components":[{"name":"fee","type":"uint256","internalType":"uint256"},{"name":"treasuryFee","type":"uint256","internalType":"uint256"},{"name":"distributorFee","type":"uint256","internalType":"uint256"}]},{"name":"sellFees","type":"tuple","internalType":"struct PredictionMarketV3_4.Fees","components":[{"name":"fee","type":"uint256","internalType":"uint256"},{"name":"treasuryFee","type":"uint256","internalType":"uint256"},{"name":"distributorFee","type":"uint256","internalType":"uint256"}]},{"name":"treasury","type":"address","internalType":"address"},{"name":"distributor","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getMarketLiquidityPrice","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMarketOutcomeData","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"price","type":"uint256","internalType":"uint256"},{"name":"availableShares","type":"uint256","internalType":"uint256"},{"name":"totalShares","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMarketOutcomeIds","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"outcomeIds","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getMarketOutcomePrice","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMarketOutcomesShares","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"shares","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getMarketPaused","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getMarketPrices","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"outcomes","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getMarketQuestion","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getMarketResolvedOutcome","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"getMarketSellFee","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMarketShares","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"outcomes","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getMarketState","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint8","internalType":"enum PredictionMarketV3_4.MarketState"}],"stateMutability":"view"},{"type":"function","name":"getMarkets","inputs":[],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getUserClaimStatus","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"winningsToClaim","type":"bool","internalType":"bool"},{"name":"winningsClaimed","type":"bool","internalType":"bool"},{"name":"liquidityToClaim","type":"bool","internalType":"bool"},{"name":"liquidityClaimed","type":"bool","internalType":"bool"},{"name":"claimableFees","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserClaimableFees","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserLiquidityPoolShare","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUserMarketShares","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"outcomes","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"_WETH","type":"address","internalType":"contract IWETH"},{"name":"initialOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isMarketVoided","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"marketIndex","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"mintAndCreateMarket","inputs":[{"name":"desc","type":"tuple","internalType":"struct PredictionMarketV3_4.CreateMarketDescription","components":[{"name":"value","type":"uint256","internalType":"uint256"},{"name":"closesAt","type":"uint32","internalType":"uint32"},{"name":"outcomes","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"distribution","type":"uint256[]","internalType":"uint256[]"},{"name":"question","type":"string","internalType":"string"},{"name":"image","type":"string","internalType":"string"},{"name":"arbitrator","type":"address","internalType":"address"},{"name":"buyFees","type":"tuple","internalType":"struct PredictionMarketV3_4.Fees","components":[{"name":"fee","type":"uint256","internalType":"uint256"},{"name":"treasuryFee","type":"uint256","internalType":"uint256"},{"name":"distributorFee","type":"uint256","internalType":"uint256"}]},{"name":"sellFees","type":"tuple","internalType":"struct PredictionMarketV3_4.Fees","components":[{"name":"fee","type":"uint256","internalType":"uint256"},{"name":"treasuryFee","type":"uint256","internalType":"uint256"},{"name":"distributorFee","type":"uint256","internalType":"uint256"}]},{"name":"treasury","type":"address","internalType":"address"},{"name":"distributor","type":"address","internalType":"address"},{"name":"realitioTimeout","type":"uint32","internalType":"uint32"},{"name":"manager","type":"address","internalType":"contract IPredictionMarketV3Manager"}]}],"outputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"pendingOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"referralBuy","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"},{"name":"minOutcomeSharesToBuy","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"code","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"referralSell","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"maxOutcomeSharesToSell","type":"uint256","internalType":"uint256"},{"name":"code","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeLiquidity","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"minValueOut","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resolveMarketOutcome","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"outcomeId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"sell","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"maxOutcomeSharesToSell","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sellToETH","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcomeId","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"maxOutcomeSharesToSell","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAllowedManager","inputs":[{"name":"manager","type":"address","internalType":"address"},{"name":"allowed","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"withdraw","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AllowedManagerSet","inputs":[{"name":"manager","type":"address","indexed":true,"internalType":"address"},{"name":"allowed","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"MarketActionTx","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"action","type":"uint8","indexed":true,"internalType":"enum PredictionMarketV3_4.MarketAction"},{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"outcomeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MarketCloseDateEdited","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"closesAtTimestamp","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MarketCreated","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"outcomes","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"question","type":"string","indexed":false,"internalType":"string"},{"name":"image","type":"string","indexed":false,"internalType":"string"},{"name":"token","type":"address","indexed":false,"internalType":"contract IERC20"}],"anonymous":false},{"type":"event","name":"MarketLiquidity","inputs":[{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"price","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MarketOutcomePrice","inputs":[{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"outcomeId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MarketOutcomeShares","inputs":[{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"outcomeShares","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"liquidity","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MarketPaused","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"paused","type":"bool","indexed":false,"internalType":"bool"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MarketResolved","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"outcomeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"admin","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"OwnershipTransferStarted","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"paused","type":"bool","indexed":false,"internalType":"bool"},{"name":"user","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Referral","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"code","type":"string","indexed":false,"internalType":"string"},{"name":"action","type":"uint8","indexed":false,"internalType":"enum PredictionMarketV3_4.MarketAction"},{"name":"outcomeId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Withdrawal","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"AddressEmptyCode","inputs":[{"name":"target","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967InvalidImplementation","inputs":[{"name":"implementation","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967NonPayable","inputs":[]},{"type":"error","name":"FailedCall","inputs":[]},{"type":"error","name":"InvalidInitialization","inputs":[]},{"type":"error","name":"NotInitializing","inputs":[]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]},{"type":"error","name":"UUPSUnauthorizedCallContext","inputs":[]},{"type":"error","name":"UUPSUnsupportedProxiableUUID","inputs":[{"name":"slot","type":"bytes32","internalType":"bytes32"}]}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/RealitioERC20.json":
/*!**************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/RealitioERC20.json ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"RealitioERC20","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"question_id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"bytes32","name":"answer_hash","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"answer","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bond","type":"uint256"}],"name":"LogAnswerReveal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"question_id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LogClaim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"question_id","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"answer","type":"bytes32"}],"name":"LogFinalize","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"question_id","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"bounty_added","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"bounty","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"LogFundAnswerBounty","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"answer","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"question_id","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"history_hash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"bond","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ts","type":"uint256"},{"indexed":false,"internalType":"bool","name":"is_commitment","type":"bool"}],"name":"LogNewAnswer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"question_id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"template_id","type":"uint256"},{"indexed":false,"internalType":"string","name":"question","type":"string"},{"indexed":true,"internalType":"bytes32","name":"content_hash","type":"bytes32"},{"indexed":false,"internalType":"address","name":"arbitrator","type":"address"},{"indexed":false,"internalType":"uint32","name":"timeout","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"opening_ts","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"created","type":"uint256"}],"name":"LogNewQuestion","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"template_id","type":"uint256"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"question_text","type":"string"}],"name":"LogNewTemplate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"question_id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"LogNotifyOfArbitrationRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"arbitrator","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LogSetQuestionFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LogWithdraw","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"arbitrator_question_fees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"commitments","outputs":[{"internalType":"uint32","name":"reveal_ts","type":"uint32"},{"internalType":"bool","name":"is_revealed","type":"bool"},{"internalType":"bytes32","name":"revealed_answer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"question_claims","outputs":[{"internalType":"address","name":"payee","type":"address"},{"internalType":"uint256","name":"last_bond","type":"uint256"},{"internalType":"uint256","name":"queued_funds","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"questions","outputs":[{"internalType":"bytes32","name":"content_hash","type":"bytes32"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"finalize_ts","type":"uint32"},{"internalType":"bool","name":"is_pending_arbitration","type":"bool"},{"internalType":"uint256","name":"bounty","type":"uint256"},{"internalType":"bytes32","name":"best_answer","type":"bytes32"},{"internalType":"bytes32","name":"history_hash","type":"bytes32"},{"internalType":"uint256","name":"bond","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"template_hashes","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"templates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"}],"name":"setToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"setQuestionFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"content","type":"string"}],"name":"createTemplate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"content","type":"string"},{"internalType":"string","name":"question","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"createTemplateAndAskQuestion","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"template_id","type":"uint256"},{"internalType":"string","name":"question","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"askQuestion","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"template_id","type":"uint256"},{"internalType":"string","name":"question","type":"string"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"timeout","type":"uint32"},{"internalType":"uint32","name":"opening_ts","type":"uint32"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"askQuestionERC20","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"fundAnswerBountyERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer","type":"bytes32"},{"internalType":"uint256","name":"max_previous","type":"uint256"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"submitAnswerERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer_hash","type":"bytes32"},{"internalType":"uint256","name":"max_previous","type":"uint256"},{"internalType":"address","name":"_answerer","type":"address"},{"internalType":"uint256","name":"tokens","type":"uint256"}],"name":"submitAnswerCommitmentERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer","type":"bytes32"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"bond","type":"uint256"}],"name":"submitAnswerReveal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"address","name":"requester","type":"address"},{"internalType":"uint256","name":"max_previous","type":"uint256"}],"name":"notifyOfArbitrationRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"answer","type":"bytes32"},{"internalType":"address","name":"answerer","type":"address"}],"name":"submitAnswerByArbitrator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"isFinalized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getFinalAnswer","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"resultFor","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32","name":"content_hash","type":"bytes32"},{"internalType":"address","name":"arbitrator","type":"address"},{"internalType":"uint32","name":"min_timeout","type":"uint32"},{"internalType":"uint256","name":"min_bond","type":"uint256"}],"name":"getFinalAnswerIfMatches","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"},{"internalType":"bytes32[]","name":"history_hashes","type":"bytes32[]"},{"internalType":"address[]","name":"addrs","type":"address[]"},{"internalType":"uint256[]","name":"bonds","type":"uint256[]"},{"internalType":"bytes32[]","name":"answers","type":"bytes32[]"}],"name":"claimWinnings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"question_ids","type":"bytes32[]"},{"internalType":"uint256[]","name":"lengths","type":"uint256[]"},{"internalType":"bytes32[]","name":"hist_hashes","type":"bytes32[]"},{"internalType":"address[]","name":"addrs","type":"address[]"},{"internalType":"uint256[]","name":"bonds","type":"uint256[]"},{"internalType":"bytes32[]","name":"answers","type":"bytes32[]"}],"name":"claimMultipleAndWithdrawBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getContentHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getArbitrator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getOpeningTS","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getTimeout","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getFinalizeTS","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"isPendingArbitration","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getBounty","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getBestAnswer","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getHistoryHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"question_id","type":"bytes32"}],"name":"getBond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x608060405260006002553480156200001657600080fd5b50620000446040518060600160405280603f8152602001620040cf603f91396001600160e01b036200010316565b50620000726040518060800160405280604f8152602001620041ab604f91396001600160e01b036200010316565b50620000a06040518060800160405280605a815260200162004151605a91396001600160e01b036200010316565b50620000ce6040518060800160405280605c815260200162004073605c91396001600160e01b036200010316565b50620000fc6040518060800160405280604381526020016200410e604391396001600160e01b036200010316565b5062000285565b60025460008181526003602090815260408083204390555184519293928592918201918291908401908083835b60208310620001515780518252601f19909201916020918201910162000130565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206004600083815260200190815260200160002081905550336001600160a01b0316817fb87fb721c0a557bb8dff89a86796466931d82ba530a66a239263eb8735ade2e4856040518080602001828103825283818151815260200191508051906020019080838360005b838110156200020f578181015183820152602001620001f5565b50505050905090810190601f1680156200023d5780820380516001836020036101000a031916815260200191505b509250505060405180910390a3620002656001826200026e60201b6200331a1790919060201c565b60025592915050565b6000828201838110156200027e57fe5b9392505050565b613dde80620002956000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80637f8d429e11610130578063a1130d04116100b8578063d09cc57e1161007c578063d09cc57e14610e45578063d4876b9f14610eda578063f6a94ecb14610faf578063fc0c546a14610fe1578063fe92049d14610fe957610227565b8063a1130d0414610cf8578063a462fb7b14610e45578063ac7b2a5f14610e62578063acae8f4e14610ea0578063bc52565214610ebd57610227565b80638d552d46116100ff5780638d552d4614610bea578063924532fb14610c0757806395addb9014610c245780639e63fa6a14610ca55780639f1025c614610cdb57610227565b80637f8d429e14610ab657806382ffa9f714610ae7578063839df94514610b0457806383bf460914610b4657610227565b80633ccfd60b116101b357806351577ea91161018257806351577ea914610939578063590158a7146109565780636fa427421461099b57806370a08231146109c1578063762c38fd146109e757610227565b80633ccfd60b146108c85780634dc266b4146108d05780634df6ca2a146108ff5780634e60f8831461091c57610227565b80632417395c116101fa5780632417395c146104fb5780632518904c1461051857806326d6c97b1461055157806328828b1e1461056e5780632f998a6f1461089957610227565b80631101a0fd1461022c578063128b7a471461045c57806312a203c31461047f578063144fa6d7146104d5575b600080fd5b61045a600480360360a081101561024257600080fd5b81359190810190604081016020820135600160201b81111561026357600080fd5b82018360208201111561027557600080fd5b803590602001918460208302840111600160201b8311171561029657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156102e557600080fd5b8201836020820111156102f757600080fd5b803590602001918460208302840111600160201b8311171561031857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561036757600080fd5b82018360208201111561037957600080fd5b803590602001918460208302840111600160201b8311171561039a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156103e957600080fd5b8201836020820111156103fb57600080fd5b803590602001918460208302840111600160201b8311171561041c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061101b945050505050565b005b61045a6004803603604081101561047257600080fd5b50803590602001356112b9565b6104c3600480360360a081101561049557600080fd5b508035906020810135906001600160a01b036040820135169063ffffffff60608201351690608001356114e0565b60408051918252519081900360200190f35b61045a600480360360208110156104eb57600080fd5b50356001600160a01b03166116fd565b6104c36004803603602081101561051157600080fd5b5035611767565b6105356004803603602081101561052e57600080fd5b503561177c565b604080516001600160a01b039092168252519081900360200190f35b6104c36004803603602081101561056757600080fd5b503561179a565b61045a600480360360c081101561058457600080fd5b810190602081018135600160201b81111561059e57600080fd5b8201836020820111156105b057600080fd5b803590602001918460208302840111600160201b831117156105d157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561062057600080fd5b82018360208201111561063257600080fd5b803590602001918460208302840111600160201b8311171561065357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156106a257600080fd5b8201836020820111156106b457600080fd5b803590602001918460208302840111600160201b831117156106d557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561072457600080fd5b82018360208201111561073657600080fd5b803590602001918460208302840111600160201b8311171561075757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156107a657600080fd5b8201836020820111156107b857600080fd5b803590602001918460208302840111600160201b831117156107d957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561082857600080fd5b82018360208201111561083a57600080fd5b803590602001918460208302840111600160201b8311171561085b57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506117af945050505050565b61045a600480360360808110156108af57600080fd5b50803590602081013590604081013590606001356119b4565b61045a611cc4565b61045a600480360360808110156108e657600080fd5b5080359060208101359060408101359060600135611d9d565b61045a6004803603602081101561091557600080fd5b50356120ae565b6104c36004803603602081101561093257600080fd5b50356120fd565b6104c36004803603602081101561094f57600080fd5b503561210f565b6109736004803603602081101561096c57600080fd5b5035612121565b604080516001600160a01b039094168452602084019290925282820152519081900360600190f35b6104c3600480360360208110156109b157600080fd5b50356001600160a01b031661214c565b6104c3600480360360208110156109d757600080fd5b50356001600160a01b031661215e565b6104c3600480360360c08110156109fd57600080fd5b81359190810190604081016020820135600160201b811115610a1e57600080fd5b820183602082011115610a3057600080fd5b803590602001918460018302840111600160201b83111715610a5157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b0383351693505063ffffffff60208301358116926040810135909116915060600135612170565b610ad360048036036020811015610acc57600080fd5b50356123f5565b604080519115158252519081900360200190f35b6104c360048036036020811015610afd57600080fd5b5035612451565b610b2160048036036020811015610b1a57600080fd5b5035612467565b6040805163ffffffff9094168452911515602084015282820152519081900360600190f35b6104c360048036036020811015610b5c57600080fd5b810190602081018135600160201b811115610b7657600080fd5b820183602082011115610b8857600080fd5b803590602001918460018302840111600160201b83111715610ba957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612493945050505050565b6104c360048036036020811015610c0057600080fd5b50356125ef565b610ad360048036036020811015610c1d57600080fd5b5035612604565b610c4160048036036020811015610c3a57600080fd5b503561261c565b604080519a8b526001600160a01b0390991660208b015263ffffffff9788168a8a015295871660608a015293909516608088015290151560a087015260c086015260e085019290925261010084019190915261012083015251908190036101400190f35b610cc260048036036020811015610cbb57600080fd5b5035612688565b6040805163ffffffff9092168252519081900360200190f35b610cc260048036036020811015610cf157600080fd5b50356126aa565b6104c3600480360360c0811015610d0e57600080fd5b810190602081018135600160201b811115610d2857600080fd5b820183602082011115610d3a57600080fd5b803590602001918460018302840111600160201b83111715610d5b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610dad57600080fd5b820183602082011115610dbf57600080fd5b803590602001918460018302840111600160201b83111715610de057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b0383351693505063ffffffff602083013581169260408101359091169150606001356126cc565b6104c360048036036020811015610e5b57600080fd5b50356126f4565b61045a600480360360a0811015610e7857600080fd5b508035906020810135906040810135906001600160a01b036060820135169060800135612765565b610cc260048036036020811015610eb657600080fd5b5035612aa2565b6104c360048036036020811015610ed357600080fd5b5035612ac4565b6104c3600480360360e0811015610ef057600080fd5b81359190810190604081016020820135600160201b811115610f1157600080fd5b820183602082011115610f2357600080fd5b803590602001918460018302840111600160201b83111715610f4457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b0383351693505063ffffffff60208301358116926040810135909116915060608101359060800135612ad6565b61045a60048036036060811015610fc557600080fd5b508035906001600160a01b036020820135169060400135612d66565b61053561308d565b61045a60048036036060811015610fff57600080fd5b50803590602081013590604001356001600160a01b031661309c565b84611025816123f5565b611073576040805162461bcd60e51b815260206004820152601a6024820152791c5d595cdd1a5bdb881b5d5cdd08189948199a5b985b1a5e995960321b604482015290519081900360640190fd5b60008551116110b35760405162461bcd60e51b8152600401808060200182810382526030815260200180613cf96030913960400191505060405180910390fd5b600086815260066020908152604080832080546001820154600290920154600594859052928520938401546004909401546001600160a01b03909116949193915b8a518110156111f5576000611158848d848151811061110f57fe5b60200260200101518b858151811061112357fe5b60200260200101518d868151811061113757fe5b60200260200101518f878151811061114b57fe5b6020026020010151613222565b905061116a858763ffffffff61331a16565b94506111b58d84878a8f878151811061117f57fe5b60200260200101518f888151811061119357fe5b60200260200101518f89815181106111a757fe5b602002602001015188613332565b80985081965050508982815181106111c957fe5b602002602001015195508b82815181106111df57fe5b60209081029190910101519350506001016110f4565b8215611253576001600160a01b0386161561121a576112158c878661345e565b600093505b60008c815260066020526040902080546001600160a01b0319166001600160a01b03881617815560018101869055600201849055611295565b61126d8c87611268878963ffffffff61331a16565b61345e565b60008c815260066020526040812080546001600160a01b031916815560018101829055600201555b50506000998a52600560208190526040909a20909901989098555050505050505050565b6000828152600560205260409020600101548290600160c01b900463ffffffff16611321576040805162461bcd60e51b81526020600482015260136024820152721c5d595cdd1a5bdb881b5d5cdd08195e1a5cdd606a1b604482015290519081900360640190fd5b60008181526005602052604090206002015460ff16156113725760405162461bcd60e51b8152600401808060200182810382526028815260200180613cd16028913960400191505060405180910390fd5b600081815260056020526040902060010154600160e01b900463ffffffff168015806113a957504263ffffffff168163ffffffff16115b6113e45760405162461bcd60e51b815260040180806020018281038252602a815260200180613b3b602a913960400191505060405180910390fd5b600082815260056020526040902060010154600160a01b900463ffffffff1680158061141c57504263ffffffff168163ffffffff1611155b61145b576040805162461bcd60e51b815260206004820152601d6024820152600080516020613d29833981519152604482015290519081900360640190fd5b611464846134e1565b600085815260056020526040902060030154611486908563ffffffff61331a16565b6000868152600560209081526040918290206003018390558151878152908101929092528051339288927f54d68405b79f2aa4fd4e8db7b67844ad254cf8f208aac476c2894134a9deab6692918290030190a35050505050565b6000856114ec816123f5565b61153a576040805162461bcd60e51b815260206004820152601a6024820152791c5d595cdd1a5bdb881b5d5cdd08189948199a5b985b1a5e995960321b604482015290519081900360640190fd5b600087815260056020526040902054861461159c576040805162461bcd60e51b815260206004820152601760248201527f636f6e74656e742068617368206d757374206d61746368000000000000000000604482015290519081900360640190fd5b6000878152600560205260409020600101546001600160a01b03868116911614611605576040805162461bcd60e51b81526020600482015260156024820152740c2e4c4d2e8e4c2e8dee440daeae6e840dac2e8c6d605b1b604482015290519081900360640190fd5b60008781526005602052604090206001015463ffffffff600160c01b9091048116908516111561167c576040805162461bcd60e51b815260206004820152601b60248201527f74696d656f7574206d757374206265206c6f6e6720656e6f7567680000000000604482015290519081900360640190fd5b6000878152600560205260409020600601548311156116e2576040805162461bcd60e51b815260206004820152601860248201527f626f6e64206d757374206265206869676820656e6f7567680000000000000000604482015290519081900360640190fd5b50505060009384525050600560205250604090206004015490565b6000546001600160a01b0316156117455760405162461bcd60e51b8152600401808060200182810382526022815260200180613c1f6022913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60009081526005602052604090206003015490565b6000908152600560205260409020600101546001600160a01b031690565b60009081526005602052604090206006015490565b6000805b87518210156119a25760008883815181106117ca57fe5b6020026020010151905060008884815181106117e257fe5b60200260200101519050606081604051908082528060200260200182016040528015611818578160200160208202803883390190505b509050606082604051908082528060200260200182016040528015611847578160200160208202803883390190505b509050606083604051908082528060200260200182016040528015611876578160200160208202803883390190505b5090506060846040519080825280602002602001820160405280156118a5578160200160208202803883390190505b50905060005b85811015611982578c88815181106118bf57fe5b60200260200101518582815181106118d357fe5b6020026020010181815250508b88815181106118eb57fe5b60200260200101518482815181106118ff57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508a888151811061192b57fe5b602002602001015183828151811061193f57fe5b60200260200101818152505089888151811061195757fe5b602002602001015182828151811061196b57fe5b6020908102919091010152600197880197016118ab565b61198f878686868661101b565b5050600190960195506117b39350505050565b6119aa611cc4565b5050505050505050565b6000848152600560205260409020600101548490600160c01b900463ffffffff16611a1c576040805162461bcd60e51b81526020600482015260136024820152721c5d595cdd1a5bdb881b5d5cdd08195e1a5cdd606a1b604482015290519081900360640190fd5b60008181526005602052604090206002015460ff1615611a6d5760405162461bcd60e51b8152600401808060200182810382526028815260200180613cd16028913960400191505060405180910390fd5b600081815260056020526040902060010154600160e01b900463ffffffff16801580611aa457504263ffffffff168163ffffffff16115b611adf5760405162461bcd60e51b815260040180806020018281038252602a815260200180613b3b602a913960400191505060405180910390fd5b600082815260056020526040902060010154600160a01b900463ffffffff16801580611b1757504263ffffffff168163ffffffff1611155b611b56576040805162461bcd60e51b815260206004820152601d6024820152600080516020613d29833981519152604482015290519081900360640190fd5b868460008111611ba5576040805162461bcd60e51b8152602060048201526015602482015274626f6e64206d75737420626520706f73697469766560581b604482015290519081900360640190fd5b600082815260056020526040902060060154611bc890600263ffffffff61361816565b811015611c065760405162461bcd60e51b815260040180806020018281038252602a815260200180613b89602a913960400191505060405180910390fd5b88878015611c7457600082815260056020526040902060060154811015611c74576040805162461bcd60e51b815260206004820152601d60248201527f626f6e64206d75737420657863656564206d61785f70726576696f7573000000604482015290519081900360640190fd5b611c7d886134e1565b611c8b8b8b338b600061363c565b60008b815260056020526040902060010154611cb7908c908c90600160c01b900463ffffffff16613730565b5050505050505050505050565b3360008181526001602090815260408083208054908490558354825163a9059cbb60e01b8152600481019690965260248601829052915190946001600160a01b039092169363a9059cbb93604480850194919392918390030190829087803b158015611d2f57600080fd5b505af1158015611d43573d6000803e3d6000fd5b505050506040513d6020811015611d5957600080fd5b5051611d6457600080fd5b60408051828152905133917f4ce7033d118120e254016dccf195288400b28fc8936425acd5f17ce2df3ab708919081900360200190a250565b6000848152600560205260409020600101548490600160c01b900463ffffffff16611e05576040805162461bcd60e51b81526020600482015260136024820152721c5d595cdd1a5bdb881b5d5cdd08195e1a5cdd606a1b604482015290519081900360640190fd5b600081815260056020526040902060010154600160e01b900463ffffffff16801580611e3c57504263ffffffff168163ffffffff16115b611e775760405162461bcd60e51b8152600401808060200182810382526029815260200180613c416029913960400191505060405180910390fd5b600082815260056020526040902060010154600160a01b900463ffffffff16801580611eaf57504263ffffffff168163ffffffff1611155b611eee576040805162461bcd60e51b815260206004820152601d6024820152600080516020613d29833981519152604482015290519081900360640190fd5b604080516020808201899052818301889052825180830384018152606083018452805190820120608083018b905260a0830181905260c08084018990528451808503909101815260e090930184528251928201929092206000818152600790925292902054909190600160201b900460ff1615611f9c5760405162461bcd60e51b815260040180806020018281038252602a815260200180613bb3602a913960400191505060405180910390fd5b60008181526007602052604090205463ffffffff428116911611611ff15760405162461bcd60e51b8152600401808060200182810382526024815260200180613c6a6024913960400191505060405180910390fd5b6000818152600760209081526040808320600181018c9055805464ff000000001916600160201b1790558b8352600590915290206006015486141561205c5760008981526005602052604090206001015461205c908a908a90600160c01b900463ffffffff16613730565b60408051898152602081018990528082018890529051839133918c917fa7b2d313bc7a062e30b2c3b811aa4c9faf09755a6b4ea3bf42deff920944332f919081900360600190a4505050505050505050565b336000818152600860209081526040918290208490558151928352820183905280517fdca703d022171824d3d639b33c1525fd2338120b4cfb89507c0b59596893acda9281900390910190a150565b60046020526000908152604090205481565b60009081526005602052604090205490565b6006602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b60086020526000908152604090205481565b60016020526000908152604090205481565b6000868152600360205260408120546121c6576040805162461bcd60e51b81526020600482015260136024820152721d195b5c1b185d19481b5d5cdd08195e1a5cdd606a1b604482015290519081900360640190fd5b6000878488604051602001808481526020018363ffffffff1663ffffffff1660e01b815260040182805190602001908083835b602083106122185780518252601f1990920191602091820191016121f9565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040528051906020012090506000818787338760405160200180868152602001856001600160a01b03166001600160a01b031660601b81526014018463ffffffff1663ffffffff1660e01b8152600401836001600160a01b03166001600160a01b031660601b8152601401828152602001955050505050506040516020818303038152906040528051906020012090506122ea81838989896000613791565b81336001600160a01b0316827ffe2dac156a3890636ce13f65f4fdf41dcaee11526e4a5374531572d92194796c8c8c8c8c8c8c426040518088815260200180602001876001600160a01b03166001600160a01b031681526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff168152602001848152602001838152602001828103825288818151815260200191508051906020019080838360005b838110156123a9578181015183820152602001612391565b50505050905090810190601f1680156123d65780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a498975050505050505050565b60008181526005602052604081206001810154600290910154600160e01b90910463ffffffff169060ff16158015612432575063ffffffff811615155b801561244a57504263ffffffff168163ffffffff1611155b9392505050565b6000908152600560208190526040909120015490565b6007602052600090815260409020805460019091015463ffffffff821691600160201b900460ff169083565b60025460008181526003602090815260408083204390555184519293928592918201918291908401908083835b602083106124df5780518252601f1990920191602091820191016124c0565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001206004600083815260200190815260200160002081905550336001600160a01b0316817fb87fb721c0a557bb8dff89a86796466931d82ba530a66a239263eb8735ade2e4856040518080602001828103825283818151815260200191508051906020019080838360005b8381101561259b578181015183820152602001612583565b50505050905090810190601f1680156125c85780820380516001836020036101000a031916815260200191505b509250505060405180910390a36125e681600163ffffffff61331a16565b60025592915050565b60009081526005602052604090206004015490565b60009081526005602052604090206002015460ff1690565b6005602081905260009182526040909120805460018201546002830154600384015460048501549585015460069095015493956001600160a01b0384169563ffffffff600160a01b8604811696600160c01b8704821696600160e01b90049091169460ff16939291908a565b600090815260056020526040902060010154600160a01b900463ffffffff1690565b600090815260056020526040902060010154600160c01b900463ffffffff1690565b6000806126d888612493565b90506126e8818888888888612170565b98975050505050505050565b600081612700816123f5565b61274e576040805162461bcd60e51b815260206004820152601a6024820152791c5d595cdd1a5bdb881b5d5cdd08189948199a5b985b1a5e995960321b604482015290519081900360640190fd5b505060009081526005602052604090206004015490565b6000858152600560205260409020600101548590600160c01b900463ffffffff166127cd576040805162461bcd60e51b81526020600482015260136024820152721c5d595cdd1a5bdb881b5d5cdd08195e1a5cdd606a1b604482015290519081900360640190fd5b60008181526005602052604090206002015460ff161561281e5760405162461bcd60e51b8152600401808060200182810382526028815260200180613cd16028913960400191505060405180910390fd5b600081815260056020526040902060010154600160e01b900463ffffffff1680158061285557504263ffffffff168163ffffffff16115b6128905760405162461bcd60e51b815260040180806020018281038252602a815260200180613b3b602a913960400191505060405180910390fd5b600082815260056020526040902060010154600160a01b900463ffffffff168015806128c857504263ffffffff168163ffffffff1611155b612907576040805162461bcd60e51b815260206004820152601d6024820152600080516020613d29833981519152604482015290519081900360640190fd5b878460008111612956576040805162461bcd60e51b8152602060048201526015602482015274626f6e64206d75737420626520706f73697469766560581b604482015290519081900360640190fd5b60008281526005602052604090206006015461297990600263ffffffff61361816565b8110156129b75760405162461bcd60e51b815260040180806020018281038252602a815260200180613b89602a913960400191505060405180910390fd5b89888015612a2557600082815260056020526040902060060154811015612a25576040805162461bcd60e51b815260206004820152601d60248201527f626f6e64206d75737420657863656564206d61785f70726576696f7573000000604482015290519081900360640190fd5b612a2e886134e1565b6040805160208082018f90528183018e905260608083018c9052835180840390910181526080909201909252805191012060006001600160a01b038b1615612a76578a612a78565b335b9050612a848e83613a25565b612a928e83838d600161363c565b5050505050505050505050505050565b600090815260056020526040902060010154600160e01b900463ffffffff1690565b60036020526000908152604090205481565b6000612ae1826134e1565b600088815260036020526040902054612b37576040805162461bcd60e51b81526020600482015260136024820152721d195b5c1b185d19481b5d5cdd08195e1a5cdd606a1b604482015290519081900360640190fd5b6000888589604051602001808481526020018363ffffffff1663ffffffff1660e01b815260040182805190602001908083835b60208310612b895780518252601f199092019160209182019101612b6a565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040528051906020012090506000818888338860405160200180868152602001856001600160a01b03166001600160a01b031660601b81526014018463ffffffff1663ffffffff1660e01b8152600401836001600160a01b03166001600160a01b031660601b815260140182815260200195505050505050604051602081830303815290604052805190602001209050612c5a81838a8a8a89613791565b81336001600160a01b0316827ffe2dac156a3890636ce13f65f4fdf41dcaee11526e4a5374531572d92194796c8d8d8d8d8d8d426040518088815260200180602001876001600160a01b03166001600160a01b031681526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff168152602001848152602001838152602001828103825288818151815260200191508051906020019080838360005b83811015612d19578181015183820152602001612d01565b50505050905090810190601f168015612d465780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a49998505050505050505050565b60008381526005602052604090206001015483906001600160a01b03163314612dd6576040805162461bcd60e51b815260206004820152601d60248201527f6d73672e73656e646572206d7573742062652061726269747261746f72000000604482015290519081900360640190fd5b6000848152600560205260409020600101548490600160c01b900463ffffffff16612e3e576040805162461bcd60e51b81526020600482015260136024820152721c5d595cdd1a5bdb881b5d5cdd08195e1a5cdd606a1b604482015290519081900360640190fd5b60008181526005602052604090206002015460ff1615612e8f5760405162461bcd60e51b8152600401808060200182810382526028815260200180613cd16028913960400191505060405180910390fd5b600081815260056020526040902060010154600160e01b900463ffffffff16801580612ec657504263ffffffff168163ffffffff16115b612f015760405162461bcd60e51b815260040180806020018281038252602a815260200180613b3b602a913960400191505060405180910390fd5b600082815260056020526040902060010154600160a01b900463ffffffff16801580612f3957504263ffffffff168163ffffffff1611155b612f78576040805162461bcd60e51b815260206004820152601d6024820152600080516020613d29833981519152604482015290519081900360640190fd5b86858015612fe657600082815260056020526040902060060154811015612fe6576040805162461bcd60e51b815260206004820152601d60248201527f626f6e64206d75737420657863656564206d61785f70726576696f7573000000604482015290519081900360640190fd5b6000898152600560205260409020600601546130335760405162461bcd60e51b8152600401808060200182810382526042815260200180613bdd6042913960600191505060405180910390fd5b600089815260056020526040808220600201805460ff19166001179055516001600160a01b038a16918b917f75d7939999bc902187c4aed400872883e445145f1983539166f783fa040b47629190a3505050505050505050565b6000546001600160a01b031681565b60008381526005602052604090206001015483906001600160a01b0316331461310c576040805162461bcd60e51b815260206004820152601d60248201527f6d73672e73656e646572206d7573742062652061726269747261746f72000000604482015290519081900360640190fd5b600084815260056020526040902060020154849060ff1661315e5760405162461bcd60e51b8152600401808060200182810382526024815260200180613b656024913960400191505060405180910390fd5b6001600160a01b0383166131b9576040805162461bcd60e51b815260206004820152601960248201527f616e737765726572206d7573742062652070726f766964656400000000000000604482015290519081900360640190fd5b604051849086907f18d760beffe3717270cd90d9d920ec1a48c194e9ad7bba23eb1c92d3eb974f9790600090a36000858152600560205260408120600201805460ff1916905561320f908690869086908061363c565b61321b85856000613730565b5050505050565b604080516020808201879052818301869052606080830186905284901b6001600160601b0319166080830152600160f81b6094830152825180830360750181526095909201909252805191012060009086141561328157506001613311565b604080516020808201889052818301879052606080830187905285901b6001600160601b03191660808301526000609483015282518083036075018152609590920190925280519101208614156132da57506000613311565b60405162461bcd60e51b8152600401808060200182810382526036815260200180613b056036913960400191505060405180910390fd5b95945050505050565b60008282018381101561332957fe5b90505b92915050565b60008082156133aa576000848152600760205260409020548490600160201b900460ff16613382576000908152600760205260408120805464ffffffffff19168155600101555086905085613451565b6000908152600760205260408120600181018054825464ffffffffff19169092559190915593505b8884141561344b576001600160a01b0387166134015760008a81526005602052604090206003015495965086956133e890899063ffffffff61331a16565b60008b815260056020526040812060030155975061344b565b866001600160a01b0316866001600160a01b03161461344b5760008589101561342a578861342c565b855b90506134438b896112688c8563ffffffff613ada16565b869750809850505b50869050855b9850989650505050505050565b6001600160a01b038216600090815260016020526040902054613487908263ffffffff61331a16565b6001600160a01b0383166000818152600160209081526040918290209390935580518481529051919286927f9c121aff33b50c1a53fef034ebec5f83da2d5a5187048f9c76c397ba27c1a1a69281900390910190a3505050565b806134eb57613615565b3360009081526001602052604090205480156135515781811061352e57613518818363ffffffff613ada16565b3360009081526001602052604090205550613615565b61353e828263ffffffff613ada16565b3360009081526001602052604081205591505b60008054604080516323b872dd60e01b81523360048201523060248201526044810186905290516001600160a01b03909216926323b872dd926064808401936020939083900390910190829087803b1580156135ac57600080fd5b505af11580156135c0573d6000803e3d6000fd5b505050506040513d60208110156135d657600080fd5b50516136135760405162461bcd60e51b8152600401808060200182810382526039815260200180613d706039913960400191505060405180910390fd5b505b50565b6000826136275750600061332c565b8282028284828161363457fe5b041461332957fe5b60008581526005602081815260409283902090910154825180830191909152808301879052606080820186905286901b6001600160601b031916608082015283151560f81b6094820152825180820360750181526095909101909252815191012082156136b85760008681526005602052604090206006018390555b6000868152600560208181526040928390209091018390558151878152908101839052808201859052426060820152831515608082015290516001600160a01b0386169188917fe47ca4ebbbc2990134d1168821f38c5e177f3d5ee564bffeadeaa351905e62219181900360a00190a3505050505050565b600083815260056020526040902060040182905561375863ffffffff428116908390613aec16565b600093845260056020526040909320600101805463ffffffff94909416600160e01b026001600160e01b03909416939093179092555050565b6000868152600560205260409020600101548690600160c01b900463ffffffff1615613804576040805162461bcd60e51b815260206004820152601760248201527f7175657374696f6e206d757374206e6f74206578697374000000000000000000604482015290519081900360640190fd5b8163ffffffff851661385d576040805162461bcd60e51b815260206004820152601860248201527f74696d656f7574206d75737420626520706f7369746976650000000000000000604482015290519081900360640190fd5b6301e133808563ffffffff16106138a55760405162461bcd60e51b8152600401808060200182810382526022815260200180613caf6022913960400191505060405180910390fd5b6001600160a01b0386166138f9576040805162461bcd60e51b8152602060048201526016602482015275185c989a5d1c985d1bdc881b5d5cdd081899481cd95d60521b604482015290519081900360640190fd5b336001600160a01b038716146139b8576001600160a01b038616600090815260086020526040902054808210156139615760405162461bcd60e51b8152600401808060200182810382526027815260200180613d496027913960400191505060405180910390fd5b613971828263ffffffff613ada16565b6001600160a01b03881660009081526001602052604090205490925061399d908263ffffffff61331a16565b6001600160a01b038816600090815260016020526040902055505b60009788526005602052604090972095865550506001840180546001600160a01b0319166001600160a01b03949094169390931763ffffffff60a01b1916600160a01b63ffffffff928316021763ffffffff60c01b1916600160c01b929091169190910217905560030155565b60008181526007602052604090205463ffffffff1615613a765760405162461bcd60e51b8152600401808060200182810382526021815260200180613c8e6021913960400191505060405180910390fd5b600082815260056020526040812060010154600890600160c01b900463ffffffff16049050613aaf63ffffffff428116908390613aec16565b600092835260076020526040909220805463ffffffff191663ffffffff909316929092179091555050565b600082821115613ae657fe5b50900390565b600082820163ffffffff808516908216101561332957fefe486973746f727920696e7075742070726f766964656420646964206e6f74206d6174636820746865206578706563746564206861736866696e616c697a6174696f6e20646561646c696e65206d757374206e6f742068617665207061737365647175657374696f6e206d7573742062652070656e64696e67206172626974726174696f6e626f6e64206d75737420626520646f75626c65206174206c656173742070726576696f757320626f6e64636f6d6d69746d656e74206d757374206e6f742068617665206265656e2072657665616c6564207965745175657374696f6e206d75737420616c7265616479206861766520616e20616e73776572207768656e206172626974726174696f6e20697320726571756573746564546f6b656e2063616e206f6e6c7920626520696e697469616c697a6564206f6e636566696e616c697a6174696f6e206465616c696e65206d757374206e6f7420686176652070617373656472657665616c20646561646c696e65206d757374206e6f74206861766520706173736564636f6d6d69746d656e74206d757374206e6f7420616c726561647920657869737474696d656f7574206d757374206265206c657373207468616e2033363520646179737175657374696f6e206d757374206e6f742062652070656e64696e67206172626974726174696f6e6174206c65617374206f6e6520686973746f7279206861736820656e747279206d7573742062652070726f76696465646f70656e696e672064617465206d757374206861766520706173736564000000546f6b656e732070726f7669646564206d75737420636f766572207175657374696f6e206665655472616e73666572206f6620746f6b656e73206661696c65642c20696e73756666696369656e7420617070726f7665642062616c616e63653fa2646970667358221220b17e5ee57c73e504629f697bc4900b0e6b710225b757c57a3d1abcc38481037764736f6c634300060200337b227469746c65223a20222573222c202274797065223a20226d756c7469706c652d73656c656374222c20226f7574636f6d6573223a205b25735d2c202263617465676f7279223a20222573222c20226c616e67223a20222573227d7b227469746c65223a20222573222c202274797065223a2022626f6f6c222c202263617465676f7279223a20222573222c20226c616e67223a20222573227d7b227469746c65223a20222573222c202274797065223a20226461746574696d65222c202263617465676f7279223a20222573222c20226c616e67223a20222573227d7b227469746c65223a20222573222c202274797065223a202273696e676c652d73656c656374222c20226f7574636f6d6573223a205b25735d2c202263617465676f7279223a20222573222c20226c616e67223a20222573227d7b227469746c65223a20222573222c202274797065223a202275696e74222c2022646563696d616c73223a2031382c202263617465676f7279223a20222573222c20226c616e67223a20222573227d"}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/RealitioForeignArbitrationProxyWithAppeals.json":
/*!*******************************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/RealitioForeignArbitrationProxyWithAppeals.json ***!
  \*******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"RealitioForeignArbitrationProxyWithAppeals","abi":[{"inputs":[{"internalType":"address","name":"_checkpointManager","type":"address"},{"internalType":"address","name":"_fxRoot","type":"address"},{"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"internalType":"bytes","name":"_arbitratorExtraData","type":"bytes"},{"internalType":"string","name":"_metaEvidence","type":"string"},{"internalType":"uint256","name":"_winnerMultiplier","type":"uint256"},{"internalType":"uint256","name":"_loserMultiplier","type":"uint256"},{"internalType":"uint256","name":"_loserAppealPeriodMultiplier","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"}],"name":"ArbitrationCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"}],"name":"ArbitrationCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"}],"name":"ArbitrationFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"},{"indexed":false,"internalType":"uint256","name":"_maxPrevious","type":"uint256"}],"name":"ArbitrationRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_round","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ruling","type":"uint256"},{"indexed":true,"internalType":"address","name":"_contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"Contribution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"}],"name":"Dispute","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_evidenceGroupID","type":"uint256"},{"indexed":true,"internalType":"address","name":"_party","type":"address"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"Evidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_metaEvidenceID","type":"uint256"},{"indexed":false,"internalType":"string","name":"_evidence","type":"string"}],"name":"MetaEvidence","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IArbitrator","name":"_arbitrator","type":"address"},{"indexed":true,"internalType":"uint256","name":"_disputeID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"Ruling","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_round","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"RulingFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_localDisputeID","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"_round","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ruling","type":"uint256"},{"indexed":true,"internalType":"address","name":"_contributor","type":"address"},{"indexed":false,"internalType":"uint256","name":"_reward","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"META_EVIDENCE_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MULTIPLIER_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NUMBER_OF_CHOICES_FOR_ARBITRATOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REFUSE_TO_ARBITRATE_REALITIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SEND_MESSAGE_EVENT_SIG","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"arbitrationIDToDisputeExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"arbitrationIDToRequester","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"arbitrationRequests","outputs":[{"internalType":"enum RealitioForeignArbitrationProxyWithAppeals.Status","name":"status","type":"uint8"},{"internalType":"uint248","name":"deposit","type":"uint248"},{"internalType":"uint256","name":"disputeID","type":"uint256"},{"internalType":"uint256","name":"answer","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbitrator","outputs":[{"internalType":"contract IArbitrator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbitratorExtraData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"checkpointManager","outputs":[{"internalType":"contract ICheckpointManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"disputeIDToDisputeDetails","outputs":[{"internalType":"uint256","name":"arbitrationID","type":"uint256"},{"internalType":"address","name":"requester","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_externalDisputeID","type":"uint256"}],"name":"externalIDtoLocalID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"},{"internalType":"uint256","name":"_answer","type":"uint256"}],"name":"fundAppeal","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"fxChildTunnel","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fxRoot","outputs":[{"internalType":"contract IFxStateSender","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"},{"internalType":"uint256","name":"_round","type":"uint256"},{"internalType":"address","name":"_contributor","type":"address"}],"name":"getContributionsToSuccessfulFundings","outputs":[{"internalType":"uint256[]","name":"fundedAnswers","type":"uint256[]"},{"internalType":"uint256[]","name":"contributions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"getDisputeFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"},{"internalType":"uint256","name":"_round","type":"uint256"},{"internalType":"uint256","name":"_answer","type":"uint256"}],"name":"getFundingStatus","outputs":[{"internalType":"uint256","name":"raised","type":"uint256"},{"internalType":"bool","name":"fullyFunded","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMultipliers","outputs":[{"internalType":"uint256","name":"winner","type":"uint256"},{"internalType":"uint256","name":"loser","type":"uint256"},{"internalType":"uint256","name":"loserAppealPeriod","type":"uint256"},{"internalType":"uint256","name":"divisor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"}],"name":"getNumberOfRounds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"},{"internalType":"uint256","name":"_round","type":"uint256"}],"name":"getRoundInfo","outputs":[{"internalType":"uint256[]","name":"paidFees","type":"uint256[]"},{"internalType":"uint256","name":"feeRewards","type":"uint256"},{"internalType":"uint256[]","name":"fundedAnswers","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"},{"internalType":"address payable","name":"_beneficiary","type":"address"},{"internalType":"uint256","name":"_contributedTo","type":"uint256"}],"name":"getTotalWithdrawableAmount","outputs":[{"internalType":"uint256","name":"sum","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"address","name":"_requester","type":"address"}],"name":"handleFailedDisputeCreation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"loserAppealPeriodMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"loserMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"numberOfRulingOptions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"processedExits","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"}],"name":"questionIDToArbitrationID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"address","name":"_requester","type":"address"}],"name":"receiveArbitrationAcknowledgement","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"address","name":"_requester","type":"address"}],"name":"receiveArbitrationCancelation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"inputData","type":"bytes"}],"name":"receiveMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"uint256","name":"_maxPrevious","type":"uint256"}],"name":"requestArbitration","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_disputeID","type":"uint256"},{"internalType":"uint256","name":"_ruling","type":"uint256"}],"name":"rule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_fxChildTunnel","type":"address"}],"name":"setFxChildTunnel","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"},{"internalType":"string","name":"_evidenceURI","type":"string"}],"name":"submitEvidence","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"winnerMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"},{"internalType":"address payable","name":"_beneficiary","type":"address"},{"internalType":"uint256","name":"_round","type":"uint256"},{"internalType":"uint256","name":"_answer","type":"uint256"}],"name":"withdrawFeesAndRewards","outputs":[{"internalType":"uint256","name":"reward","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_arbitrationID","type":"uint256"},{"internalType":"address payable","name":"_beneficiary","type":"address"},{"internalType":"uint256","name":"_contributedTo","type":"uint256"}],"name":"withdrawFeesAndRewardsForAllRounds","outputs":[],"stateMutability":"nonpayable","type":"function"}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/RealitioHomeArbitrationProxy.json":
/*!*****************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/RealitioHomeArbitrationProxy.json ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"RealitioHomeArbitrationProxy","abi":[{"inputs":[{"internalType":"address","name":"_fxChild","type":"address"},{"internalType":"contract RealitioInterface","name":"_realitio","type":"address"},{"internalType":"uint256","name":"_foreignChainId","type":"uint256"},{"internalType":"string","name":"_metadata","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"}],"name":"ArbitrationFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"}],"name":"ArbitrationFinished","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":false,"internalType":"bytes32","name":"_answer","type":"bytes32"}],"name":"ArbitratorAnswered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"}],"name":"RequestAcknowledged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"}],"name":"RequestCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"},{"indexed":false,"internalType":"uint256","name":"_maxPrevious","type":"uint256"}],"name":"RequestNotified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"indexed":true,"internalType":"address","name":"_requester","type":"address"},{"indexed":false,"internalType":"uint256","name":"_maxPrevious","type":"uint256"},{"indexed":false,"internalType":"string","name":"_reason","type":"string"}],"name":"RequestRejected","type":"event"},{"inputs":[],"name":"foreignChainId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"foreignProxy","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fxChild","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fxRootTunnel","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"address","name":"_requester","type":"address"}],"name":"handleNotifiedRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"address","name":"_requester","type":"address"}],"name":"handleRejectedRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"metadata","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"stateId","type":"uint256"},{"internalType":"address","name":"rootMessageSender","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"processMessageFromRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"questionIDToRequester","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"realitio","outputs":[{"internalType":"contract RealitioInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"bytes32","name":"_answer","type":"bytes32"}],"name":"receiveArbitrationAnswer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"address","name":"_requester","type":"address"}],"name":"receiveArbitrationFailure","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"address","name":"_requester","type":"address"},{"internalType":"uint256","name":"_maxPrevious","type":"uint256"}],"name":"receiveArbitrationRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_questionID","type":"bytes32"},{"internalType":"bytes32","name":"_lastHistoryHash","type":"bytes32"},{"internalType":"bytes32","name":"_lastAnswerOrCommitmentID","type":"bytes32"},{"internalType":"address","name":"_lastAnswerer","type":"address"}],"name":"reportArbitrationAnswer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"address","name":"","type":"address"}],"name":"requests","outputs":[{"internalType":"enum RealitioHomeArbitrationProxy.Status","name":"status","type":"uint8"},{"internalType":"bytes32","name":"arbitratorAnswer","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_fxRootTunnel","type":"address"}],"name":"setFxRootTunnel","outputs":[],"stateMutability":"nonpayable","type":"function"}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/Voting.json":
/*!*******************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/Voting.json ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"abi":[{"type":"constructor","inputs":[{"name":"_token","type":"address","internalType":"contract IERC20"},{"name":"_requiredBalance","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"downvoteItem","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getItemVotes","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"hasUserVotedItem","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeDownvoteItem","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeUpvoteItem","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requiredBalance","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"upvoteItem","inputs":[{"name":"itemId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ItemVoteAction","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"action","type":"uint8","indexed":true,"internalType":"enum Voting.VoteAction"},{"name":"itemId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ItemVotesUpdated","inputs":[{"name":"itemId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"upvotes","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"downvotes","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timestamp","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}]}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/abis/WETH9.json":
/*!******************************************************!*\
  !*** ./node_modules/polkamarkets-js/abis/WETH9.json ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"contractName":"WETH9","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Withdrawal","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"guy","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x60c0604052600d60809081526c2bb930b83832b21022ba3432b960991b60a05260009061002c9082610114565b506040805180820190915260048152630ae8aa8960e31b60208201526001906100559082610114565b506002805460ff1916601217905534801561006f57600080fd5b506101d3565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009f57607f821691505b6020821081036100bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010f57600081815260208120601f850160051c810160208610156100ec5750805b601f850160051c820191505b8181101561010b578281556001016100f8565b5050505b505050565b81516001600160401b0381111561012d5761012d610075565b6101418161013b845461008b565b846100c5565b602080601f831160018114610176576000841561015e5750858301515b600019600386901b1c1916600185901b17855561010b565b600085815260208120601f198616915b828110156101a557888601518255948401946001909101908401610186565b50858210156101c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6107a8806101e26000396000f3fe60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461015e57806370a082311461018a57806395d89b41146101b7578063a9059cbb146101cc578063d0e30db01461009c578063dd62ed3e146101ec5761009c565b806306fdde03146100a6578063095ea7b3146100d157806318160ddd1461010157806323b872dd1461011e5780632e1a7d4d1461013e575b6100a4610224565b005b3480156100b257600080fd5b506100bb61027f565b6040516100c891906105c5565b60405180910390f35b3480156100dd57600080fd5b506100f16100ec36600461062f565b61030d565b60405190151581526020016100c8565b34801561010d57600080fd5b50475b6040519081526020016100c8565b34801561012a57600080fd5b506100f1610139366004610659565b61037a565b34801561014a57600080fd5b506100a4610159366004610695565b6104fe565b34801561016a57600080fd5b506002546101789060ff1681565b60405160ff90911681526020016100c8565b34801561019657600080fd5b506101106101a53660046106ae565b60036020526000908152604090205481565b3480156101c357600080fd5b506100bb6105a4565b3480156101d857600080fd5b506100f16101e736600461062f565b6105b1565b3480156101f857600080fd5b506101106102073660046106c9565b600460209081526000928352604080842090915290825290205481565b3360009081526003602052604081208054349290610243908490610712565b909155505060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2565b6000805461028c90610725565b80601f01602080910402602001604051908101604052809291908181526020018280546102b890610725565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103689086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526003602052604081205482111561039f57600080fd5b6001600160a01b03841633148015906103dd57506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b1561044b576001600160a01b038416600090815260046020908152604080832033845290915290205482111561041257600080fd5b6001600160a01b03841660009081526004602090815260408083203384529091528120805484929061044590849061075f565b90915550505b6001600160a01b0384166000908152600360205260408120805484929061047390849061075f565b90915550506001600160a01b038316600090815260036020526040812080548492906104a0908490610712565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516104ec91815260200190565b60405180910390a35060019392505050565b3360009081526003602052604090205481111561051a57600080fd5b336000908152600360205260408120805483929061053990849061075f565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561056b573d6000803e3d6000fd5b5060405181815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a250565b6001805461028c90610725565b60006105be33848461037a565b9392505050565b600060208083528351808285015260005b818110156105f2578581018301518582016040015282016105d6565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461062a57600080fd5b919050565b6000806040838503121561064257600080fd5b61064b83610613565b946020939093013593505050565b60008060006060848603121561066e57600080fd5b61067784610613565b925061068560208501610613565b9150604084013590509250925092565b6000602082840312156106a757600080fd5b5035919050565b6000602082840312156106c057600080fd5b6105be82610613565b600080604083850312156106dc57600080fd5b6106e583610613565b91506106f360208401610613565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610374576103746106fc565b600181811c9082168061073957607f821691505b60208210810361075957634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115610374576103746106fc56fea2646970667358221220280b2b25c2b5e4a48a6dc3eb871dc9dffcef1efa9b00cd3781f9b7f6ad07463e64736f6c63430008120033"}');

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/index.js":
/*!***********************************************!*\
  !*** ./node_modules/polkamarkets-js/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Application = __webpack_require__(/*! ./src/Application.js */ \"(ssr)/./node_modules/polkamarkets-js/src/Application.js\");\n\nmodule.exports = { Application };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixtQkFBTyxDQUFDLHFGQUFzQjs7QUFFbEQsbUJBQW1CIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQXBwbGljYXRpb24gPSByZXF1aXJlKCcuL3NyYy9BcHBsaWNhdGlvbi5qcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgQXBwbGljYXRpb24gfTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/Application.js":
/*!*********************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/Application.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Web3 = __webpack_require__(/*! web3 */ \"(ssr)/./node_modules/web3/lib/index.js\");\n\nconst PolkamarketsSmartAccount = __webpack_require__(/*! ./models/PolkamarketsSmartAccount */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PolkamarketsSmartAccount.js\");\n\nconst ERC20Contract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").ERC20Contract);\nconst PredictionMarketContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").PredictionMarketContract);\nconst PredictionMarketV2Contract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").PredictionMarketV2Contract);\nconst PredictionMarketV3Contract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").PredictionMarketV3Contract);\nconst PredictionMarketV3PlusContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").PredictionMarketV3PlusContract);\nconst PredictionMarketV3ManagerContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").PredictionMarketV3ManagerContract);\nconst PredictionMarketV3ControllerContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").PredictionMarketV3ControllerContract);\nconst PredictionMarketV3FactoryContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").PredictionMarketV3FactoryContract);\nconst AchievementsContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").AchievementsContract);\nconst RealitioERC20Contract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").RealitioERC20Contract);\nconst VotingContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").VotingContract);\nconst FantasyERC20Contract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").FantasyERC20Contract);\nconst WETH9Contract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").WETH9Contract);\nconst ArbitrationContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").ArbitrationContract);\nconst ArbitrationProxyContract = (__webpack_require__(/*! ./models/index */ \"(ssr)/./node_modules/polkamarkets-js/src/models/index.js\").ArbitrationProxyContract);\n\nconst Account = __webpack_require__(/*! ./utils/Account */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Account.js\");\n\n\nconst networksEnum = Object.freeze({\n  1: \"Main\",\n  2: \"Morden\",\n  3: \"Ropsten\",\n  4: \"Rinkeby\",\n  42: \"Kovan\",\n});\n\nclass Application {\n  constructor({\n    web3Provider,\n    web3PrivateKey,\n    web3EventsProvider,\n    gasPrice,\n    isSocialLogin = false,\n    socialLoginParams,\n    startBlock,\n    defaultDecimals\n  }) {\n    this.web3Provider = web3Provider;\n    // evm logs http source (optional)\n    this.web3EventsProvider = web3EventsProvider;\n    // fixed gas price for txs (optional)\n    this.gasPrice = gasPrice;\n    this.isSocialLogin = isSocialLogin;\n    this.startBlock = startBlock;\n    this.defaultDecimals = defaultDecimals;\n\n    if (this.isSocialLogin) {\n      this.socialLoginParams = socialLoginParams;\n    }\n\n    // IMPORTANT: this parameter should only be used for testing purposes\n    if (web3PrivateKey && !this.isSocialLogin) {\n      this.start();\n      this.login();\n      this.account = new Account(this.web3, this.web3.eth.accounts.privateKeyToAccount(web3PrivateKey));\n    }\n  }\n\n  /**********/\n  /** CORE **/\n  /**********/\n\n  /**\n   * @name start\n   * @description Start the Application\n   */\n  start() {\n    this.web3 = new Web3(new Web3.providers.HttpProvider(this.web3Provider));\n    this.web3.eth.handleRevert = true;\n    if (typeof window !== \"undefined\") {\n      window.web3 = this.web3;\n    }\n  }\n\n  /**\n   * @name login\n   * @description Login with Metamask or a web3 provider\n   */\n  async login(provider = null, isConnectedWallet = null) {\n    if (this.isSocialLogin) {\n      if (!this.provider) {\n        this.smartAccount = PolkamarketsSmartAccount.singleton.getInstanceIfExists()\n      }\n\n      if ((!this.smartAccount || !this.smartAccount.provider) && provider) {\n        PolkamarketsSmartAccount.singleton.clearInstance();\n        this.smartAccount = PolkamarketsSmartAccount.singleton.getInstance(provider, this.socialLoginParams.networkConfig, isConnectedWallet);\n      }\n\n      return true;\n    } else {\n      try {\n        if (typeof window === \"undefined\") { return false; }\n        if (window.ethereum) {\n          window.web3 = new Web3(window.ethereum);\n          this.web3 = window.web3;\n          await window.ethereum.enable();\n          return true;\n        }\n        return false;\n      } catch (err) {\n        throw err;\n      }\n    }\n  };\n\n  /**\n   * @name isLoggedIn\n   * @description Returns wether metamask account is connected to service or not\n   */\n  async isLoggedIn() {\n    if (this.isSocialLogin) {\n      return !!(this.smartAccount && this.smartAccount.provider);\n    } else {\n      try {\n        if (typeof window === \"undefined\" || typeof window.ethereum === \"undefined\") { return false; }\n        const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n        return accounts.length > 0;\n      } catch (err) {\n        return false;\n      }\n    }\n  };\n\n  contractDefaultParams(contractAddress) {\n    return {\n      web3: this.web3,\n      contractAddress,\n      acc: this.account,\n      web3EventsProvider: this.web3EventsProvider,\n      gasPrice: this.gasPrice,\n      isSocialLogin: this.isSocialLogin,\n      startBlock: this.startBlock,\n      defaultDecimals: this.defaultDecimals\n    };\n  }\n\n  /*************/\n  /** GETTERS **/\n  /*************/\n\n  /**\n   * @name getPredictionMarketContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a PredictionMarket Contract\n   */\n  getPredictionMarketContract({ contractAddress = null } = {}) {\n    try {\n      return new PredictionMarketContract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getPredictionMarketV2Contract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a PredictionMarketV2 Contract\n   */\n  getPredictionMarketV2Contract({ contractAddress = null } = {}) {\n    try {\n      return new PredictionMarketV2Contract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getPredictionMarketV3Contract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a PredictionMarketV3 Contract\n   */\n  getPredictionMarketV3Contract({ contractAddress = null, querierContractAddress = null } = {}) {\n    try {\n      return new PredictionMarketV3Contract({\n        ...this.contractDefaultParams(contractAddress),\n        querierContractAddress,\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getPredictionMarketV3PlusContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a PredictionMarketV3 Contract\n   */\n  getPredictionMarketV3PlusContract({ contractAddress = null, querierContractAddress = null } = {}) {\n    try {\n      return new PredictionMarketV3PlusContract({\n        ...this.contractDefaultParams(contractAddress),\n        querierContractAddress,\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n\n  /**\n   * @name getPredictionMarketV3FactoryContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a PredictionMarketV3Factory Contract\n   */\n  getPredictionMarketV3FactoryContract({ contractAddress = null } = {}) {\n    try {\n      return new PredictionMarketV3FactoryContract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name PredictionMarketV3ControllerContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a PredictionMarketV3ControllerContract Contract\n   */\n  getPredictionMarketV3ControllerContract({ contractAddress = null } = {}) {\n    try {\n      return new PredictionMarketV3ControllerContract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getPredictionMarketV3ManagerContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a PredictionMarketV3Manager Contract\n   */\n  getPredictionMarketV3ManagerContract({ contractAddress = null } = {}) {\n    try {\n      return new PredictionMarketV3ManagerContract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getAchievementsContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a PredictionMarket Contract\n   */\n  getAchievementsContract({\n    contractAddress = null,\n    predictionMarketContractAddress = null,\n    realitioERC20ContractAddress = null\n  } = {}) {\n    try {\n      return new AchievementsContract({\n        ...this.contractDefaultParams(contractAddress),\n        predictionMarketContractAddress,\n        realitioERC20ContractAddress,\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getVotingContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a Voting Contract\n   */\n  getVotingContract({ contractAddress = null } = {}) {\n    try {\n      return new VotingContract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getFantasyERC20Contract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a Fantasy ERC20 Contract\n   */\n  getFantasyERC20Contract({ contractAddress = null } = {}) {\n    try {\n      return new FantasyERC20Contract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getRealitioERC20Contract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a RealitioERC20 Contract\n   */\n  getRealitioERC20Contract({ contractAddress = null } = {}) {\n    try {\n      return new RealitioERC20Contract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getERC20Contract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a ERC20 Contract\n   */\n  getERC20Contract({ contractAddress = null }) {\n    try {\n      return new ERC20Contract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getWETH9Contract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a WETH9 Contract\n   */\n  getWETH9Contract({ contractAddress = null }) {\n    try {\n      return new WETH9Contract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getArbitrationContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a Arbitration Contract\n   */\n  getArbitrationContract({ contractAddress = null }) {\n    try {\n      return new ArbitrationContract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /**\n   * @name getArbitrationProxyContract\n   * @param {Address} ContractAddress (Opt) If it is deployed\n   * @description Create a Arbitration Proxy Contract\n   */\n  getArbitrationProxyContract({ contractAddress = null }) {\n    try {\n      return new ArbitrationProxyContract({\n        ...this.contractDefaultParams(contractAddress)\n      });\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  /***********/\n  /** UTILS **/\n  /***********/\n\n  /**\n   * @name getETHNetwork\n   * @description Access current ETH Network used\n   * @returns {String} Eth Network\n   */\n  async getETHNetwork() {\n    const netId = await this.web3.eth.net.getId();\n    const networkName = networksEnum.hasOwnProperty(netId)\n      ? networksEnum[netId]\n      : \"Unknown\";\n    return networkName;\n  };\n\n  /**\n   * @name getAddress\n   * @description Access current Address Being Used under Web3 Injector (ex : Metamask)\n   * @returns {Address} Address\n   */\n  async getAddress() {\n    if (this.isSocialLogin) {\n      if (this.smartAccount && this.smartAccount.provider) {\n        return await this.smartAccount.getAddress();\n      }\n      return '';\n    } else {\n      const accounts = await this.web3.eth.getAccounts();\n      return accounts[0];\n    }\n  };\n\n  /**\n   * @name getETHBalance\n   * @description Access current ETH Balance Available for the Injected Web3 Address\n   * @returns {Integer} Balance\n   */\n  async getETHBalance() {\n    const address = await this.getAddress();\n    let wei = await window.web3.eth.getBalance(address);\n    return this.web3.utils.fromWei(wei, \"ether\");\n  };\n\n  async socialLoginWithJWT(id, jwtToken) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async socialLoginLogout() {\n    if (this.smartAccount) {\n      PolkamarketsSmartAccount.singleton.clearInstance();\n      this.smartAccount = null;\n    }\n  }\n}\n\nmodule.exports = Application;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/Application.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/interfaces/index.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("let index = {\n  achievements: __webpack_require__(/*! ../../abis/Achievements.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/Achievements.json\"),\n  arbitration: __webpack_require__(/*! ../../abis/RealitioForeignArbitrationProxyWithAppeals.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/RealitioForeignArbitrationProxyWithAppeals.json\"),\n  arbitrationProxy: __webpack_require__(/*! ../../abis/RealitioHomeArbitrationProxy.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/RealitioHomeArbitrationProxy.json\"),\n  fantasyerc20: __webpack_require__(/*! ../../abis/FantasyERC20.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/FantasyERC20.json\"),\n  ierc20: __webpack_require__(/*! ../../abis/ERC20PresetMinterPauser.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/ERC20PresetMinterPauser.json\"),\n  prediction: __webpack_require__(/*! ../../abis/PredictionMarket.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarket.json\"),\n  predictionV2: __webpack_require__(/*! ../../abis/PredictionMarketV2.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV2.json\"),\n  predictionV3: __webpack_require__(/*! ../../abis/PredictionMarketV3.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3.json\"),\n  predictionV3Plus: __webpack_require__(/*! ../../abis/PredictionMarketV3_4.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3_4.json\"),\n  predictionV3Manager: __webpack_require__(/*! ../../abis/PredictionMarketV3Manager.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3Manager.json\"),\n  predictionV3Controller: __webpack_require__(/*! ../../abis/PredictionMarketV3Controller.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3Controller.json\"),\n  predictionMarketV3Factory: __webpack_require__(/*! ../../abis/PredictionMarketV3Factory.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3Factory.json\"),\n  predictionV3Querier: __webpack_require__(/*! ../../abis/PredictionMarketV3Querier.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/PredictionMarketV3Querier.json\"),\n  realitio: __webpack_require__(/*! ../../abis/RealitioERC20.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/RealitioERC20.json\"),\n  voting: __webpack_require__(/*! ../../abis/Voting.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/Voting.json\"),\n  weth: __webpack_require__(/*! ../../abis/WETH9.json */ \"(ssr)/./node_modules/polkamarkets-js/abis/WETH9.json\"),\n};\n\nmodule.exports = index;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9pbnRlcmZhY2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsaUdBQThCO0FBQ3RELGVBQWUsbUJBQU8sQ0FBQyw2SkFBNEQ7QUFDbkYsb0JBQW9CLG1CQUFPLENBQUMsaUlBQThDO0FBQzFFLGdCQUFnQixtQkFBTyxDQUFDLGlHQUE4QjtBQUN0RCxVQUFVLG1CQUFPLENBQUMsdUhBQXlDO0FBQzNELGNBQWMsbUJBQU8sQ0FBQyx5R0FBa0M7QUFDeEQsZ0JBQWdCLG1CQUFPLENBQUMsNkdBQW9DO0FBQzVELGdCQUFnQixtQkFBTyxDQUFDLDZHQUFvQztBQUM1RCxvQkFBb0IsbUJBQU8sQ0FBQyxpSEFBc0M7QUFDbEUsdUJBQXVCLG1CQUFPLENBQUMsMkhBQTJDO0FBQzFFLDBCQUEwQixtQkFBTyxDQUFDLGlJQUE4QztBQUNoRiw2QkFBNkIsbUJBQU8sQ0FBQywySEFBMkM7QUFDaEYsdUJBQXVCLG1CQUFPLENBQUMsMkhBQTJDO0FBQzFFLFlBQVksbUJBQU8sQ0FBQyxtR0FBK0I7QUFDbkQsVUFBVSxtQkFBTyxDQUFDLHFGQUF3QjtBQUMxQyxRQUFRLG1CQUFPLENBQUMsbUZBQXVCO0FBQ3ZDOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvc3JjL2ludGVyZmFjZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGluZGV4ID0ge1xuICBhY2hpZXZlbWVudHM6IHJlcXVpcmUoXCIuLi8uLi9hYmlzL0FjaGlldmVtZW50cy5qc29uXCIpLFxuICBhcmJpdHJhdGlvbjogcmVxdWlyZShcIi4uLy4uL2FiaXMvUmVhbGl0aW9Gb3JlaWduQXJiaXRyYXRpb25Qcm94eVdpdGhBcHBlYWxzLmpzb25cIiksXG4gIGFyYml0cmF0aW9uUHJveHk6IHJlcXVpcmUoXCIuLi8uLi9hYmlzL1JlYWxpdGlvSG9tZUFyYml0cmF0aW9uUHJveHkuanNvblwiKSxcbiAgZmFudGFzeWVyYzIwOiByZXF1aXJlKFwiLi4vLi4vYWJpcy9GYW50YXN5RVJDMjAuanNvblwiKSxcbiAgaWVyYzIwOiByZXF1aXJlKFwiLi4vLi4vYWJpcy9FUkMyMFByZXNldE1pbnRlclBhdXNlci5qc29uXCIpLFxuICBwcmVkaWN0aW9uOiByZXF1aXJlKFwiLi4vLi4vYWJpcy9QcmVkaWN0aW9uTWFya2V0Lmpzb25cIiksXG4gIHByZWRpY3Rpb25WMjogcmVxdWlyZShcIi4uLy4uL2FiaXMvUHJlZGljdGlvbk1hcmtldFYyLmpzb25cIiksXG4gIHByZWRpY3Rpb25WMzogcmVxdWlyZShcIi4uLy4uL2FiaXMvUHJlZGljdGlvbk1hcmtldFYzLmpzb25cIiksXG4gIHByZWRpY3Rpb25WM1BsdXM6IHJlcXVpcmUoXCIuLi8uLi9hYmlzL1ByZWRpY3Rpb25NYXJrZXRWM180Lmpzb25cIiksXG4gIHByZWRpY3Rpb25WM01hbmFnZXI6IHJlcXVpcmUoXCIuLi8uLi9hYmlzL1ByZWRpY3Rpb25NYXJrZXRWM01hbmFnZXIuanNvblwiKSxcbiAgcHJlZGljdGlvblYzQ29udHJvbGxlcjogcmVxdWlyZShcIi4uLy4uL2FiaXMvUHJlZGljdGlvbk1hcmtldFYzQ29udHJvbGxlci5qc29uXCIpLFxuICBwcmVkaWN0aW9uTWFya2V0VjNGYWN0b3J5OiByZXF1aXJlKFwiLi4vLi4vYWJpcy9QcmVkaWN0aW9uTWFya2V0VjNGYWN0b3J5Lmpzb25cIiksXG4gIHByZWRpY3Rpb25WM1F1ZXJpZXI6IHJlcXVpcmUoXCIuLi8uLi9hYmlzL1ByZWRpY3Rpb25NYXJrZXRWM1F1ZXJpZXIuanNvblwiKSxcbiAgcmVhbGl0aW86IHJlcXVpcmUoXCIuLi8uLi9hYmlzL1JlYWxpdGlvRVJDMjAuanNvblwiKSxcbiAgdm90aW5nOiByZXF1aXJlKFwiLi4vLi4vYWJpcy9Wb3RpbmcuanNvblwiKSxcbiAgd2V0aDogcmVxdWlyZShcIi4uLy4uL2FiaXMvV0VUSDkuanNvblwiKSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW5kZXg7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/AchievementsContract.js":
/*!*************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/AchievementsContract.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const achievements = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").achievements);\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\nconst PredictionMarketContract = __webpack_require__(/*! ./PredictionMarketContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketContract.js\");\nconst RealitioERC20Contract = __webpack_require__(/*! ./RealitioERC20Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/RealitioERC20Contract.js\");\n\nconst axios = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/index.js\");\n\nconst actions = {\n  0: 'Buy',\n  1: 'Add Liquidity',\n  2: 'Bond',\n  3: 'Claim Winnings',\n  4: 'Create Market',\n}\n\n/**\n * PredictionMarket Contract Object\n * @constructor PredictionMarketContract\n * @param {Web3} web3\n * @param {Integer} decimals\n * @param {Address} contractAddress\n */\n\nclass AchievementsContract extends IContract {\n  constructor(params) {\n    super({ abi: achievements, ...params });\n    this.contractName = 'achievements';\n  }\n\n  async getUserStats({ user }) {\n    await this.initializePredictionMarketContract();\n    await this.initializeRealitioERC20Contract();\n\n    const portfolio = await this.predictionMarket.getPortfolio({ user });\n    // fetching unique buy actions per market\n    const buyMarkets = Object.keys(portfolio).filter(marketId => {\n      return portfolio[marketId].outcomes[0].shares > 0 || portfolio[marketId].outcomes[1].shares > 0\n    });\n    // fetching unique liquidity actions per market\n    const liquidityMarkets = Object.keys(portfolio).filter(marketId => portfolio[marketId].liquidity.shares > 0);\n    // fetching unique claim winnings actions per market\n    const winningsMarkets = Object.keys(portfolio).filter(marketId => portfolio[marketId].claimStatus.winningsClaimed);\n\n    // fetching create market actions\n    const createMarketEvents = await this.predictionMarket.getEvents('MarketCreated', { user });\n\n    // fetching unique bonds actions per market\n    const bondsEvents = await this.realitioERC20.getEvents('LogNewAnswer', { user });\n    const bondsQuestions = bondsEvents.map(e => e.returnValues.question_id).filter((x, i, a) => a.indexOf(x) == i);\n    let bondsMarkets = [];\n\n    if (bondsQuestions.length > 0) {\n      // filtering by bonds placed in PredictionMarket contract\n      // TODO: optimize this\n      const allMarketIds = await this.predictionMarket.getMarkets();\n      const allMarketQuestions = await Promise.all(allMarketIds.map(async marketId => {\n        const questionId = await this.predictionMarket.getMarketQuestionId({ marketId });\n        return questionId;\n      }));\n\n      const marketQuestions = bondsQuestions.filter(questionId => allMarketQuestions.includes(questionId));\n      bondsMarkets = marketQuestions.map(questionId => allMarketQuestions.indexOf(questionId));\n    }\n\n    // returning stats mapped by action id\n    return {\n      0: { markets: buyMarkets, occurrences: buyMarkets.length },\n      1: { markets: liquidityMarkets, occurrences: liquidityMarkets.length },\n      2: { markets: bondsMarkets, occurrences: bondsMarkets.length },\n      3: { markets: winningsMarkets, occurrences: winningsMarkets.length },\n      4: { markets: createMarketEvents.map(e => e.returnValues.marketId), occurrences: createMarketEvents.length },\n    }\n  }\n\n  async getAchievementIds() {\n    const achievementIndex = await this.getContract().methods.achievementIndex().call();\n\n    return [...Array(parseInt(achievementIndex)).keys()];\n  }\n\n  async getAchievement({ achievementId }) {\n    const achievement = await this.getContract().methods.achievements(achievementId).call();\n\n    return {\n      action: actions[Numbers.fromBigNumberToInteger(achievement[0], 18)],\n      actionId: Numbers.fromBigNumberToInteger(achievement[0], 18),\n      occurrences: Numbers.fromBigNumberToInteger(achievement[1], 18)\n    };\n  }\n\n  async getUserAchievements({ user }) {\n    const achievementIds = await this.getAchievementIds();\n    const userStats = await this.getUserStats({ user });\n    let userTokens;\n    try {\n      userTokens = await this.getUserTokens({ user });\n    } catch (err) {\n      // should be non-blocking\n    }\n\n    return await achievementIds.reduce(async (obj, achievementId) => {\n      const achievement = await this.getAchievement({ achievementId });\n      const canClaim = userStats[achievement.actionId].occurrences >= achievement.occurrences;\n      const claimed = canClaim && (await this.getContract().methods.hasUserClaimedAchievement(user, achievementId).call());\n      const token = userTokens && userTokens.find(token => token.achievementId == achievementId);\n\n      const status = {\n        canClaim,\n        claimed,\n        token\n      }\n\n      return await {\n        ...(await obj),\n        [achievementId]: status,\n      };\n    }, {});\n  }\n\n  async getUserTokens({ user }) {\n    const tokenCount = await this.getContract().methods.balanceOf(user).call();\n    const tokens = [];\n\n    for (let i = 0; i < tokenCount; i++) {\n      const tokenIndex = await this.getContract().methods.tokenOfOwnerByIndex(user, i).call();\n      const tokenAchievement = await this.getContract().methods.tokens(tokenIndex).call();\n      const tokenURI = await this.getContract().methods.tokenURI(tokenIndex).call();\n      const { data } = await axios.get(tokenURI);\n\n      tokens.push({\n        id: tokenIndex,\n        achievementId: tokenAchievement,\n        uri: tokenURI,\n        data\n      });\n    }\n\n    return tokens;\n  }\n\n  async claimAchievement({ achievementId }) {\n    const user = await this.getMyAccount();\n    if (!user) return false;\n\n    const achievement = await this.getAchievement({ achievementId });\n    const userStats = await this.getUserStats({ user });\n\n    // user not eligible to claim\n    if (userStats[achievement.actionId].occurrences < achievement.occurrences) return false;\n\n    if (achievement.actionId == 2) {\n      const marketIds = userStats[achievement.actionId].markets.slice(0, achievement.occurrences);\n      const lengths = [];\n      const hhashes = [];\n      const addrs = [];\n      const bonds = [];\n      const answers = [];\n\n      for (const marketId of marketIds) {\n        const questionId = await this.predictionMarket.getMarketQuestionId({ marketId });\n        const events = await this.realitioERC20.getEvents('LogNewAnswer', { question_id: questionId });\n\n        hhashes.push(...events.map((event) => event.returnValues.history_hash).slice(0, -1).reverse());\n        // adding an empty hash to the history hashes\n        hhashes.push(Numbers.nullHash());\n\n        addrs.push(...events.map((event) => event.returnValues.user).reverse());\n        bonds.push(...events.map((event) => event.returnValues.bond).reverse());\n        answers.push(...events.map((event) => event.returnValues.answer).reverse());\n        lengths.push(events.length);\n      }\n\n      return await this.__sendTx(\n        this.getContract().methods.claimAchievement(\n          achievementId,\n          marketIds,\n          lengths,\n          hhashes,\n          addrs,\n          bonds,\n          answers\n        ),\n        false\n      );\n    } else {\n      return await this.__sendTx(\n        this.getContract().methods.claimAchievement(\n          achievementId,\n          userStats[achievement.actionId].markets.slice(0, achievement.occurrences)\n        ),\n        false,\n      );\n    }\n  }\n\n  async initializePredictionMarketContract() {\n    // predictionMarket already initialized\n    if (this.predictionMarket) return;\n\n    const contractAddress = await this.getContract().methods.predictionMarket().call();\n\n    this.predictionMarket = new PredictionMarketContract({ ...this.params, contractAddress });\n  }\n\n  async initializeRealitioERC20Contract() {\n    // predictionMarket already initialized\n    if (this.realitioERC20) return;\n\n    const contractAddress = await this.getContract().methods.realitioERC20().call();\n\n    this.realitioERC20 = new RealitioERC20Contract({ ...this.params, contractAddress });\n  }\n}\n\nmodule.exports = AchievementsContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/AchievementsContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/ArbitrationContract.js":
/*!************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/ArbitrationContract.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const arbitration = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").arbitration);\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\n/**\n * Arbitration Contract Object\n * @constructor ArbitrationContract\n * @param {Web3} web3\n * @param {Integer} decimals\n * @param {Address} contractAddress\n */\n\nclass ArbitrationContract extends IContract {\n  constructor(params) {\n    super({ abi: arbitration, ...params });\n    this.contractName = 'arbitration';\n  }\n\n  /**\n   * @function getDisputeFee\n   * @description get cost of applying for arbitration\n   * @param {bytes32} questionId\n   * @return {Integer} decimals\n   */\n  async getDisputeFee({ questionId }) {\n    const fee = await this.params.contract.getContract().methods.getDisputeFee(questionId).call();\n\n    return Numbers.fromDecimalsNumber(fee, 18);\n  }\n\n  async getArbitrationDisputeId({ questionId }) {\n    const allEvents = await this.getEvents('ArbitrationCreated');\n    const questionEvents = allEvents.filter(event => event.returnValues._questionID === questionId);\n\n    if (questionEvents.length === 0) return null;\n\n    return Number(questionEvents[0].returnValues._disputeID);\n  }\n\n  async getArbitrationRequests({ questionId }) {\n    const allEvents = await this.getEvents('ArbitrationRequested');\n    const questionEvents = allEvents.filter(event => event.returnValues._questionID === questionId);\n\n    return questionEvents.map(event => ({\n      questionId: event.returnValues._questionID,\n      requester: event.returnValues._requester,\n      maxPrevious: Numbers.fromDecimalsNumber(event.returnValues._maxPrevious, 18)\n    }));\n  }\n\n  /**\n   * @function requestArbitration\n   * @description apply for arbitration\n   * @param {bytes32} questionId\n   * @param {Integer} maxPrevious\n   */\n  async requestArbitration({ questionId, bond }) {\n    const fee = await this.params.contract.getContract().methods.getDisputeFee(questionId).call();\n    const maxPrevious = Numbers.toSmartContractDecimals(bond, 18);\n\n    return await this.__sendTx(\n      this.getContract().methods.requestArbitration(questionId, maxPrevious),\n      false,\n      fee\n    );\n  }\n}\n\nmodule.exports = ArbitrationContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvQXJiaXRyYXRpb25Db250cmFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0Isc0hBQW9DO0FBQ3hELGdCQUFnQixtQkFBTyxDQUFDLG1GQUFrQjtBQUMxQyxrQkFBa0IsbUJBQU8sQ0FBQyxpRkFBYTs7QUFFdkM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEI7O0FBRUE7QUFDQTtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCLGNBQWMsU0FBUztBQUN2QjtBQUNBLHdCQUF3QixZQUFZO0FBQ3BDOztBQUVBO0FBQ0E7O0FBRUEsa0NBQWtDLFlBQVk7QUFDOUM7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLGlDQUFpQyxZQUFZO0FBQzdDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCLGFBQWEsU0FBUztBQUN0QjtBQUNBLDZCQUE2QixrQkFBa0I7QUFDL0M7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvQXJiaXRyYXRpb25Db250cmFjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhcmJpdHJhdGlvbiA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzXCIpLmFyYml0cmF0aW9uO1xuY29uc3QgTnVtYmVycyA9IHJlcXVpcmUoXCIuLi91dGlscy9OdW1iZXJzXCIpO1xuY29uc3QgSUNvbnRyYWN0ID0gcmVxdWlyZSgnLi9JQ29udHJhY3QnKTtcblxuLyoqXG4gKiBBcmJpdHJhdGlvbiBDb250cmFjdCBPYmplY3RcbiAqIEBjb25zdHJ1Y3RvciBBcmJpdHJhdGlvbkNvbnRyYWN0XG4gKiBAcGFyYW0ge1dlYjN9IHdlYjNcbiAqIEBwYXJhbSB7SW50ZWdlcn0gZGVjaW1hbHNcbiAqIEBwYXJhbSB7QWRkcmVzc30gY29udHJhY3RBZGRyZXNzXG4gKi9cblxuY2xhc3MgQXJiaXRyYXRpb25Db250cmFjdCBleHRlbmRzIElDb250cmFjdCB7XG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgIHN1cGVyKHsgYWJpOiBhcmJpdHJhdGlvbiwgLi4ucGFyYW1zIH0pO1xuICAgIHRoaXMuY29udHJhY3ROYW1lID0gJ2FyYml0cmF0aW9uJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb24gZ2V0RGlzcHV0ZUZlZVxuICAgKiBAZGVzY3JpcHRpb24gZ2V0IGNvc3Qgb2YgYXBwbHlpbmcgZm9yIGFyYml0cmF0aW9uXG4gICAqIEBwYXJhbSB7Ynl0ZXMzMn0gcXVlc3Rpb25JZFxuICAgKiBAcmV0dXJuIHtJbnRlZ2VyfSBkZWNpbWFsc1xuICAgKi9cbiAgYXN5bmMgZ2V0RGlzcHV0ZUZlZSh7IHF1ZXN0aW9uSWQgfSkge1xuICAgIGNvbnN0IGZlZSA9IGF3YWl0IHRoaXMucGFyYW1zLmNvbnRyYWN0LmdldENvbnRyYWN0KCkubWV0aG9kcy5nZXREaXNwdXRlRmVlKHF1ZXN0aW9uSWQpLmNhbGwoKTtcblxuICAgIHJldHVybiBOdW1iZXJzLmZyb21EZWNpbWFsc051bWJlcihmZWUsIDE4KTtcbiAgfVxuXG4gIGFzeW5jIGdldEFyYml0cmF0aW9uRGlzcHV0ZUlkKHsgcXVlc3Rpb25JZCB9KSB7XG4gICAgY29uc3QgYWxsRXZlbnRzID0gYXdhaXQgdGhpcy5nZXRFdmVudHMoJ0FyYml0cmF0aW9uQ3JlYXRlZCcpO1xuICAgIGNvbnN0IHF1ZXN0aW9uRXZlbnRzID0gYWxsRXZlbnRzLmZpbHRlcihldmVudCA9PiBldmVudC5yZXR1cm5WYWx1ZXMuX3F1ZXN0aW9uSUQgPT09IHF1ZXN0aW9uSWQpO1xuXG4gICAgaWYgKHF1ZXN0aW9uRXZlbnRzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGw7XG5cbiAgICByZXR1cm4gTnVtYmVyKHF1ZXN0aW9uRXZlbnRzWzBdLnJldHVyblZhbHVlcy5fZGlzcHV0ZUlEKTtcbiAgfVxuXG4gIGFzeW5jIGdldEFyYml0cmF0aW9uUmVxdWVzdHMoeyBxdWVzdGlvbklkIH0pIHtcbiAgICBjb25zdCBhbGxFdmVudHMgPSBhd2FpdCB0aGlzLmdldEV2ZW50cygnQXJiaXRyYXRpb25SZXF1ZXN0ZWQnKTtcbiAgICBjb25zdCBxdWVzdGlvbkV2ZW50cyA9IGFsbEV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gZXZlbnQucmV0dXJuVmFsdWVzLl9xdWVzdGlvbklEID09PSBxdWVzdGlvbklkKTtcblxuICAgIHJldHVybiBxdWVzdGlvbkV2ZW50cy5tYXAoZXZlbnQgPT4gKHtcbiAgICAgIHF1ZXN0aW9uSWQ6IGV2ZW50LnJldHVyblZhbHVlcy5fcXVlc3Rpb25JRCxcbiAgICAgIHJlcXVlc3RlcjogZXZlbnQucmV0dXJuVmFsdWVzLl9yZXF1ZXN0ZXIsXG4gICAgICBtYXhQcmV2aW91czogTnVtYmVycy5mcm9tRGVjaW1hbHNOdW1iZXIoZXZlbnQucmV0dXJuVmFsdWVzLl9tYXhQcmV2aW91cywgMTgpXG4gICAgfSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBmdW5jdGlvbiByZXF1ZXN0QXJiaXRyYXRpb25cbiAgICogQGRlc2NyaXB0aW9uIGFwcGx5IGZvciBhcmJpdHJhdGlvblxuICAgKiBAcGFyYW0ge2J5dGVzMzJ9IHF1ZXN0aW9uSWRcbiAgICogQHBhcmFtIHtJbnRlZ2VyfSBtYXhQcmV2aW91c1xuICAgKi9cbiAgYXN5bmMgcmVxdWVzdEFyYml0cmF0aW9uKHsgcXVlc3Rpb25JZCwgYm9uZCB9KSB7XG4gICAgY29uc3QgZmVlID0gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmdldERpc3B1dGVGZWUocXVlc3Rpb25JZCkuY2FsbCgpO1xuICAgIGNvbnN0IG1heFByZXZpb3VzID0gTnVtYmVycy50b1NtYXJ0Q29udHJhY3REZWNpbWFscyhib25kLCAxOCk7XG5cbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnJlcXVlc3RBcmJpdHJhdGlvbihxdWVzdGlvbklkLCBtYXhQcmV2aW91cyksXG4gICAgICBmYWxzZSxcbiAgICAgIGZlZVxuICAgICk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBcmJpdHJhdGlvbkNvbnRyYWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/ArbitrationContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/ArbitrationProxyContract.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/ArbitrationProxyContract.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const arbitrationProxy = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").arbitrationProxy);\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\n/**\n * ArbitrationProxy Contract Object\n * @constructor ArbitrationProxyContract\n * @param {Web3} web3\n * @param {Integer} decimals\n * @param {Address} contractAddress\n */\n\nclass ArbitrationProxyContract extends IContract {\n  constructor(params) {\n    super({ abi: arbitrationProxy, ...params });\n    this.contractName = 'arbitrationProxy';\n  }\n\n  async getArbitrationRequestsRejected({ questionId }) {\n    const allEvents = await this.getEvents('RequestRejected');\n    const questionEvents = allEvents.filter(event => event.returnValues._questionID === questionId);\n\n    return questionEvents.map(event => ({\n      questionId: event.returnValues._questionID,\n      requester: event.returnValues._requester,\n      maxPrevious: Numbers.fromDecimalsNumber(event.returnValues._maxPrevious, 18),\n      reason: event.returnValues._reason\n    }));\n  }\n}\n\nmodule.exports = ArbitrationProxyContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvQXJiaXRyYXRpb25Qcm94eUNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFBLHlCQUF5QiwySEFBeUM7QUFDbEUsZ0JBQWdCLG1CQUFPLENBQUMsbUZBQWtCO0FBQzFDLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFhOztBQUV2QztBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQjs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxrQ0FBa0M7QUFDOUM7QUFDQTs7QUFFQSx5Q0FBeUMsWUFBWTtBQUNyRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvQXJiaXRyYXRpb25Qcm94eUNvbnRyYWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFyYml0cmF0aW9uUHJveHkgPSByZXF1aXJlKFwiLi4vaW50ZXJmYWNlc1wiKS5hcmJpdHJhdGlvblByb3h5O1xuY29uc3QgTnVtYmVycyA9IHJlcXVpcmUoXCIuLi91dGlscy9OdW1iZXJzXCIpO1xuY29uc3QgSUNvbnRyYWN0ID0gcmVxdWlyZSgnLi9JQ29udHJhY3QnKTtcblxuLyoqXG4gKiBBcmJpdHJhdGlvblByb3h5IENvbnRyYWN0IE9iamVjdFxuICogQGNvbnN0cnVjdG9yIEFyYml0cmF0aW9uUHJveHlDb250cmFjdFxuICogQHBhcmFtIHtXZWIzfSB3ZWIzXG4gKiBAcGFyYW0ge0ludGVnZXJ9IGRlY2ltYWxzXG4gKiBAcGFyYW0ge0FkZHJlc3N9IGNvbnRyYWN0QWRkcmVzc1xuICovXG5cbmNsYXNzIEFyYml0cmF0aW9uUHJveHlDb250cmFjdCBleHRlbmRzIElDb250cmFjdCB7XG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgIHN1cGVyKHsgYWJpOiBhcmJpdHJhdGlvblByb3h5LCAuLi5wYXJhbXMgfSk7XG4gICAgdGhpcy5jb250cmFjdE5hbWUgPSAnYXJiaXRyYXRpb25Qcm94eSc7XG4gIH1cblxuICBhc3luYyBnZXRBcmJpdHJhdGlvblJlcXVlc3RzUmVqZWN0ZWQoeyBxdWVzdGlvbklkIH0pIHtcbiAgICBjb25zdCBhbGxFdmVudHMgPSBhd2FpdCB0aGlzLmdldEV2ZW50cygnUmVxdWVzdFJlamVjdGVkJyk7XG4gICAgY29uc3QgcXVlc3Rpb25FdmVudHMgPSBhbGxFdmVudHMuZmlsdGVyKGV2ZW50ID0+IGV2ZW50LnJldHVyblZhbHVlcy5fcXVlc3Rpb25JRCA9PT0gcXVlc3Rpb25JZCk7XG5cbiAgICByZXR1cm4gcXVlc3Rpb25FdmVudHMubWFwKGV2ZW50ID0+ICh7XG4gICAgICBxdWVzdGlvbklkOiBldmVudC5yZXR1cm5WYWx1ZXMuX3F1ZXN0aW9uSUQsXG4gICAgICByZXF1ZXN0ZXI6IGV2ZW50LnJldHVyblZhbHVlcy5fcmVxdWVzdGVyLFxuICAgICAgbWF4UHJldmlvdXM6IE51bWJlcnMuZnJvbURlY2ltYWxzTnVtYmVyKGV2ZW50LnJldHVyblZhbHVlcy5fbWF4UHJldmlvdXMsIDE4KSxcbiAgICAgIHJlYXNvbjogZXZlbnQucmV0dXJuVmFsdWVzLl9yZWFzb25cbiAgICB9KSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBcmJpdHJhdGlvblByb3h5Q29udHJhY3Q7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/ArbitrationProxyContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/ERC20Contract.js":
/*!******************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/ERC20Contract.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ierc20 = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").ierc20);\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nclass ERC20Contract extends IContract {\n  constructor(params, abi) {\n    super({...params, abi: params.abi || ierc20});\n    this.contractName = 'erc20';\n  }\n\n  async __assert() {\n    await super.__assert();\n    this.params.decimals = await this.getDecimalsAsync();\n  }\n\n  async transferTokenAmount({ toAddress, tokenAmount }) {\n    let amountWithDecimals = Numbers.toSmartContractDecimals(\n      tokenAmount,\n      this.getDecimals()\n    );\n    return await this.__sendTx(\n      this.getContract()\n        .methods.transfer(toAddress, amountWithDecimals)\n    );\n  }\n\n  async getTokenAmount(address) {\n    return Numbers.fromDecimals(\n      await this.getContract().methods.balanceOf(address).call(),\n      this.getDecimals()\n    );\n  }\n\n  async totalSupply() {\n    return Numbers.fromDecimals(await this.getContract().methods.totalSupply().call(), this.getDecimals());\n  }\n\n  getABI() {\n    return this.params.contract;\n  }\n\n  getDecimals() {\n    return this.params.decimals;\n  }\n\n  async getDecimalsAsync() {\n    return await this.getContract().methods.decimals().call();\n  }\n\n  async balanceOf({ address }) {\n    const decimals = this.getDecimals() || (await this.getDecimalsAsync());\n    return Numbers.fromDecimalsNumber(await this.getContract().methods.balanceOf(address).call(), decimals);\n  }\n\n  async isApproved({ address, amount, spenderAddress }) {\n    try {\n      let approvedAmount = Numbers.fromDecimals(\n        await this.getContract().methods.allowance(address, spenderAddress).call(),\n        this.getDecimals()\n      );\n      return (approvedAmount >= amount);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async approve({ address, amount, callback }) {\n    try {\n      let amountWithDecimals = Numbers.toSmartContractDecimals(\n        amount,\n        this.getDecimals() || (await this.getDecimalsAsync())\n      );\n      let res = await this.__sendTx(\n        this.getContract().methods.approve(address, amountWithDecimals),\n        null,\n        null,\n        callback\n      );\n      return res;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async burn({ amount }) {\n    try {\n      let amountWithDecimals = Numbers.toSmartContractDecimals(\n        amount,\n        this.getDecimals()\n      );\n      let res = await this.__sendTx(\n        this.getContract().methods.burn(amountWithDecimals),\n        false,\n      );\n      return res;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async mint({ address, amount }) {\n    try {\n      let amountWithDecimals = Numbers.toSmartContractDecimals(\n        amount,\n        this.getDecimals()\n      );\n      let res = await this.__sendTx(\n        this.getContract().methods.mint(address, amountWithDecimals),\n        false,\n      );\n      return res;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async burnEvents({ address }) {\n    const events = await this.getEvents(\n      'Transfer',\n      { from: address, to: '0x0000000000000000000000000000000000000000' }\n    )\n\n    // attaching block timestamp to event\n    return await Promise.all(events.map(async (event) => {\n      const block = await this.getBlock(event.blockNumber);\n\n      return {\n        ...event,\n        timestamp: block.timestamp\n      };\n    }));\n  }\n\n  async name() {\n    return await this.getContract().methods.name().call();\n  }\n\n  async symbol() {\n    return await this.getContract().methods.symbol().call();\n  }\n\n  async paused() {\n    return await this.getContract().methods.paused().call();\n  }\n\n  async getTokenInfo() {\n    return {\n      name: await this.name(),\n      address: this.getAddress(),\n      ticker: await this.symbol(),\n      decimals: await this.getDecimalsAsync(),\n    };\n  }\n}\n\nmodule.exports = ERC20Contract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvRVJDMjBDb250cmFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLGlIQUErQjtBQUM5QyxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBa0I7QUFDMUMsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWE7O0FBRXZDO0FBQ0E7QUFDQSxXQUFXLHFDQUFxQztBQUNoRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDhCQUE4Qix3QkFBd0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBOztBQUVBLHFCQUFxQixpQ0FBaUM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsMkJBQTJCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLGlCQUFpQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLFNBQVM7QUFDOUI7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvc3JjL21vZGVscy9FUkMyMENvbnRyYWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGllcmMyMCA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzXCIpLmllcmMyMDtcbmNvbnN0IE51bWJlcnMgPSByZXF1aXJlKFwiLi4vdXRpbHMvTnVtYmVyc1wiKTtcbmNvbnN0IElDb250cmFjdCA9IHJlcXVpcmUoJy4vSUNvbnRyYWN0Jyk7XG5cbmNsYXNzIEVSQzIwQ29udHJhY3QgZXh0ZW5kcyBJQ29udHJhY3Qge1xuICBjb25zdHJ1Y3RvcihwYXJhbXMsIGFiaSkge1xuICAgIHN1cGVyKHsuLi5wYXJhbXMsIGFiaTogcGFyYW1zLmFiaSB8fCBpZXJjMjB9KTtcbiAgICB0aGlzLmNvbnRyYWN0TmFtZSA9ICdlcmMyMCc7XG4gIH1cblxuICBhc3luYyBfX2Fzc2VydCgpIHtcbiAgICBhd2FpdCBzdXBlci5fX2Fzc2VydCgpO1xuICAgIHRoaXMucGFyYW1zLmRlY2ltYWxzID0gYXdhaXQgdGhpcy5nZXREZWNpbWFsc0FzeW5jKCk7XG4gIH1cblxuICBhc3luYyB0cmFuc2ZlclRva2VuQW1vdW50KHsgdG9BZGRyZXNzLCB0b2tlbkFtb3VudCB9KSB7XG4gICAgbGV0IGFtb3VudFdpdGhEZWNpbWFscyA9IE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHMoXG4gICAgICB0b2tlbkFtb3VudCxcbiAgICAgIHRoaXMuZ2V0RGVjaW1hbHMoKVxuICAgICk7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KClcbiAgICAgICAgLm1ldGhvZHMudHJhbnNmZXIodG9BZGRyZXNzLCBhbW91bnRXaXRoRGVjaW1hbHMpXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIGdldFRva2VuQW1vdW50KGFkZHJlc3MpIHtcbiAgICByZXR1cm4gTnVtYmVycy5mcm9tRGVjaW1hbHMoXG4gICAgICBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5iYWxhbmNlT2YoYWRkcmVzcykuY2FsbCgpLFxuICAgICAgdGhpcy5nZXREZWNpbWFscygpXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIHRvdGFsU3VwcGx5KCkge1xuICAgIHJldHVybiBOdW1iZXJzLmZyb21EZWNpbWFscyhhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy50b3RhbFN1cHBseSgpLmNhbGwoKSwgdGhpcy5nZXREZWNpbWFscygpKTtcbiAgfVxuXG4gIGdldEFCSSgpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJhbXMuY29udHJhY3Q7XG4gIH1cblxuICBnZXREZWNpbWFscygpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJhbXMuZGVjaW1hbHM7XG4gIH1cblxuICBhc3luYyBnZXREZWNpbWFsc0FzeW5jKCkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5kZWNpbWFscygpLmNhbGwoKTtcbiAgfVxuXG4gIGFzeW5jIGJhbGFuY2VPZih7IGFkZHJlc3MgfSkge1xuICAgIGNvbnN0IGRlY2ltYWxzID0gdGhpcy5nZXREZWNpbWFscygpIHx8IChhd2FpdCB0aGlzLmdldERlY2ltYWxzQXN5bmMoKSk7XG4gICAgcmV0dXJuIE51bWJlcnMuZnJvbURlY2ltYWxzTnVtYmVyKGF3YWl0IHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmJhbGFuY2VPZihhZGRyZXNzKS5jYWxsKCksIGRlY2ltYWxzKTtcbiAgfVxuXG4gIGFzeW5jIGlzQXBwcm92ZWQoeyBhZGRyZXNzLCBhbW91bnQsIHNwZW5kZXJBZGRyZXNzIH0pIHtcbiAgICB0cnkge1xuICAgICAgbGV0IGFwcHJvdmVkQW1vdW50ID0gTnVtYmVycy5mcm9tRGVjaW1hbHMoXG4gICAgICAgIGF3YWl0IHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmFsbG93YW5jZShhZGRyZXNzLCBzcGVuZGVyQWRkcmVzcykuY2FsbCgpLFxuICAgICAgICB0aGlzLmdldERlY2ltYWxzKClcbiAgICAgICk7XG4gICAgICByZXR1cm4gKGFwcHJvdmVkQW1vdW50ID49IGFtb3VudCk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgYXBwcm92ZSh7IGFkZHJlc3MsIGFtb3VudCwgY2FsbGJhY2sgfSkge1xuICAgIHRyeSB7XG4gICAgICBsZXQgYW1vdW50V2l0aERlY2ltYWxzID0gTnVtYmVycy50b1NtYXJ0Q29udHJhY3REZWNpbWFscyhcbiAgICAgICAgYW1vdW50LFxuICAgICAgICB0aGlzLmdldERlY2ltYWxzKCkgfHwgKGF3YWl0IHRoaXMuZ2V0RGVjaW1hbHNBc3luYygpKVxuICAgICAgKTtcbiAgICAgIGxldCByZXMgPSBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5hcHByb3ZlKGFkZHJlc3MsIGFtb3VudFdpdGhEZWNpbWFscyksXG4gICAgICAgIG51bGwsXG4gICAgICAgIG51bGwsXG4gICAgICAgIGNhbGxiYWNrXG4gICAgICApO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH1cblxuICBhc3luYyBidXJuKHsgYW1vdW50IH0pIHtcbiAgICB0cnkge1xuICAgICAgbGV0IGFtb3VudFdpdGhEZWNpbWFscyA9IE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHMoXG4gICAgICAgIGFtb3VudCxcbiAgICAgICAgdGhpcy5nZXREZWNpbWFscygpXG4gICAgICApO1xuICAgICAgbGV0IHJlcyA9IGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmJ1cm4oYW1vdW50V2l0aERlY2ltYWxzKSxcbiAgICAgICAgZmFsc2UsXG4gICAgICApO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH1cblxuICBhc3luYyBtaW50KHsgYWRkcmVzcywgYW1vdW50IH0pIHtcbiAgICB0cnkge1xuICAgICAgbGV0IGFtb3VudFdpdGhEZWNpbWFscyA9IE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHMoXG4gICAgICAgIGFtb3VudCxcbiAgICAgICAgdGhpcy5nZXREZWNpbWFscygpXG4gICAgICApO1xuICAgICAgbGV0IHJlcyA9IGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLm1pbnQoYWRkcmVzcywgYW1vdW50V2l0aERlY2ltYWxzKSxcbiAgICAgICAgZmFsc2UsXG4gICAgICApO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH1cblxuICBhc3luYyBidXJuRXZlbnRzKHsgYWRkcmVzcyB9KSB7XG4gICAgY29uc3QgZXZlbnRzID0gYXdhaXQgdGhpcy5nZXRFdmVudHMoXG4gICAgICAnVHJhbnNmZXInLFxuICAgICAgeyBmcm9tOiBhZGRyZXNzLCB0bzogJzB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcgfVxuICAgIClcblxuICAgIC8vIGF0dGFjaGluZyBibG9jayB0aW1lc3RhbXAgdG8gZXZlbnRcbiAgICByZXR1cm4gYXdhaXQgUHJvbWlzZS5hbGwoZXZlbnRzLm1hcChhc3luYyAoZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IGJsb2NrID0gYXdhaXQgdGhpcy5nZXRCbG9jayhldmVudC5ibG9ja051bWJlcik7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmV2ZW50LFxuICAgICAgICB0aW1lc3RhbXA6IGJsb2NrLnRpbWVzdGFtcFxuICAgICAgfTtcbiAgICB9KSk7XG4gIH1cblxuICBhc3luYyBuYW1lKCkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5uYW1lKCkuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgc3ltYm9sKCkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5zeW1ib2woKS5jYWxsKCk7XG4gIH1cblxuICBhc3luYyBwYXVzZWQoKSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnBhdXNlZCgpLmNhbGwoKTtcbiAgfVxuXG4gIGFzeW5jIGdldFRva2VuSW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogYXdhaXQgdGhpcy5uYW1lKCksXG4gICAgICBhZGRyZXNzOiB0aGlzLmdldEFkZHJlc3MoKSxcbiAgICAgIHRpY2tlcjogYXdhaXQgdGhpcy5zeW1ib2woKSxcbiAgICAgIGRlY2ltYWxzOiBhd2FpdCB0aGlzLmdldERlY2ltYWxzQXN5bmMoKSxcbiAgICB9O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gRVJDMjBDb250cmFjdDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/ERC20Contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/FantasyERC20Contract.js":
/*!*************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/FantasyERC20Contract.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const fantasyerc20 = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").fantasyerc20);\nconst ERC20Contract = __webpack_require__(/*! ./ERC20Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/ERC20Contract.js\");\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\n\n/**\n * Fantasy ERC20 Contract Object\n * @constructor FantasyERC20Contract\n * @param {Web3} web3\n * @param {Integer} decimals\n * @param {Address} contractAddress\n */\n\nclass FantasyERC20Contract extends ERC20Contract {\n  constructor(params) {\n    super({ abi: fantasyerc20, ...params });\n    this.contractName = 'erc20';\n  }\n\n  /* Get Functions */\n  /**\n   * @function hasUserClaimedTokens\n   * @description Returns if the user has already claimed the tokens\n   * @returns {Boolean} claimedTokens\n   */\n  async hasUserClaimedTokens({ address }) {\n    return await this.params.contract\n      .getContract()\n      .methods\n      .hasUserClaimedTokens(address)\n      .call();\n  }\n\n  /**\n   * @function tokenAmountToClaim\n   * @description Returns the amount of tokens to claim\n   * @returns {Integer} tokenAmountToClaim\n   *\n   */\n  async tokenAmountToClaim() {\n    const tokenAmountToClaim = Numbers.fromDecimalsNumber(\n      await this.params.contract\n        .getContract()\n        .methods\n        .tokenAmountToClaim()\n        .call(),\n      this.getDecimals()\n    );\n\n    return tokenAmountToClaim;\n  }\n\n  /* POST User Functions */\n\n  /**\n   * @function claimTokens\n   * @description Claim tokens for sender\n   */\n  async claimTokens() {\n    return await this.__sendTx(\n      this.getContract().methods.claimTokens()\n    );\n  };\n\n  /**\n   * @function claimAndApproveTokens\n   * @description Claim and approve tokens for sender\n   */\n  async claimAndApproveTokens() {\n    return await this.__sendTx(\n      this.getContract().methods.claimAndApproveTokens()\n    );\n  };\n\n  /**\n   * @function resetBalance\n   * @description Reset user's balance to tokenAmountToClaim\n   */\n  async resetBalance() {\n    const address = await this.getMyAccount();\n    if (!address) return false;\n\n    const tokenAmountToClaim = await this.tokenAmountToClaim();\n    const balance = await this.getTokenAmount(address);\n\n    const amountToBurn = balance - tokenAmountToClaim > 0 ? balance - tokenAmountToClaim : 0;\n\n    return await this.burn({ amount: amountToBurn });\n  };\n}\n\nmodule.exports = FantasyERC20Contract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvRmFudGFzeUVSQzIwQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLHVIQUFxQztBQUMxRCxzQkFBc0IsbUJBQU8sQ0FBQyx5RkFBaUI7O0FBRS9DLGdCQUFnQixtQkFBTyxDQUFDLG1GQUFrQjs7QUFFMUM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEI7O0FBRUE7QUFDQTtBQUNBLFlBQVksOEJBQThCO0FBQzFDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSwrQkFBK0IsU0FBUztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUEsNkJBQTZCLHNCQUFzQjtBQUNuRDtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvc3JjL21vZGVscy9GYW50YXN5RVJDMjBDb250cmFjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmYW50YXN5ZXJjMjAgPSByZXF1aXJlKFwiLi4vaW50ZXJmYWNlc1wiKS5mYW50YXN5ZXJjMjA7XG5jb25zdCBFUkMyMENvbnRyYWN0ID0gcmVxdWlyZShcIi4vRVJDMjBDb250cmFjdFwiKTtcblxuY29uc3QgTnVtYmVycyA9IHJlcXVpcmUoXCIuLi91dGlscy9OdW1iZXJzXCIpO1xuXG4vKipcbiAqIEZhbnRhc3kgRVJDMjAgQ29udHJhY3QgT2JqZWN0XG4gKiBAY29uc3RydWN0b3IgRmFudGFzeUVSQzIwQ29udHJhY3RcbiAqIEBwYXJhbSB7V2ViM30gd2ViM1xuICogQHBhcmFtIHtJbnRlZ2VyfSBkZWNpbWFsc1xuICogQHBhcmFtIHtBZGRyZXNzfSBjb250cmFjdEFkZHJlc3NcbiAqL1xuXG5jbGFzcyBGYW50YXN5RVJDMjBDb250cmFjdCBleHRlbmRzIEVSQzIwQ29udHJhY3Qge1xuICBjb25zdHJ1Y3RvcihwYXJhbXMpIHtcbiAgICBzdXBlcih7IGFiaTogZmFudGFzeWVyYzIwLCAuLi5wYXJhbXMgfSk7XG4gICAgdGhpcy5jb250cmFjdE5hbWUgPSAnZXJjMjAnO1xuICB9XG5cbiAgLyogR2V0IEZ1bmN0aW9ucyAqL1xuICAvKipcbiAgICogQGZ1bmN0aW9uIGhhc1VzZXJDbGFpbWVkVG9rZW5zXG4gICAqIEBkZXNjcmlwdGlvbiBSZXR1cm5zIGlmIHRoZSB1c2VyIGhhcyBhbHJlYWR5IGNsYWltZWQgdGhlIHRva2Vuc1xuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0gY2xhaW1lZFRva2Vuc1xuICAgKi9cbiAgYXN5bmMgaGFzVXNlckNsYWltZWRUb2tlbnMoeyBhZGRyZXNzIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3RcbiAgICAgIC5nZXRDb250cmFjdCgpXG4gICAgICAubWV0aG9kc1xuICAgICAgLmhhc1VzZXJDbGFpbWVkVG9rZW5zKGFkZHJlc3MpXG4gICAgICAuY2FsbCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBmdW5jdGlvbiB0b2tlbkFtb3VudFRvQ2xhaW1cbiAgICogQGRlc2NyaXB0aW9uIFJldHVybnMgdGhlIGFtb3VudCBvZiB0b2tlbnMgdG8gY2xhaW1cbiAgICogQHJldHVybnMge0ludGVnZXJ9IHRva2VuQW1vdW50VG9DbGFpbVxuICAgKlxuICAgKi9cbiAgYXN5bmMgdG9rZW5BbW91bnRUb0NsYWltKCkge1xuICAgIGNvbnN0IHRva2VuQW1vdW50VG9DbGFpbSA9IE51bWJlcnMuZnJvbURlY2ltYWxzTnVtYmVyKFxuICAgICAgYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3RcbiAgICAgICAgLmdldENvbnRyYWN0KClcbiAgICAgICAgLm1ldGhvZHNcbiAgICAgICAgLnRva2VuQW1vdW50VG9DbGFpbSgpXG4gICAgICAgIC5jYWxsKCksXG4gICAgICB0aGlzLmdldERlY2ltYWxzKClcbiAgICApO1xuXG4gICAgcmV0dXJuIHRva2VuQW1vdW50VG9DbGFpbTtcbiAgfVxuXG4gIC8qIFBPU1QgVXNlciBGdW5jdGlvbnMgKi9cblxuICAvKipcbiAgICogQGZ1bmN0aW9uIGNsYWltVG9rZW5zXG4gICAqIEBkZXNjcmlwdGlvbiBDbGFpbSB0b2tlbnMgZm9yIHNlbmRlclxuICAgKi9cbiAgYXN5bmMgY2xhaW1Ub2tlbnMoKSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5jbGFpbVRva2VucygpXG4gICAgKTtcbiAgfTtcblxuICAvKipcbiAgICogQGZ1bmN0aW9uIGNsYWltQW5kQXBwcm92ZVRva2Vuc1xuICAgKiBAZGVzY3JpcHRpb24gQ2xhaW0gYW5kIGFwcHJvdmUgdG9rZW5zIGZvciBzZW5kZXJcbiAgICovXG4gIGFzeW5jIGNsYWltQW5kQXBwcm92ZVRva2VucygpIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmNsYWltQW5kQXBwcm92ZVRva2VucygpXG4gICAgKTtcbiAgfTtcblxuICAvKipcbiAgICogQGZ1bmN0aW9uIHJlc2V0QmFsYW5jZVxuICAgKiBAZGVzY3JpcHRpb24gUmVzZXQgdXNlcidzIGJhbGFuY2UgdG8gdG9rZW5BbW91bnRUb0NsYWltXG4gICAqL1xuICBhc3luYyByZXNldEJhbGFuY2UoKSB7XG4gICAgY29uc3QgYWRkcmVzcyA9IGF3YWl0IHRoaXMuZ2V0TXlBY2NvdW50KCk7XG4gICAgaWYgKCFhZGRyZXNzKSByZXR1cm4gZmFsc2U7XG5cbiAgICBjb25zdCB0b2tlbkFtb3VudFRvQ2xhaW0gPSBhd2FpdCB0aGlzLnRva2VuQW1vdW50VG9DbGFpbSgpO1xuICAgIGNvbnN0IGJhbGFuY2UgPSBhd2FpdCB0aGlzLmdldFRva2VuQW1vdW50KGFkZHJlc3MpO1xuXG4gICAgY29uc3QgYW1vdW50VG9CdXJuID0gYmFsYW5jZSAtIHRva2VuQW1vdW50VG9DbGFpbSA+IDAgPyBiYWxhbmNlIC0gdG9rZW5BbW91bnRUb0NsYWltIDogMDtcblxuICAgIHJldHVybiBhd2FpdCB0aGlzLmJ1cm4oeyBhbW91bnQ6IGFtb3VudFRvQnVybiB9KTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBGYW50YXN5RVJDMjBDb250cmFjdDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/FantasyERC20Contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js":
/*!**************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/IContract.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Contract = __webpack_require__(/*! ../utils/Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Contract.js\");\nconst _ = __webpack_require__(/*! lodash */ \"(ssr)/./node_modules/lodash/lodash.js\");\nconst axios = __webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/index.js\");\nconst PolkamarketsSmartAccount = __webpack_require__(/*! ./PolkamarketsSmartAccount */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PolkamarketsSmartAccount.js\");\nconst ethers = (__webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/index.js\").ethers);\n\nconst { ENTRYPOINT_ADDRESS_V06, bundlerActions, providerToSmartAccountSigner, getAccountNonce } = __webpack_require__(/*! permissionless */ \"(ssr)/./node_modules/permissionless/_cjs/index.js\");\nconst { pimlicoBundlerActions, pimlicoPaymasterActions } = __webpack_require__(/*! permissionless/actions/pimlico */ \"(ssr)/./node_modules/permissionless/_cjs/actions/pimlico.js\");\nconst { createClient, createPublicClient, http } = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_cjs/index.js\");\nconst { signerToSimpleSmartAccount } = __webpack_require__(/*! permissionless/accounts */ \"(ssr)/./node_modules/permissionless/_cjs/accounts/index.js\");\n\nconst { getPaymasterAndData, estimateUserOpGas, bundleUserOp, signUserOp, waitForUserOpReceipt, getUserOpGasFees, createUnsignedUserOp } = __webpack_require__(/*! thirdweb/wallets/smart */ \"(ssr)/./node_modules/thirdweb/dist/cjs/exports/wallets/smart.js\");\nconst { createThirdwebClient, getContract, prepareContractCall, prepareTransaction, sendTransaction, waitForReceipt } = __webpack_require__(/*! thirdweb */ \"(ssr)/./node_modules/thirdweb/dist/cjs/exports/thirdweb.js\");\nconst { defineChain } = __webpack_require__(/*! thirdweb/chains */ \"(ssr)/./node_modules/thirdweb/dist/cjs/exports/chains.js\");\nconst { ethers5Adapter } = __webpack_require__(/*! thirdweb/adapters/ethers5 */ \"(ssr)/./node_modules/thirdweb/dist/cjs/exports/adapters/ethers5.js\");\nconst { smartWallet } = __webpack_require__(/*! thirdweb/wallets/smart */ \"(ssr)/./node_modules/thirdweb/dist/cjs/exports/wallets/smart.js\");\n\n/**\n * Contract Object Interface\n * @constructor IContract\n * @param {Web3} web3\n * @param {Address} contractAddress ? (opt)\n * @param {ABI} abi\n * @param {Account} acc ? (opt)\n */\n\n\nclass IContract {\n  constructor({\n    web3,\n    contractAddress = null /* If not deployed */,\n    abi,\n    acc,\n    web3EventsProvider,\n    gasPrice,\n    isSocialLogin = false,\n    startBlock\n  }) {\n    try {\n      if (!abi) {\n        throw new Error(\"No ABI Interface provided\");\n      }\n      if (!web3) {\n        throw new Error(\"Please provide a valid web3 provider\");\n      };\n\n      this.web3 = web3;\n\n      if (acc) {\n        this.acc = acc;\n      }\n\n      this.params = {\n        web3,\n        abi,\n        contractAddress,\n        web3EventsProvider,\n        gasPrice,\n        contract: new Contract(web3, abi, contractAddress),\n        isSocialLogin,\n        startBlock,\n      };\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async __init__() {\n    try {\n      if (!this.getAddress()) {\n        throw new Error(\"Please add a Contract Address\");\n      }\n\n      await this.__assert();\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  async __metamaskCall({ f, acc, value, callback = () => { } }) {\n    return f.send({\n      from: acc,\n      value: value,\n      gasPrice: this.params.gasPrice,\n      maxPriorityFeePerGas: null,\n      maxFeePerGas: null\n    })\n      .on(\"confirmation\", (confirmationNumber, receipt) => {\n        callback(confirmationNumber)\n        if (confirmationNumber > 0) {\n          resolve(receipt);\n        }\n      })\n      .on(\"error\", (err) => {\n        throw err;\n        // reject(err);\n      });\n  };\n\n  waitForTransactionHashToBeGenerated(userOpHash, networkConfig) {\n    return new Promise((resolve, reject) => {\n      const interval = setInterval(async () => {\n        const userOperation = await axios.post(`${networkConfig.bundlerRPC}/rpc?chainId=${networkConfig.chainId}`,\n          {\n            \"method\": \"eth_getUserOperationByHash\",\n            \"params\": [\n              userOpHash\n            ]\n          }\n        );\n\n        if (userOperation.data.result && userOperation.data.result.transactionHash) {\n          clearInterval(interval);\n          resolve(userOperation.data.result.transactionHash);\n        } else if (networkConfig.bundlerAPI) {\n          let userOperationData;\n          try {\n            userOperationData = await axios.get(`${networkConfig.bundlerAPI}/user_operations/${userOpHash}`);\n          } catch (error) {\n            // fetch should be non-blocking\n          }\n\n          if (userOperationData && userOperationData.data && userOperationData.data.status === 'failed') {\n            clearInterval(interval);\n            reject(new Error('User operation failed'));\n          }\n        }\n      }, 1000);\n    });\n  }\n\n  operationDataFromCall(f) {\n    return {\n      contract: this.params.abi.contractName,\n      method: f._method.name,\n      arguments: f.arguments,\n    };\n  }\n\n  getUserOpHash(chainId, userOp, entryPoint) {\n    const abiCoder = new ethers.utils.AbiCoder();\n\n    const userOpHash = ethers.utils.keccak256(this.packUserOp(userOp, true));\n    const enc = abiCoder.encode(['bytes32', 'address', 'uint256'], [userOpHash, entryPoint, chainId]);\n    return ethers.utils.keccak256(enc);\n  }\n\n  packUserOp(userOp, forSignature = true) {\n    const abiCoder = new ethers.utils.AbiCoder();\n    if (forSignature) {\n      return abiCoder.encode(\n        ['address', 'uint256', 'bytes32', 'bytes32', 'uint256', 'uint256', 'uint256', 'uint256', 'uint256', 'bytes32'],\n        [\n          userOp.sender,\n          userOp.nonce,\n          ethers.utils.keccak256(userOp.initCode),\n          ethers.utils.keccak256(userOp.callData),\n          userOp.callGasLimit,\n          userOp.verificationGasLimit,\n          userOp.preVerificationGas,\n          userOp.maxFeePerGas,\n          userOp.maxPriorityFeePerGas,\n          ethers.utils.keccak256(userOp.paymasterAndData),\n        ],\n      );\n    } else {\n      // for the purpose of calculating gas cost encode also signature (and no keccak of bytes)\n      return abiCoder.encode(\n        ['address', 'uint256', 'bytes', 'bytes', 'uint256', 'uint256', 'uint256', 'uint256', 'uint256', 'bytes', 'bytes'],\n        [\n          userOp.sender,\n          userOp.nonce,\n          userOp.initCode,\n          userOp.callData,\n          userOp.callGasLimit,\n          userOp.verificationGasLimit,\n          userOp.preVerificationGas,\n          userOp.maxFeePerGas,\n          userOp.maxPriorityFeePerGas,\n          userOp.paymasterAndData,\n          userOp.signature,\n        ],\n      );\n    }\n  }\n\n  waitForTransactionHashToBeGeneratedPimlico(userOpHash, pimlicoBundlerClient) {\n    return new Promise((resolve, reject) => {\n      const interval = setInterval(async () => {\n        const getStatusResult = await pimlicoBundlerClient.getUserOperationStatus({\n          hash: userOpHash,\n        })\n\n        if (getStatusResult.transactionHash) {\n          clearInterval(interval);\n          resolve(getStatusResult.transactionHash);\n        }\n      }, 1000);\n    });\n  }\n\n  async usePimlicoForGaslessTransactions(f, tx, methodCallData, networkConfig, provider) {\n    const accountABI = [\"function execute(address to, uint256 value, bytes data)\"];\n    const account = new ethers.utils.Interface(accountABI);\n    const callData = account.encodeFunctionData(\"execute\", [\n      tx.to,\n      ethers.constants.Zero,\n      methodCallData,\n    ]);\n\n    const publicClient = createPublicClient({\n      chain: networkConfig.viemChain,\n      transport: http(networkConfig.rpcUrl)\n    });\n\n    const bundlerClient = createClient({\n      transport: http(`${networkConfig.pimlicoUrl}/${networkConfig.chainId}/rpc?apikey=${networkConfig.pimlicoApiKey}`),\n      chain: networkConfig.viemChain,\n    })\n      .extend(bundlerActions(ENTRYPOINT_ADDRESS_V06))\n      .extend(pimlicoBundlerActions(ENTRYPOINT_ADDRESS_V06))\n\n\n    const paymasterClient = createClient({\n      transport: http(`${networkConfig.pimlicoUrl}/${networkConfig.chainId}/rpc?apikey=${networkConfig.pimlicoApiKey}`),\n      chain: networkConfig.viemChain,\n    }).extend(pimlicoPaymasterActions(ENTRYPOINT_ADDRESS_V06))\n\n    const smartAccountSigner = await providerToSmartAccountSigner(provider);\n\n    const smartAccount = await signerToSimpleSmartAccount(publicClient, {\n      signer: smartAccountSigner,\n      factoryAddress: networkConfig.factoryAddress || PolkamarketsSmartAccount.PIMLICO_FACTORY_ADDRESS,\n      entryPoint: ENTRYPOINT_ADDRESS_V06,\n    })\n\n    const initCode = await smartAccount.getInitCode();\n    const senderAddress = smartAccount.address;\n\n    const gasPrice = await bundlerClient.getUserOperationGasPrice()\n\n    const key = BigInt(Math.floor(Math.random() * 6277101735386680763835789423207666416102355444464034512895));\n\n    const nonce = await getAccountNonce(publicClient, {\n      sender: senderAddress,\n      entryPoint: ENTRYPOINT_ADDRESS_V06,\n      key\n    })\n\n    const userOperation = {\n      sender: senderAddress,\n      nonce,\n      initCode: initCode,\n      callData: callData,\n      maxFeePerGas: Number(gasPrice.fast.maxFeePerGas),\n      maxPriorityFeePerGas: Number(gasPrice.fast.maxPriorityFeePerGas),\n      signature: await smartAccount.getDummySignature(),\n    }\n\n    const sponsorUserOperationResult = await paymasterClient.sponsorUserOperation({\n      userOperation,\n    })\n\n    const sponsoredUserOperation = {\n      ...userOperation,\n      ...sponsorUserOperationResult,\n    }\n\n    const signature = await smartAccount.signUserOperation(sponsoredUserOperation);\n\n    sponsoredUserOperation.signature = signature;\n\n    let userOpHash = this.getUserOpHash(networkConfig.chainId, sponsoredUserOperation, ENTRYPOINT_ADDRESS_V06);\n\n    if (networkConfig.bundlerAPI) {\n      sponsoredUserOperation.nonce = ethers.BigNumber.from(sponsoredUserOperation.nonce).toHexString();\n      sponsoredUserOperation.maxFeePerGas = ethers.BigNumber.from(sponsoredUserOperation.maxFeePerGas).toHexString();\n      sponsoredUserOperation.maxPriorityFeePerGas = ethers.BigNumber.from(sponsoredUserOperation.maxPriorityFeePerGas).toHexString();\n      sponsoredUserOperation.preVerificationGas = ethers.BigNumber.from(sponsoredUserOperation.preVerificationGas).toHexString();\n      sponsoredUserOperation.verificationGasLimit = ethers.BigNumber.from(sponsoredUserOperation.verificationGasLimit).toHexString();\n      sponsoredUserOperation.callGasLimit = ethers.BigNumber.from(sponsoredUserOperation.callGasLimit).toHexString();\n\n      const txResponse = await axios.post(`${networkConfig.bundlerAPI}/user_operations`,\n        {\n          user_operation: {\n            user_operation: sponsoredUserOperation,\n            user_operation_hash: userOpHash,\n            user_operation_data: [this.operationDataFromCall(f)],\n            network_id: networkConfig.chainId,\n          }\n        }\n      );\n\n      if (txResponse.data.error) {\n        throw new Error(txResponse.data.error.message);\n      }\n    } else {\n      userOpHash = await bundlerClient.sendUserOperation({\n        userOperation: sponsoredUserOperation,\n      })\n    }\n\n    const transactionHash = await this.waitForTransactionHashToBeGeneratedPimlico(userOpHash, bundlerClient);\n\n    const receipt = await publicClient.waitForTransactionReceipt(\n      { hash: transactionHash }\n    )\n\n    return receipt;\n\n  }\n\n  async useThirdWebForGaslessTransactions(f, tx, methodCallData, networkConfig, provider) {\n    const accountABI = [\"function execute(address to, uint256 value, bytes data)\"];\n    const account = new ethers.utils.Interface(accountABI);\n    const callData = account.encodeFunctionData(\"execute\", [\n      tx.to,\n      ethers.constants.Zero,\n      methodCallData,\n    ]);\n\n    const publicClient = createPublicClient({\n      chain: networkConfig.viemChain,\n      transport: http(networkConfig.rpcUrl)\n    });\n\n    const smartAccountSigner = await providerToSmartAccountSigner(provider);\n\n    const smartAccount = await signerToSimpleSmartAccount(publicClient, {\n      signer: smartAccountSigner,\n      factoryAddress: networkConfig.factoryAddress || PolkamarketsSmartAccount.PIMLICO_FACTORY_ADDRESS,\n      entryPoint: ENTRYPOINT_ADDRESS_V06,\n    })\n\n    const initCode = await smartAccount.getInitCode();\n    const senderAddress = smartAccount.address;\n\n    const client = createThirdwebClient({ clientId: networkConfig.thirdWebClientId });\n\n    const chain = defineChain(networkConfig.chainId);\n\n    const gasPrice = await getUserOpGasFees(\n      {\n        options: {\n          entrypointAddress: ENTRYPOINT_ADDRESS_V06,\n          chain,\n          client,\n        }\n      }\n    );\n\n    const key = BigInt(Math.floor(Math.random() * 6277101735386680763835789423207666416102355444464034512895));\n\n    const nonce = await getAccountNonce(publicClient, {\n      sender: senderAddress,\n      entryPoint: ENTRYPOINT_ADDRESS_V06,\n      key\n    })\n\n    const userOperation = {\n      sender: senderAddress,\n      nonce,\n      initCode: initCode,\n      callData: callData,\n      maxFeePerGas: Number(gasPrice.maxFeePerGas),\n      maxPriorityFeePerGas: Number(gasPrice.maxPriorityFeePerGas),\n      signature: await smartAccount.getDummySignature(),\n      paymasterAndData: '0x',\n    }\n\n    const gasFees = await estimateUserOpGas({\n      userOp: userOperation,\n      options: {\n        entrypointAddress: ENTRYPOINT_ADDRESS_V06,\n        chain,\n        client,\n      }\n    })\n\n    userOperation.verificationGasLimit = gasFees.verificationGasLimit;\n    userOperation.preVerificationGas = gasFees.preVerificationGas;\n    userOperation.callGasLimit = gasFees.callGasLimit;\n\n    const sponsorUserOperationResult = await getPaymasterAndData(\n      {\n        userOp: userOperation,\n        client,\n        chain,\n        entrypointAddress: ENTRYPOINT_ADDRESS_V06,\n      }\n    );\n\n    userOperation.paymasterAndData = sponsorUserOperationResult.paymasterAndData;\n\n    if (\n      sponsorUserOperationResult.callGasLimit &&\n      sponsorUserOperationResult.verificationGasLimit &&\n      sponsorUserOperationResult.preVerificationGas\n    ) {\n      userOperation.callGasLimit = sponsorUserOperationResult.callGasLimit;\n      userOperation.verificationGasLimit = sponsorUserOperationResult.verificationGasLimit;\n      userOperation.preVerificationGas = sponsorUserOperationResult.preVerificationGas;\n    }\n\n    const signedUserOp = await signUserOp({\n      userOp: userOperation,\n      chain,\n      client,\n      entrypointAddress: ENTRYPOINT_ADDRESS_V06,\n      adminAccount: smartAccountSigner,\n    });\n\n    let userOpHash = this.getUserOpHash(networkConfig.chainId, signedUserOp, ENTRYPOINT_ADDRESS_V06);\n\n    if (networkConfig.bundlerAPI) {\n      userOperation.nonce = ethers.BigNumber.from(userOperation.nonce).toHexString();\n      userOperation.maxFeePerGas = ethers.BigNumber.from(userOperation.maxFeePerGas).toHexString();\n      userOperation.maxPriorityFeePerGas = ethers.BigNumber.from(userOperation.maxPriorityFeePerGas).toHexString();\n      userOperation.preVerificationGas = ethers.BigNumber.from(userOperation.preVerificationGas).toHexString();\n      userOperation.verificationGasLimit = ethers.BigNumber.from(userOperation.verificationGasLimit).toHexString();\n      userOperation.callGasLimit = ethers.BigNumber.from(userOperation.callGasLimit).toHexString();\n      userOperation.signature = signedUserOp.signature;\n\n      // currently txs are not bundled in thirdweb\n      axios.post(`${networkConfig.bundlerAPI}/user_operations`,\n        {\n          user_operation: {\n            user_operation: userOperation,\n            user_operation_hash: userOpHash,\n            user_operation_data: [this.operationDataFromCall(f)],\n            network_id: networkConfig.chainId,\n          },\n          do_not_bundle: true\n        }\n      );\n    }\n\n    userOpHash = await bundleUserOp({\n      userOp: signedUserOp,\n      options: {\n        entrypointAddress: ENTRYPOINT_ADDRESS_V06,\n        chain,\n        client,\n      }\n    })\n\n    const receipt = await waitForUserOpReceipt({\n      chain,\n      client,\n      userOpHash,\n    });\n\n    return receipt;\n  }\n\n  async useThirdWebForGaslessTransactionsWithThirdWebAuth(f, tx, methodCallData, networkConfig, provider) {\n\n    const client = createThirdwebClient({ clientId: networkConfig.thirdWebClientId });\n\n    const chain = defineChain(networkConfig.chainId);\n\n    const factoryContract = getContract({\n      client: client,\n      address: networkConfig.factoryAddress || PolkamarketsSmartAccount.THIRDWEB_FACTORY_ADDRESS,\n      chain: chain,\n    });\n\n    const accountContract = getContract({\n      client,\n      address: provider.smartAccount.address,\n      chain,\n    });\n\n    const transaction = prepareContractCall({\n      contract: accountContract,\n      method: \"function execute(address, uint256, bytes)\",\n      params: [\n        tx.to,\n        0n,\n        tx.data,\n      ],\n    });\n\n    const userOperation = await createUnsignedUserOp({\n      transaction,\n      factoryContract,\n      accountContract,\n      adminAddress: provider.adminAccount.address,\n      sponsorGas: true,\n    });\n\n    const signedUserOp = await signUserOp({\n      userOp: userOperation,\n      chain,\n      client,\n      entrypointAddress: ENTRYPOINT_ADDRESS_V06,\n      adminAccount: provider.adminAccount,\n    });\n\n    let userOpHash = this.getUserOpHash(networkConfig.chainId, signedUserOp, ENTRYPOINT_ADDRESS_V06);\n\n    if (networkConfig.bundlerAPI) {\n      userOperation.nonce = ethers.BigNumber.from(userOperation.nonce).toHexString();\n      userOperation.maxFeePerGas = ethers.BigNumber.from(userOperation.maxFeePerGas).toHexString();\n      userOperation.maxPriorityFeePerGas = ethers.BigNumber.from(userOperation.maxPriorityFeePerGas).toHexString();\n      userOperation.preVerificationGas = ethers.BigNumber.from(userOperation.preVerificationGas).toHexString();\n      userOperation.verificationGasLimit = ethers.BigNumber.from(userOperation.verificationGasLimit).toHexString();\n      userOperation.callGasLimit = ethers.BigNumber.from(userOperation.callGasLimit).toHexString();\n      userOperation.signature = signedUserOp.signature;\n\n      // currently txs are not bundled in thirdweb\n      axios.post(`${networkConfig.bundlerAPI}/user_operations`,\n        {\n          user_operation: {\n            user_operation: userOperation,\n            user_operation_hash: userOpHash,\n            user_operation_data: [this.operationDataFromCall(f)],\n            network_id: networkConfig.chainId,\n          },\n          do_not_bundle: true\n        }\n      );\n    }\n\n    userOpHash = await bundleUserOp({\n      userOp: signedUserOp,\n      options: {\n        entrypointAddress: ENTRYPOINT_ADDRESS_V06,\n        chain,\n        client,\n      }\n    })\n\n    const receipt = await waitForUserOpReceipt({\n      chain,\n      client,\n      userOpHash,\n    });\n\n    return receipt;\n  }\n\n  async useThirdWebForGaslessWithZKSync(f, tx, methodCallData, networkConfig, provider) {\n\n    const client = createThirdwebClient({ clientId: networkConfig.thirdWebClientId });\n    const chain = defineChain(networkConfig.chainId);\n    let smartAccount;\n\n    if (provider.address) {\n      // it's already a thirdweb smart account\n      smartAccount = provider;\n    } else if (provider.smartAccount) {\n      smartAccount = provider.smartAccount;\n    } else {\n      const wallet = smartWallet({\n        chain,\n        sponsorGas: true, // enable sponsored transactions\n      });\n\n      let personalAccount = provider.personalAccount\n      if (!provider.personalAccount) {\n        const signer = provider.getSigner();\n        personalAccount = await ethers5Adapter.signer.fromEthers({ signer });\n      }\n\n      smartAccount = await wallet.connect({\n        client,\n        personalAccount,\n      });\n    }\n\n    const transaction = prepareTransaction({\n      chain,\n      client,\n      to: tx.to,\n      data: tx.data\n    });\n\n    const res = await sendTransaction({\n      transaction,\n      account: smartAccount,\n    });\n\n    const receipt = await waitForReceipt({\n      client,\n      chain,\n      transactionHash: res.transactionHash,\n    });\n\n    return receipt;\n  }\n\n  async sendGaslessTransactions(f) {\n    const smartAccount = PolkamarketsSmartAccount.singleton.getInstance();\n    const networkConfig = smartAccount.networkConfig;\n\n    const { isConnectedWallet, signer } = await smartAccount.providerIsConnectedWallet();\n\n    const methodName = f._method.name;\n\n    const contractInterface = new ethers.utils.Interface(this.params.abi.abi);\n    const methodCallData = contractInterface.encodeFunctionData(methodName, f.arguments);\n\n    const tx = {\n      to: this.params.contractAddress,\n      data: methodCallData,\n    };\n\n    try {\n      let receipt;\n\n      if (isConnectedWallet) {\n        const txResponse = await signer.sendTransaction({ ...tx, gasLimit: 210000 });\n        receipt = await txResponse.wait();\n      } else {\n\n        if (networkConfig.usePimlico) {\n          receipt = await this.usePimlicoForGaslessTransactions(f, tx, methodCallData, networkConfig, smartAccount.provider);\n        } else if (networkConfig.useThirdWeb) {\n          if (networkConfig.isZkSync) {\n            receipt = await this.useThirdWebForGaslessWithZKSync(f, tx, methodCallData, networkConfig, smartAccount.provider);\n          } else if (smartAccount.provider.adminAccount) {\n            // if exists adminAccount it means it's using thirdwebauth\n            receipt = await this.useThirdWebForGaslessTransactionsWithThirdWebAuth(f, tx, methodCallData, networkConfig, smartAccount.provider);\n          } else {\n            receipt = await this.useThirdWebForGaslessTransactions(f, tx, methodCallData, networkConfig, smartAccount.provider);\n          }\n        } else {\n          // trying operation 3 times\n          const retries = 3;\n          let feeQuotesResult;\n          for (let i = 0; i < retries; i++) {\n            try {\n              feeQuotesResult = await smartAccount.smartAccount.getFeeQuotes(tx);\n              break;\n            } catch (error) {\n              await new Promise((resolve) => setTimeout(resolve, 5000));\n\n              if (i === retries - 1) {\n                throw error;\n              } else {\n                // 1s interval between retries\n                await new Promise((resolve) => setTimeout(resolve, 1000));\n              }\n            }\n          }\n\n          let userOp = feeQuotesResult.verifyingPaymasterGasless.userOp;\n          let userOpHash = feeQuotesResult.verifyingPaymasterGasless.userOpHash;\n\n          // Get random key\n          const key = BigInt(Math.floor(Math.random() * 6277101735386680763835789423207666416102355444464034512895));\n\n          const entrypointAbi = [\n            \"function getNonce(address sender, uint192 key) view returns (uint256)\",\n          ];\n\n          const ethersProvider = new ethers.providers.JsonRpcProvider(this.params.web3.currentProvider.host);\n\n          const entrypointContract = new ethers.Contract(ENTRYPOINT_ADDRESS_V06, entrypointAbi, ethersProvider);\n\n          const senderAddress = await smartAccount.getAddress();\n\n          const nonce = await entrypointContract.getNonce(senderAddress, key);\n\n          userOp.nonce = nonce.toHexString();\n\n\n          const paymasterSponsorData = await axios.post(`https://paymaster.particle.network`,\n            {\n\n              \"method\": \"pm_sponsorUserOperation\",\n              \"params\": [\n                userOp,\n                ENTRYPOINT_ADDRESS_V06,\n              ]\n            }, {\n            params: {\n              chainId: networkConfig.chainId,\n              projectUuid: networkConfig.particleProjectId,\n              projectKey: networkConfig.particleClientKey,\n            }\n          }\n          );\n\n\n          userOp.paymasterAndData = paymasterSponsorData.data.result.paymasterAndData;\n\n          userOpHash = this.getUserOpHash(networkConfig.chainId, userOp, ENTRYPOINT_ADDRESS_V06);\n\n          const signedUserOp = await smartAccount.smartAccount.signUserOperation({ userOpHash, userOp });\n\n          let txResponse;\n          for (let i = 0; i < retries; i++) {\n            try {\n              if (networkConfig.bundlerAPI) {\n                txResponse = await axios.post(`${networkConfig.bundlerAPI}/user_operations`,\n                  {\n                    user_operation: {\n                      user_operation: signedUserOp,\n                      user_operation_hash: userOpHash,\n                      user_operation_data: [this.operationDataFromCall(f)],\n                      network_id: networkConfig.chainId,\n                    }\n                  }\n                );\n              } else {\n                txResponse = await axios.post(`${networkConfig.bundlerRPC}/rpc?chainId=${networkConfig.chainId}`,\n                  {\n\n                    \"method\": \"eth_sendUserOperation\",\n                    \"params\": [\n                      signedUserOp,\n                      ENTRYPOINT_ADDRESS_V06\n                    ]\n                  }\n                );\n              }\n\n              if (!txResponse.data.error) break;\n            } catch (error) {\n              if (i === retries - 1) {\n                throw error;\n              } else {\n                // 1s interval between retries\n                await new Promise((resolve) => setTimeout(resolve, 1000));\n              }\n            }\n          }\n\n          if (txResponse.data.error) {\n            throw new Error(txResponse.data.error.message);\n          }\n\n          const transactionHash = await this.waitForTransactionHashToBeGenerated(userOpHash, networkConfig);\n\n          const web3Provider = new ethers.providers.Web3Provider(smartAccount.provider)\n\n          receipt = await web3Provider.waitForTransaction(transactionHash);\n        }\n\n        console.log('receipt:', receipt.status, receipt.transactionHash);\n      }\n\n      if (receipt.logs) {\n        const events = receipt.logs.map(log => {\n          try {\n            const event = contractInterface.parseLog(log);\n            return event;\n          } catch (error) {\n            return null;\n          }\n        });\n        receipt.events = this.convertEtherEventsToWeb3Events(events);\n      }\n\n      return receipt;\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  convertEtherEventsToWeb3Events(events) {\n    const transformedEvents = {};\n    for (const event of events) {\n      if (!event) {\n        continue;\n      }\n\n      const { name, args, eventFragment } = event;\n\n      const returnValues = {};\n\n      eventFragment.inputs.forEach((input, index) => {\n        let value = args[index];\n\n        // if value is a BigNumber, convert it to a string\n        if (ethers.BigNumber.isBigNumber(value)) {\n          value = value.toString();\n        }\n\n        returnValues[input.name] = value;\n        returnValues[index.toString()] = value;\n      });\n\n      const transformedEvent = {\n        event: name,\n        returnValues,\n      };\n\n      if (!transformedEvents[name]) {\n        transformedEvents[name] = [];\n      }\n\n      transformedEvents[name].push(transformedEvent);\n    }\n\n    return transformedEvents;\n  }\n\n  async __sendTx(f, call = false, value, callback = () => { }) {\n    if (this.params.isSocialLogin && !call) {\n      return await this.sendGaslessTransactions(f);\n    } else {\n      var res;\n      if (!this.acc && !call) {\n        const accounts = await this.params.web3.eth.getAccounts();\n        res = await this.__metamaskCall({ f, acc: accounts[0], value, callback });\n      } else if (this.acc && !call) {\n        let data = f.encodeABI();\n        res = await this.params.contract.send(\n          this.acc.getAccount(),\n          data,\n          value\n        ).catch(err => { throw err; });\n      } else if (this.acc && call) {\n        res = await f.call({ from: this.acc.getAddress() }).catch(err => { throw err; });\n      } else {\n        res = await f.call().catch(err => { throw err; });\n      }\n\n      if (res.logs) {\n        const contractInterface = new ethers.utils.Interface(this.params.abi.abi);\n\n        const events = res.logs.map(log => {\n          try {\n            const event = contractInterface.parseLog(log);\n            return event;\n          } catch (error) {\n            return null;\n          }\n        });\n\n        res.events = this.convertEtherEventsToWeb3Events(events);\n      }\n\n      return res;\n    }\n  };\n\n  async __deploy(params, callback) {\n    return await this.params.contract.deploy(\n      this.acc,\n      this.params.contract.getABI(),\n      this.params.contract.getJSON().bytecode,\n      params,\n      callback\n    );\n  };\n\n  async __assert() {\n    if (!this.getAddress()) {\n      throw new Error(\"Contract is not deployed, first deploy it and provide a contract address\");\n    }\n    /* Use ABI */\n    this.params.contract.use(this.params.abi, this.getAddress());\n  }\n\n  /**\n   * @function deploy\n   * @description Deploy the Contract\n  */\n  async deploy({ callback, params = [] }) {\n    let res = await this.__deploy(params, callback);\n    this.params.contractAddress = res.contractAddress;\n    /* Call to Backend API */\n    await this.__assert();\n    return res;\n  };\n\n\n  /**\n   * @function setNewOwner\n   * @description Set New Owner of the Contract\n   * @param {string} address\n   */\n  async setNewOwner({ address }) {\n    return await this.__sendTx(\n      this.params.contract\n        .getContract()\n        .methods.transferOwnership(address)\n    );\n  }\n\n  /**\n   * @function owner\n   * @description Get Owner of the Contract\n   * @returns {string} address\n   */\n\n  async owner() {\n    return await this.params.contract.getContract().methods.owner().call();\n  }\n\n  /**\n   * @function isPaused\n   * @description Get Owner of the Contract\n   * @returns {boolean}\n   */\n\n  async isPaused() {\n    return await this.params.contract.getContract().methods.paused().call();\n  }\n\n  /**\n   * @function pauseContract\n   * @type admin\n   * @description Pause Contract\n   */\n  async pauseContract() {\n    return await this.__sendTx(\n      this.params.contract.getContract().methods.pause()\n    );\n  }\n\n  /**\n   * @function unpauseContract\n   * @type admin\n   * @description Unpause Contract\n   */\n  async unpauseContract() {\n    return await this.__sendTx(\n      this.params.contract.getContract().methods.unpause()\n    );\n  }\n\n  /* Optional */\n\n  /**\n   * @function removeOtherERC20Tokens\n   * @description Remove Tokens from other ERC20 Address (in case of accident)\n   * @param {Address} tokenAddress\n   * @param {Address} toAddress\n   */\n  async removeOtherERC20Tokens({ tokenAddress, toAddress }) {\n    return await this.__sendTx(\n      this.params.contract\n        .getContract()\n        .methods.removeOtherERC20Tokens(tokenAddress, toAddress)\n    );\n  };\n\n  /**\n   * @function safeGuardAllTokens\n   * @description Remove all tokens for the sake of bug or problem in the smart contract, contract has to be paused first, only Admin\n   * @param {Address} toAddress\n   */\n  async safeGuardAllTokens({ toAddress }) {\n    return await this.__sendTx(\n      this.params.contract\n        .getContract()\n        .methods.safeGuardAllTokens(toAddress)\n    );\n  };\n\n  /**\n   * @function changeTokenAddress\n   * @description Change Token Address of Application\n   * @param {Address} newTokenAddress\n   */\n  async changeTokenAddress({ newTokenAddress }) {\n    return await this.__sendTx(\n      this.params.contract\n        .getContract()\n        .methods.changeTokenAddress(newTokenAddress)\n    );\n  };\n\n  /**\n   * @function getAddress\n   * @description Get Balance of Contract\n   * @param {Integer} Balance\n   */\n  getAddress() {\n    return this.params.contractAddress;\n  }\n\n  /**\n   * @function getContract\n   * @description Gets Contract\n   * @return {Contract} Contract\n   */\n  getContract() {\n    return this.params.contract.getContract();\n  }\n\n  /**\n   * @function getBalance\n   * @description Get Balance of Contract\n   * @param {Integer} Balance\n   */\n\n  async getBalance() {\n    let wei = await this.web3.eth.getBalance(this.getAddress());\n    return this.web3.utils.fromWei(wei, 'ether');\n  };\n\n  /**\n   * @function getMyAccount\n   * @description Returns connected wallet account address\n   * @returns {String | undefined} address\n   */\n  async getMyAccount() {\n    if (this.params.isSocialLogin) {\n      const smartAccount = PolkamarketsSmartAccount.singleton.getInstance();\n      return await smartAccount.getAddress();\n    }\n\n    if (this.acc) {\n      return this.acc.getAddress()\n    }\n\n    const accounts = await this.params.web3.eth.getAccounts();\n\n    return accounts[0];\n  }\n\n  /**\n   * @function getEvents\n   * @description Gets contract events\n   * @returns {String | undefined} address\n   */\n  async getEvents(event, filter, fromBlock = null, toBlock = 'latest') {\n    if (!fromBlock) {\n      fromBlock = this.params.startBlock || 0;\n    }\n\n    if (!this.params.web3EventsProvider) {\n      const events = this.getContract().getPastEvents(event, {\n        fromBlock,\n        toBlock,\n        filter\n      });\n\n      return events;\n    }\n\n    // getting events via http from web3 events provide\n    let uri = `${this.params.web3EventsProvider}/events?contract=${this.contractName}&address=${this.getAddress()}&eventName=${event}`\n    if (filter) uri = uri.concat(`&filter=${JSON.stringify(filter)}`);\n\n    const { data } = await axios.get(uri);\n    return data;\n  }\n\n  /**\n   * @function getBlock\n   * @description Gets block details\n   * @returns {Object} block\n   */\n  async getBlock(blockNumber) {\n    return await this.params.web3.eth.getBlock(blockNumber);\n  }\n}\n\nmodule.exports = IContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PolkamarketsSmartAccount.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PolkamarketsSmartAccount.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { SmartAccount } = __webpack_require__(/*! @particle-network/aa */ \"(ssr)/./node_modules/@particle-network/aa/es/index.js\");\nconst ethers = (__webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.esm/index.js\").ethers);\n\nconst { ENTRYPOINT_ADDRESS_V06, providerToSmartAccountSigner } = __webpack_require__(/*! permissionless */ \"(ssr)/./node_modules/permissionless/_cjs/index.js\");\nconst { createPublicClient, http } = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_cjs/index.js\");\nconst { signerToSimpleSmartAccount } = __webpack_require__(/*! permissionless/accounts */ \"(ssr)/./node_modules/permissionless/_cjs/accounts/index.js\");\n\nclass PolkamarketsSmartAccount {\n\n  static PIMLICO_FACTORY_ADDRESS = '0x9406Cc6185a346906296840746125a0E44976454';\n  static THIRDWEB_FACTORY_ADDRESS = '0x85e23b94e7F5E9cC1fF78BCe78cfb15B81f0DF00';\n\n  static singleton = (() => {\n    let smartAccount;\n\n    function createInstance(provider, networkConfig, isConnectedWallet) {\n      const options = {\n        projectId: networkConfig.particleProjectId,\n        clientKey: networkConfig.particleClientKey,\n        appId: networkConfig.particleAppId,\n        aaOptions: {\n          accountContracts: {\n            SIMPLE: [{\n              version: '1.0.0',\n              chainIds: [networkConfig.chainId],\n            }],\n          }\n        },\n      };\n\n      const instance = new PolkamarketsSmartAccount();\n      instance.networkConfig = networkConfig;\n      instance.provider = provider\n      instance.isConnectedWallet = isConnectedWallet\n      if (!networkConfig.usePimlico && !networkConfig.useThirdWeb) {\n        instance.smartAccount = new SmartAccount(provider, options);\n        instance.smartAccount.setSmartAccountContract({ name: 'SIMPLE', version: '1.0.0' })\n      }\n      return instance;\n    }\n\n    return {\n      getInstance: (provider, networkConfig, isConnectedWallet) => {\n        if (!smartAccount) {\n          smartAccount = createInstance(provider, networkConfig, isConnectedWallet);\n        }\n        return smartAccount;\n      },\n      getInstanceIfExists: () => smartAccount,\n      clearInstance: () => {\n        smartAccount = null;\n      }\n    };\n  })();\n\n  async providerIsConnectedWallet() {\n    if (this.isConnectedWallet) {\n      const web3Provider = new ethers.providers.Web3Provider(this.provider)\n      const signer = web3Provider.getSigner()\n      const address = await signer.getAddress();\n\n      return { isConnectedWallet: true, address, signer };\n    }\n\n    return { isConnectedWallet: false, address: null, signer: null };\n  }\n\n  async getAddress() {\n    const { isConnectedWallet, address } = await this.providerIsConnectedWallet();\n    if (isConnectedWallet) {\n      return address;\n    }\n\n    if (this.networkConfig.useThirdWeb && this.networkConfig.isZkSync) {\n      if (this.provider.address) {\n        return this.provider.address;\n      } else if (this.provider.smartAccount) {\n        return this.provider.smartAccount.address;\n      }\n\n      return this.provider.getSigner().getAddress();\n    }\n\n    if (this.networkConfig.useThirdWeb && this.provider.adminAccount) {\n      // if exists adminAccount it means it's using thirdwebauth\n      return this.provider.smartAccount.address;\n    }\n\n    if (this.networkConfig.usePimlico || this.networkConfig.useThirdWeb) {\n      const publicClient = createPublicClient({\n        chain: this.networkConfig.viemChain,\n        transport: http(this.networkConfig.rpcUrl)\n      });\n\n      const smartAccountSigner = await providerToSmartAccountSigner(this.provider);\n\n      const smartAccount = await signerToSimpleSmartAccount(publicClient, {\n        signer: smartAccountSigner,\n        factoryAddress: this.networkConfig.factoryAddress || PolkamarketsSmartAccount.PIMLICO_FACTORY_ADDRESS,\n        entryPoint: ENTRYPOINT_ADDRESS_V06,\n      })\n\n      return smartAccount.address;\n    }\n\n    return this.smartAccount.getAddress();\n  }\n}\n\nmodule.exports = PolkamarketsSmartAccount;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvUG9sa2FtYXJrZXRzU21hcnRBY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFBLFFBQVEsZUFBZSxFQUFFLG1CQUFPLENBQUMsbUZBQXNCO0FBQ3ZELGVBQWUsMEZBQXdCOztBQUV2QyxRQUFRLHVEQUF1RCxFQUFFLG1CQUFPLENBQUMseUVBQWdCO0FBQ3pGLFFBQVEsMkJBQTJCLEVBQUUsbUJBQU8sQ0FBQyxxREFBTTtBQUNuRCxRQUFRLDZCQUE2QixFQUFFLG1CQUFPLENBQUMsMkZBQXlCOztBQUV4RTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELGtDQUFrQztBQUMxRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZTtBQUNmOztBQUVBLGFBQWE7QUFDYjs7QUFFQTtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL3BvbGthbWFya2V0cy1qcy9zcmMvbW9kZWxzL1BvbGthbWFya2V0c1NtYXJ0QWNjb3VudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFNtYXJ0QWNjb3VudCB9ID0gcmVxdWlyZSgnQHBhcnRpY2xlLW5ldHdvcmsvYWEnKTtcbmNvbnN0IGV0aGVycyA9IHJlcXVpcmUoJ2V0aGVycycpLmV0aGVycztcblxuY29uc3QgeyBFTlRSWVBPSU5UX0FERFJFU1NfVjA2LCBwcm92aWRlclRvU21hcnRBY2NvdW50U2lnbmVyIH0gPSByZXF1aXJlKCdwZXJtaXNzaW9ubGVzcycpO1xuY29uc3QgeyBjcmVhdGVQdWJsaWNDbGllbnQsIGh0dHAgfSA9IHJlcXVpcmUoJ3ZpZW0nKTtcbmNvbnN0IHsgc2lnbmVyVG9TaW1wbGVTbWFydEFjY291bnQgfSA9IHJlcXVpcmUoJ3Blcm1pc3Npb25sZXNzL2FjY291bnRzJyk7XG5cbmNsYXNzIFBvbGthbWFya2V0c1NtYXJ0QWNjb3VudCB7XG5cbiAgc3RhdGljIFBJTUxJQ09fRkFDVE9SWV9BRERSRVNTID0gJzB4OTQwNkNjNjE4NWEzNDY5MDYyOTY4NDA3NDYxMjVhMEU0NDk3NjQ1NCc7XG4gIHN0YXRpYyBUSElSRFdFQl9GQUNUT1JZX0FERFJFU1MgPSAnMHg4NWUyM2I5NGU3RjVFOWNDMWZGNzhCQ2U3OGNmYjE1QjgxZjBERjAwJztcblxuICBzdGF0aWMgc2luZ2xldG9uID0gKCgpID0+IHtcbiAgICBsZXQgc21hcnRBY2NvdW50O1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UocHJvdmlkZXIsIG5ldHdvcmtDb25maWcsIGlzQ29ubmVjdGVkV2FsbGV0KSB7XG4gICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBwcm9qZWN0SWQ6IG5ldHdvcmtDb25maWcucGFydGljbGVQcm9qZWN0SWQsXG4gICAgICAgIGNsaWVudEtleTogbmV0d29ya0NvbmZpZy5wYXJ0aWNsZUNsaWVudEtleSxcbiAgICAgICAgYXBwSWQ6IG5ldHdvcmtDb25maWcucGFydGljbGVBcHBJZCxcbiAgICAgICAgYWFPcHRpb25zOiB7XG4gICAgICAgICAgYWNjb3VudENvbnRyYWN0czoge1xuICAgICAgICAgICAgU0lNUExFOiBbe1xuICAgICAgICAgICAgICB2ZXJzaW9uOiAnMS4wLjAnLFxuICAgICAgICAgICAgICBjaGFpbklkczogW25ldHdvcmtDb25maWcuY2hhaW5JZF0sXG4gICAgICAgICAgICB9XSxcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICB9O1xuXG4gICAgICBjb25zdCBpbnN0YW5jZSA9IG5ldyBQb2xrYW1hcmtldHNTbWFydEFjY291bnQoKTtcbiAgICAgIGluc3RhbmNlLm5ldHdvcmtDb25maWcgPSBuZXR3b3JrQ29uZmlnO1xuICAgICAgaW5zdGFuY2UucHJvdmlkZXIgPSBwcm92aWRlclxuICAgICAgaW5zdGFuY2UuaXNDb25uZWN0ZWRXYWxsZXQgPSBpc0Nvbm5lY3RlZFdhbGxldFxuICAgICAgaWYgKCFuZXR3b3JrQ29uZmlnLnVzZVBpbWxpY28gJiYgIW5ldHdvcmtDb25maWcudXNlVGhpcmRXZWIpIHtcbiAgICAgICAgaW5zdGFuY2Uuc21hcnRBY2NvdW50ID0gbmV3IFNtYXJ0QWNjb3VudChwcm92aWRlciwgb3B0aW9ucyk7XG4gICAgICAgIGluc3RhbmNlLnNtYXJ0QWNjb3VudC5zZXRTbWFydEFjY291bnRDb250cmFjdCh7IG5hbWU6ICdTSU1QTEUnLCB2ZXJzaW9uOiAnMS4wLjAnIH0pXG4gICAgICB9XG4gICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGdldEluc3RhbmNlOiAocHJvdmlkZXIsIG5ldHdvcmtDb25maWcsIGlzQ29ubmVjdGVkV2FsbGV0KSA9PiB7XG4gICAgICAgIGlmICghc21hcnRBY2NvdW50KSB7XG4gICAgICAgICAgc21hcnRBY2NvdW50ID0gY3JlYXRlSW5zdGFuY2UocHJvdmlkZXIsIG5ldHdvcmtDb25maWcsIGlzQ29ubmVjdGVkV2FsbGV0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc21hcnRBY2NvdW50O1xuICAgICAgfSxcbiAgICAgIGdldEluc3RhbmNlSWZFeGlzdHM6ICgpID0+IHNtYXJ0QWNjb3VudCxcbiAgICAgIGNsZWFySW5zdGFuY2U6ICgpID0+IHtcbiAgICAgICAgc21hcnRBY2NvdW50ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9O1xuICB9KSgpO1xuXG4gIGFzeW5jIHByb3ZpZGVySXNDb25uZWN0ZWRXYWxsZXQoKSB7XG4gICAgaWYgKHRoaXMuaXNDb25uZWN0ZWRXYWxsZXQpIHtcbiAgICAgIGNvbnN0IHdlYjNQcm92aWRlciA9IG5ldyBldGhlcnMucHJvdmlkZXJzLldlYjNQcm92aWRlcih0aGlzLnByb3ZpZGVyKVxuICAgICAgY29uc3Qgc2lnbmVyID0gd2ViM1Byb3ZpZGVyLmdldFNpZ25lcigpXG4gICAgICBjb25zdCBhZGRyZXNzID0gYXdhaXQgc2lnbmVyLmdldEFkZHJlc3MoKTtcblxuICAgICAgcmV0dXJuIHsgaXNDb25uZWN0ZWRXYWxsZXQ6IHRydWUsIGFkZHJlc3MsIHNpZ25lciB9O1xuICAgIH1cblxuICAgIHJldHVybiB7IGlzQ29ubmVjdGVkV2FsbGV0OiBmYWxzZSwgYWRkcmVzczogbnVsbCwgc2lnbmVyOiBudWxsIH07XG4gIH1cblxuICBhc3luYyBnZXRBZGRyZXNzKCkge1xuICAgIGNvbnN0IHsgaXNDb25uZWN0ZWRXYWxsZXQsIGFkZHJlc3MgfSA9IGF3YWl0IHRoaXMucHJvdmlkZXJJc0Nvbm5lY3RlZFdhbGxldCgpO1xuICAgIGlmIChpc0Nvbm5lY3RlZFdhbGxldCkge1xuICAgICAgcmV0dXJuIGFkZHJlc3M7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMubmV0d29ya0NvbmZpZy51c2VUaGlyZFdlYiAmJiB0aGlzLm5ldHdvcmtDb25maWcuaXNaa1N5bmMpIHtcbiAgICAgIGlmICh0aGlzLnByb3ZpZGVyLmFkZHJlc3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdmlkZXIuYWRkcmVzcztcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wcm92aWRlci5zbWFydEFjY291bnQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvdmlkZXIuc21hcnRBY2NvdW50LmFkZHJlc3M7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3ZpZGVyLmdldFNpZ25lcigpLmdldEFkZHJlc3MoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5uZXR3b3JrQ29uZmlnLnVzZVRoaXJkV2ViICYmIHRoaXMucHJvdmlkZXIuYWRtaW5BY2NvdW50KSB7XG4gICAgICAvLyBpZiBleGlzdHMgYWRtaW5BY2NvdW50IGl0IG1lYW5zIGl0J3MgdXNpbmcgdGhpcmR3ZWJhdXRoXG4gICAgICByZXR1cm4gdGhpcy5wcm92aWRlci5zbWFydEFjY291bnQuYWRkcmVzcztcbiAgICB9XG5cbiAgICBpZiAodGhpcy5uZXR3b3JrQ29uZmlnLnVzZVBpbWxpY28gfHwgdGhpcy5uZXR3b3JrQ29uZmlnLnVzZVRoaXJkV2ViKSB7XG4gICAgICBjb25zdCBwdWJsaWNDbGllbnQgPSBjcmVhdGVQdWJsaWNDbGllbnQoe1xuICAgICAgICBjaGFpbjogdGhpcy5uZXR3b3JrQ29uZmlnLnZpZW1DaGFpbixcbiAgICAgICAgdHJhbnNwb3J0OiBodHRwKHRoaXMubmV0d29ya0NvbmZpZy5ycGNVcmwpXG4gICAgICB9KTtcblxuICAgICAgY29uc3Qgc21hcnRBY2NvdW50U2lnbmVyID0gYXdhaXQgcHJvdmlkZXJUb1NtYXJ0QWNjb3VudFNpZ25lcih0aGlzLnByb3ZpZGVyKTtcblxuICAgICAgY29uc3Qgc21hcnRBY2NvdW50ID0gYXdhaXQgc2lnbmVyVG9TaW1wbGVTbWFydEFjY291bnQocHVibGljQ2xpZW50LCB7XG4gICAgICAgIHNpZ25lcjogc21hcnRBY2NvdW50U2lnbmVyLFxuICAgICAgICBmYWN0b3J5QWRkcmVzczogdGhpcy5uZXR3b3JrQ29uZmlnLmZhY3RvcnlBZGRyZXNzIHx8IFBvbGthbWFya2V0c1NtYXJ0QWNjb3VudC5QSU1MSUNPX0ZBQ1RPUllfQUREUkVTUyxcbiAgICAgICAgZW50cnlQb2ludDogRU5UUllQT0lOVF9BRERSRVNTX1YwNixcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiBzbWFydEFjY291bnQuYWRkcmVzcztcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5zbWFydEFjY291bnQuZ2V0QWRkcmVzcygpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUG9sa2FtYXJrZXRzU21hcnRBY2NvdW50O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PolkamarketsSmartAccount.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketContract.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PredictionMarketContract.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const _ = __webpack_require__(/*! lodash */ \"(ssr)/./node_modules/lodash/lodash.js\");\nconst moment = __webpack_require__(/*! moment */ \"(ssr)/./node_modules/moment/moment.js\");\n\nconst prediction = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").prediction);\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nconst realitioLib = __webpack_require__(/*! @reality.eth/reality-eth-lib/formatters/question */ \"(ssr)/./node_modules/@reality.eth/reality-eth-lib/formatters/question.js\");\n\nconst actions = {\n  0: 'Buy',\n  1: 'Sell',\n  2: 'Add Liquidity',\n  3: 'Remove Liquidity',\n  4: 'Claim Winnings',\n  5: 'Claim Liquidity',\n  6: 'Claim Fees',\n  7: 'Claim Voided',\n}\n\n/**\n * PredictionMarket Contract Object\n * @constructor PredictionMarketContract\n * @param {Web3} web3\n * @param {Integer} decimals\n * @param {Address} contractAddress\n */\n\nclass PredictionMarketContract extends IContract {\n  constructor(params) {\n    super({ abi: prediction, ...params });\n    this.contractName = 'predictionMarket';\n  }\n\n  /* Get Functions */\n  /**\n   * @function getMinimumRequiredBalance\n   * @description Returns minimum required ERC20 balance to create markets\n   * @returns {Integer} requiredBalance\n   */\n  async getMinimumRequiredBalance() {\n    const requiredBalance = await this.params.contract\n      .getContract()\n      .methods\n      .requiredBalance()\n      .call();\n\n    return Numbers.fromDecimalsNumber(requiredBalance, 18)\n  }\n\n  /* Get Functions */\n  /**\n   * @function getFee\n   * @description Returns fee taken from every transaction to liquidity providers\n   * @returns {Integer} fee\n   */\n  async getFee() {\n    const fee = await this.params.contract\n      .getContract()\n      .methods\n      .fee()\n      .call();\n\n    return Numbers.fromDecimalsNumber(fee, 18)\n  }\n\n  /* Get Functions */\n  /**\n   * @function getMarkets\n   * @description Get Markets\n   * @returns {Integer | Array} Get Market Ids\n   */\n  async getMarkets() {\n    let res = await this.params.contract\n      .getContract()\n      .methods\n      .getMarkets()\n      .call();\n    return res.map((marketId) => Number(Numbers.fromHex(marketId)));\n  }\n\n  /**\n   * @function getMarketData\n   * @description Get getMarketData\n   * @param {Integer} marketId\n   * @returns {String} Market Name\n   * @returns {Integer} closeDateTime\n   * @returns {Integer} state\n   * @returns {Address} Oracle Address\n   * @returns {Integer} liquidity\n   * @returns {Array} outcomeIds\n   */\n  async getMarketData({ marketId }) {\n    const marketData = await this.params.contract.getContract().methods.getMarketData(marketId).call();\n    const outcomeIds = await this.__sendTx(this.getContract().methods.getMarketOutcomeIds(marketId), true);\n\n    return {\n      name: '', // TODO: remove; deprecated\n      closeDateTime: moment.unix(marketData[1]).format(\"YYYY-MM-DD HH:mm\"),\n      state: parseInt(marketData[0]),\n      oracleAddress: '0x0000000000000000000000000000000000000000',\n      liquidity: Numbers.fromDecimalsNumber(marketData[2], 18),\n      outcomeIds: outcomeIds.map((outcomeId) => Numbers.fromBigNumberToInteger(outcomeId, 18))\n    };\n  }\n\n  /**\n   * @function getOutcomeData\n   * @description Get Market Outcome Data\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @returns {String} name\n   * @returns {Integer} price\n   * @returns {Integer} sahres\n   */\n  async getOutcomeData({ marketId, outcomeId }) {\n    const outcomeData = await this.params.contract.getContract().methods.getMarketOutcomeData(marketId, outcomeId).call();\n\n    return {\n      name: '', // TODO: remove; deprecated\n      price: Numbers.fromDecimalsNumber(outcomeData[0], 18),\n      shares: Numbers.fromDecimalsNumber(outcomeData[1], 18),\n    };\n  }\n\n  /**\n   * @function getMarketDetails\n   * @description getMarketDetails\n   * @param {Integer} marketId\n   * @returns {String} name\n   * @returns {String} category\n   * @returns {String} subcategory\n   * @returns {String} image\n   * @returns {Array} outcomes\n   */\n  async getMarketDetails({ marketId }) {\n    const marketData = await this.params.contract.getContract().methods.getMarketData(marketId).call();\n    const outcomeIds = await this.__sendTx(this.getContract().methods.getMarketOutcomeIds(marketId), true);\n\n    const events = await this.getEvents('MarketCreated', { marketId });\n\n    if (events.length === 0) {\n      // legacy record, returning empty data\n      return { name: '', category: '', subcategory: '', image: '', outcomes: [] };\n    }\n\n    // parsing question with realitio standard\n    const question = realitioLib.populatedJSONForTemplate(\n      '{\"title\": \"%s\", \"type\": \"single-select\", \"outcomes\": [%s], \"category\": \"%s\", \"lang\": \"%s\"}',\n      events[0].returnValues.question\n    );\n\n    return {\n      name: question.title,\n      category: question.category.split(';')[0],\n      subcategory: question.category.split(';')[1],\n      outcomes: question.outcomes,\n      image: events[0].returnValues.image\n    };\n  }\n\n  async getMarketIdsFromQuestions({ questions }) {\n    const events = await this.getEvents('MarketCreated');\n\n    return events.filter((event) => {\n      return questions.includes(event.returnValues.question);\n    }).map((event) => event.returnValues.marketId);\n  }\n\n  /**\n   * @function getMarketQuestionId\n   * @description getMarketQuestionId\n   * @param {Integer} marketId\n   * @returns {Bytes32} questionId\n   */\n  async getMarketQuestionId({ marketId }) {\n    const marketAltData = await this.params.contract.getContract().methods.getMarketAltData(marketId).call();\n\n    return marketAltData[1];\n  }\n\n  /**\n   * @function getAverageOutcomeBuyPrice\n   * @description Calculates average buy price of market outcome based on user events\n   * @param {Array} events\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @returns {Integer} price\n   */\n  getAverageOutcomeBuyPrice({ events, marketId, outcomeId }) {\n    // filtering by marketId + outcomeId + buy action\n    events = events.filter(event => {\n      return (\n        event.action === 'Buy' &&\n        event.marketId === marketId &&\n        event.outcomeId === outcomeId\n      );\n    });\n\n    if (events.length === 0) return 0;\n\n    const totalShares = events.map(item => item.shares).reduce((prev, next) => prev + next);\n    const totalAmount = events.map(item => item.value).reduce((prev, next) => prev + next);\n\n    return totalAmount / totalShares;\n  }\n\n  /**\n   * @function getAverageAddLiquidityPrice\n   * @description Calculates average add liquidity of market outcome based on user events\n   * @param {Array} events\n   * @param {Integer} marketId\n   * @returns {Integer} price\n   */\n  getAverageAddLiquidityPrice({ events, marketId }) {\n    // filtering by marketId + add liquidity action\n    events = events.filter(event => {\n      return (\n        event.action === 'Add Liquidity' &&\n        event.marketId === marketId\n      );\n    });\n\n    if (events.length === 0) return 0;\n\n    const totalShares = events.map(item => item.shares).reduce((prev, next) => prev + next);\n    const totalAmount = events.map(item => item.value).reduce((prev, next) => prev + next);\n\n    return totalAmount / totalShares;\n  }\n\n  /**\n   * @function getMyPortfolio\n   * @description Get My Porfolio\n   * @returns {Array} Outcome Shares\n   */\n  async getMyPortfolio() {\n    const account = await this.getMyAccount();\n    if (!account) return [];\n\n    return this.getPortfolio({ user: account });\n  }\n\n  /**\n   * @function getPortfolio\n   * @description Get My Porfolio\n   * @param {Address} user\n   * @returns {Array} Outcome Shares\n   */\n  async getPortfolio({ user }) {\n    const events = await this.getActions({ user });\n    const allMarketIds = await this.getMarkets();\n    const userMarketIds = events.map(e => e.marketId).filter((x, i, a) => a.indexOf(x) == i);\n\n    return await allMarketIds.reduce(async (obj, marketId) => {\n      let portfolio;\n      if (!userMarketIds.includes(marketId)) {\n        // user did not interact with market, no need to fetch holdings\n        portfolio = {\n          liquidity: { shares: 0, price: 0 },\n          outcomes: {\n            0: { shares: 0, price: 0 },\n            1: { shares: 0, price: 0 },\n          },\n          claimStatus: {\n            winningsToClaim: false,\n            winningsClaimed: false,\n            liquidityToClaim: false,\n            liquidityClaimed: false,\n            liquidityFees: 0\n          }\n        };\n      } else {\n        const marketShares = await this.getContract().methods.getUserMarketShares(marketId, user).call();\n        let claimStatus;\n        try {\n          claimStatus = await this.getContract().methods.getUserClaimStatus(marketId, user).call();\n        } catch (err) {\n          // SafeMath subtraction overflow error from Moonriver deployment\n          if (err.message.includes('SafeMath: subtraction overflow')) {\n            claimStatus = [false, false, false, false, 0];\n\n            const marketData = await this.params.contract.getContract().methods.getMarketData(marketId).call();\n            if (parseInt(marketData[0]) === 2) {\n              // market resolved, computing if user has winnings to claim\n              claimStatus[0] = marketShares[parseInt(marketData[5]) + 1] > 0;\n              if (claimStatus[0]) {\n                const events = await this.getEvents('MarketActionTx', { marketId, user, action: 4 });\n                claimStatus[1] = events.length > 0;\n              }\n              claimStatus[2] = marketShares[0] > 0;\n              claimStatus[3] = claimStatus[2];\n            }\n          } else {\n            throw err;\n          }\n        }\n\n        portfolio = {\n          liquidity: {\n            shares: Numbers.fromDecimalsNumber(marketShares[0], 18),\n            price: this.getAverageAddLiquidityPrice({ events, marketId }),\n          },\n          outcomes: {\n            0: {\n              shares: Numbers.fromDecimalsNumber(marketShares[1], 18),\n              price: this.getAverageOutcomeBuyPrice({ events, marketId, outcomeId: 0 }),\n            },\n            1: {\n              shares: Numbers.fromDecimalsNumber(marketShares[2], 18),\n              price: this.getAverageOutcomeBuyPrice({ events, marketId, outcomeId: 1 }),\n            },\n          },\n          claimStatus: {\n            winningsToClaim: claimStatus[0],\n            winningsClaimed: claimStatus[1],\n            liquidityToClaim: claimStatus[2],\n            liquidityClaimed: claimStatus[3],\n            liquidityFees: Numbers.fromDecimalsNumber(claimStatus[4], 18)\n          }\n        };\n      }\n\n      return await {\n        ...(await obj),\n        [marketId]: portfolio,\n      };\n    }, {});\n  }\n\n  /**\n   * @function getMyMarketShares\n   * @description Get My Market Shares\n   * @param {Integer} marketId\n   * @returns {Integer} Liquidity Shares\n   * @returns {Array} Outcome Shares\n   */\n  async getMyMarketShares({ marketId }) {\n    const account = await this.getMyAccount();\n    if (!account) return [];\n\n    const marketShares = await this.getContract().methods.getUserMarketShares(marketId, account).call();\n\n    return {\n      liquidityShares: Numbers.fromDecimalsNumber(marketShares[0], 18),\n      outcomeShares: {\n        0: Numbers.fromDecimalsNumber(marketShares[1], 18),\n        1: Numbers.fromDecimalsNumber(marketShares[2], 18),\n      }\n    };\n  }\n\n  async getMyActions() {\n    const account = await this.getMyAccount();\n    if (!account) return [];\n\n    return this.getActions({ user: account });\n  }\n\n  async getActions({ user }) {\n    const events = await this.getEvents('MarketActionTx', { user });\n\n    // filtering by address\n    return events.map(event => {\n      return {\n        action: actions[Numbers.fromBigNumberToInteger(event.returnValues.action, 18)],\n        marketId: Numbers.fromBigNumberToInteger(event.returnValues.marketId, 18),\n        outcomeId: Numbers.fromBigNumberToInteger(event.returnValues.outcomeId, 18),\n        shares: Numbers.fromDecimalsNumber(event.returnValues.shares, 18),\n        value: Numbers.fromDecimalsNumber(event.returnValues.value, 18),\n        timestamp: Numbers.fromBigNumberToInteger(event.returnValues.timestamp, 18),\n        transactionHash: event.transactionHash,\n      }\n    });\n  }\n\n  /**\n   * @function getMarketOutcomePrice\n   * @description Get Market Price\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @return {Integer} price\n   */\n  async getMarketOutcomePrice({ marketId, outcomeId }) {\n    return Numbers.fromDecimals(\n      await this.__sendTx(\n        this.getContract().methods.getMarketOutcomePrice(marketId, outcomeId),\n        true\n      ),\n      18\n    );\n  }\n\n  /**\n   * @function getMarketPrices\n   * @description Get Market Price\n   * @param {Integer} marketId\n   * @return {Object} prices\n   */\n  async getMarketPrices({ marketId }) {\n    const marketPrices = await this.getContract().methods.getMarketPrices(marketId).call();\n\n    return {\n      liquidity: Numbers.fromDecimalsNumber(marketPrices[0], 18),\n      outcomes: {\n        0: Numbers.fromDecimalsNumber(marketPrices[1], 18),\n        1: Numbers.fromDecimalsNumber(marketPrices[2], 18)\n      }\n    };\n  }\n\n  /* POST User Functions */\n\n  /**\n   * @function createMarket\n   * @description Create a µarket\n   * @param {String} name\n   * @param {Integer} duration\n   * @param {Address} oracleAddress\n   * @param {String} outcome1Name\n   * @param {String} outcome2Name\n   * @param {Integer} ethAmount\n   */\n  async createMarket({ name, image, duration, oracleAddress, outcomes, category, ethAmount }) {\n    let ethToWei = Numbers.toSmartContractDecimals(ethAmount, 18);\n    const question = realitioLib.encodeText('single-select', name, outcomes, category);\n\n    return await this.__sendTx(\n      this.getContract().methods.createMarket(\n        question,\n        image,\n        duration,\n        oracleAddress,\n        outcomes.length\n      ),\n      false,\n      ethToWei\n    );\n  };\n\n  /**\n   * @function addLiquidity\n   * @description Add Liquidity from Market\n   * @param {Integer} marketId\n   * @param {Integer} ethAmount\n   */\n  async addLiquidity({ marketId, ethAmount }) {\n    let ethToWei = Numbers.toSmartContractDecimals(ethAmount, 18);\n    return await this.__sendTx(\n      this.getContract().methods.addLiquidity(marketId),\n      false,\n      ethToWei\n    );\n  };\n\n  /**\n   * @function removeLiquidity\n   * @description Remove Liquidity from Market\n   * @param {Integer} marketId\n   * @param {Integer} shares\n   */\n  async removeLiquidity({ marketId, shares }) {\n    shares = Numbers.toSmartContractDecimals(shares, 18);\n    return await this.__sendTx(\n      this.getContract().methods.removeLiquidity(marketId, shares)\n    );\n  };\n\n\n  /**\n   * @function buy\n   * @description Buy Shares of a Market Outcome\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @param {Integer} ethAmount\n   */\n  async buy({ marketId, outcomeId, ethAmount, minOutcomeSharesToBuy }) {\n    let ethToWei = Numbers.toSmartContractDecimals(ethAmount, 18);\n    minOutcomeSharesToBuy = Numbers.toSmartContractDecimals(minOutcomeSharesToBuy, 18);\n\n    return await this.__sendTx(\n      this.getContract().methods.buy(marketId, outcomeId, minOutcomeSharesToBuy),\n      false,\n      ethToWei\n    );\n  };\n\n  /**\n   * @function sell\n   * @description Sell Shares of a Market Outcome\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @param {Integer} shares\n   */\n  async sell({ marketId, outcomeId, ethAmount, maxOutcomeSharesToSell }) {\n    ethAmount = Numbers.toSmartContractDecimals(ethAmount, 18);\n    maxOutcomeSharesToSell = Numbers.toSmartContractDecimals(maxOutcomeSharesToSell, 18);\n    return await this.__sendTx(\n      this.getContract().methods.sell(marketId, outcomeId, ethAmount, maxOutcomeSharesToSell),\n      false,\n    );\n  };\n\n  async resolveMarketOutcome({ marketId }) {\n    return await this.__sendTx(\n      this.getContract().methods.resolveMarketOutcome(marketId),\n      false,\n    );\n  };\n\n  async claimWinnings({ marketId }) {\n    return await this.__sendTx(\n      this.getContract().methods.claimWinnings(marketId),\n      false,\n    );\n  };\n\n  async claimVoidedOutcomeShares({ marketId, outcomeId }) {\n    return await this.__sendTx(\n      this.getContract().methods.claimVoidedOutcomeShares(marketId, outcomeId),\n      false,\n    );\n  };\n\n  async claimLiquidity({ marketId }) {\n    return await this.__sendTx(\n      this.getContract().methods.claimLiquidity(marketId),\n      false,\n    );\n  };\n\n  async calcBuyAmount({ marketId, outcomeId, ethAmount }) {\n    ethAmount = Numbers.toSmartContractDecimals(ethAmount, 18);\n\n    const amount = await this.getContract()\n      .methods.calcBuyAmount(\n        ethAmount,\n        marketId,\n        outcomeId\n      )\n      .call();\n\n    return Numbers.fromDecimalsNumber(amount, 18);\n  }\n\n  async calcSellAmount({ marketId, outcomeId, ethAmount }) {\n    ethAmount = Numbers.toSmartContractDecimals(ethAmount, 18);\n\n    const amount = await this.getContract()\n      .methods.calcSellAmount(\n        ethAmount,\n        marketId,\n        outcomeId\n      )\n      .call();\n\n    return Numbers.fromDecimalsNumber(amount, 18);\n  }\n}\n\nmodule.exports = PredictionMarketContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV2Contract.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PredictionMarketV2Contract.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const _ =  __webpack_require__(/*! lodash */ \"(ssr)/./node_modules/lodash/lodash.js\");\nconst moment = __webpack_require__(/*! moment */ \"(ssr)/./node_modules/moment/moment.js\");\n\nconst prediction = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").predictionV2);\nconst ierc20 = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").ierc20);\n\nconst Numbers = __webpack_require__( /*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__( /*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nconst ERC20Contract = __webpack_require__(/*! ./ERC20Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/ERC20Contract.js\");\n\nconst realitioLib = __webpack_require__(/*! @reality.eth/reality-eth-lib/formatters/question */ \"(ssr)/./node_modules/@reality.eth/reality-eth-lib/formatters/question.js\");\n\nclass PredictionMarketV2Contract extends IContract {\n  static ACTIONS = {\n    0: 'Buy',\n    1: 'Sell',\n    2: 'Add Liquidity',\n    3: 'Remove Liquidity',\n    4: 'Claim Winnings',\n    5: 'Claim Liquidity',\n    6: 'Claim Fees',\n    7: 'Claim Voided',\n  };\n\n  constructor(params) {\n    super({...params, abi: params.abi || prediction});\n    this.contractName = 'predictionMarketV2';\n  }\n\n  /* Get Functions */\n  /**\n   * @function getMinimumRequiredBalance\n   * @description Returns minimum required ERC20 balance to create markets\n   * @returns {Integer} requiredBalance\n   */\n  async getMinimumRequiredBalance() {\n    const requiredBalance = await this.params.contract\n      .getContract()\n      .methods\n      .requiredBalance()\n      .call();\n\n    const requiredBalanceToken = await this.params.contract\n      .getContract()\n      .methods\n      .requiredBalanceToken()\n      .call();\n\n    const decimals = await this.getTokenDecimals({ contractAddress: requiredBalanceToken });\n\n    return Numbers.fromDecimalsNumber(requiredBalance, decimals)\n  }\n\n    /**\n   * @function getWETHAddress\n   * @description Returns WETH Address\n   * @returns {address}\n   */\n  async getWETHAddress() {\n    const WETHAddress = await this.params.contract.getContract().methods.WETH().call();\n\n    return WETHAddress;\n  }\n\n  /* Get Functions */\n  /**\n   * @function getMarkets\n   * @description Get Markets\n   * @returns {Integer | Array} Get Market Ids\n   */\n  async getMarkets() {\n    let res = await this.params.contract\n      .getContract()\n      .methods\n      .getMarkets()\n      .call();\n    return res.map((marketId) => Number(Numbers.fromHex(marketId)));\n  }\n\n  /**\n   * @function getMarketData\n   * @description Get getMarketData\n   * @param {Integer} marketId\n   * @returns {String} Market Name\n   * @returns {Integer} closeDateTime\n   * @returns {Integer} state\n   * @returns {Address} Oracle Address\n   * @returns {Integer} liquidity\n   * @returns {Array} outcomeIds\n   */\n  async getMarketData({marketId}) {\n    const marketData = await this.params.contract.getContract().methods.getMarketData(marketId).call();\n    const outcomeIds = await this.params.contract.getContract().methods.getMarketOutcomeIds(marketId).call();\n    const decimals = await this.getMarketDecimals({marketId});\n    const state = parseInt(marketData[0]);\n    const resolvedOutcomeId = parseInt(marketData[5]);\n\n    return {\n      closeDateTime: moment.unix(marketData[1]).format(\"YYYY-MM-DD HH:mm\"),\n      state,\n      oracleAddress: '0x0000000000000000000000000000000000000000',\n      liquidity: Numbers.fromDecimalsNumber(marketData[2], decimals),\n      outcomeIds: outcomeIds.map((outcomeId) => Numbers.fromBigNumberToInteger(outcomeId, 18)),\n      resolvedOutcomeId,\n      voided: state === 2 && !outcomeIds.includes(resolvedOutcomeId)\n    };\n  }\n\n  /**\n   * @function getOutcomeData\n   * @description Get Market Outcome Data\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @returns {String} name\n   * @returns {Integer} price\n   * @returns {Integer} sahres\n   */\n  async getOutcomeData({marketId, outcomeId}) {\n    const outcomeData = await this.params.contract.getContract().methods.getMarketOutcomeData(marketId, outcomeId).call();\n    const decimals = await this.getMarketDecimals({marketId});\n\n    return {\n      name: '', // TODO: remove; deprecated\n      price: Numbers.fromDecimalsNumber(outcomeData[0], 18),\n      shares: Numbers.fromDecimalsNumber(outcomeData[1], decimals),\n    };\n  }\n\n  /**\n   * @function getMarketDetails\n   * @description getMarketDetails\n   * @param {Integer} marketId\n   * @returns {String} name\n   * @returns {String} category\n   * @returns {String} subcategory\n   * @returns {String} image\n   * @returns {Array} outcomes\n   */\n  async getMarketDetails({marketId}) {\n    const marketData = await this.params.contract.getContract().methods.getMarketData(marketId).call();\n    const outcomeIds = await this.__sendTx(this.getContract().methods.getMarketOutcomeIds(marketId), true);\n\n    const events = await this.getEvents('MarketCreated', { marketId });\n\n    if (events.length === 0) {\n      // legacy record, returning empty data\n      return { name: '', category: '', subcategory: '', image: '', outcomes: [] };\n    }\n\n    // parsing question with realitio standard\n    const question = realitioLib.populatedJSONForTemplate(\n      '{\"title\": \"%s\", \"type\": \"single-select\", \"outcomes\": [%s], \"category\": \"%s\", \"lang\": \"%s\"}',\n      events[0].returnValues.question\n    );\n\n    // splitting name and description with the first occurrence of ';' character\n    const name = question.title.split(';')[0];\n    const description = question.title.split(';').slice(1).join(';');\n\n    return {\n      name,\n      description,\n      category: question.category.split(';')[0],\n      subcategory: question.category.split(';')[1],\n      outcomes: question.outcomes,\n      image: events[0].returnValues.image\n    };\n  }\n\n  async getMarketIdsFromQuestions({questions}) {\n    const events = await this.getEvents('MarketCreated');\n\n    return events.filter((event) => {\n      return questions.includes(event.returnValues.question);\n    }).map((event) => event.returnValues.marketId);\n  }\n\n  /**\n   * @function getMarketQuestionId\n   * @description getMarketQuestionId\n   * @param {Integer} marketId\n   * @returns {Bytes32} questionId\n   */\n  async getMarketQuestionId({marketId}) {\n    const marketAltData = await this.params.contract.getContract().methods.getMarketAltData(marketId).call();\n\n    return marketAltData[1];\n  }\n\n  /**\n   * @function getAverageOutcomeBuyPrice\n   * @description Calculates average buy price of market outcome based on user events\n   * @param {Array} events\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @returns {Integer} price\n   */\n  getAverageOutcomeBuyPrice({ events, marketId, outcomeId }) {\n    let totalShares = 0;\n    let totalAmount = 0;\n  \n    events.forEach((event) => {\n      if (event.marketId === marketId && event.outcomeId === outcomeId) {\n        if (event.action === \"Buy\") {\n          totalShares += event.shares;\n          totalAmount += event.value;\n        } else if (event.action === \"Sell\") {\n          const proportion = event.shares / totalShares;\n          totalShares -= event.shares;\n          totalAmount *= 1 - proportion;\n        }\n      }\n    });\n  \n    return totalShares && totalAmount\n      ? totalAmount / totalShares\n      : 0;\n  }\n\n  /**\n   * @function getAverageAddLiquidityPrice\n   * @description Calculates average add liquidity of market outcome based on user events\n   * @param {Array} events\n   * @param {Integer} marketId\n   * @returns {Integer} price\n   */\n   getAverageAddLiquidityPrice({events, marketId}) {\n    // filtering by marketId + add liquidity action\n    events = events.filter(event => {\n      return (\n        event.action === 'Add Liquidity' &&\n        event.marketId === marketId\n      );\n    });\n\n    if (events.length === 0) return 0;\n\n    const totalShares = events.map(item => item.shares).reduce((prev, next) => prev + next);\n    const totalAmount = events.map(item => item.value).reduce((prev, next) => prev + next);\n\n    return totalAmount / totalShares;\n  }\n\n  /**\n   * @function isMarketERC20TokenWrapped\n   * @description Checks if market ERC20 token is wrapped\n   * @param {Integer} marketId\n   * @returns {Boolean} boolean\n   */\n  async isMarketERC20TokenWrapped({marketId}) {\n    const WETHAddress = await this.params.contract.getContract().methods.WETH().call();\n    const marketAltData = await this.params.contract.getContract().methods.getMarketAltData(marketId).call();\n\n    return marketAltData[3] === WETHAddress;\n  }\n\n  /**\n   * @function getMyPortfolio\n   * @description Get My Porfolio\n   * @returns {Array} Outcome Shares\n   */\n  async getMyPortfolio() {\n    const account = await this.getMyAccount();\n    if (!account) return [];\n\n    return this.getPortfolio({ user: account });\n  }\n\n  /**\n   * @function getPortfolio\n   * @description Get My Porfolio\n   * @param {Address} user\n   * @returns {Array} Outcome Shares\n   */\n  async getPortfolio({ user }) {\n    const allMarketIds = await this.getMarkets();\n    let userMarketIds;\n    let events = [];\n    try {\n      events = await this.getActions({ user });\n      userMarketIds = events.map(e => e.marketId).filter((x, i, a) => a.indexOf(x) == i);\n    } catch (err) {\n      // defaulting to allMarketIds if query fails\n      userMarketIds = allMarketIds;\n    }\n\n    let voidedMarketIds = [];\n    // fetching voided markets\n    try {\n      // TODO: improve this\n      const marketsCreated = await this.getEvents('MarketCreated');\n      const marketsResolved = await this.getEvents('MarketResolved');\n\n      voidedMarketIds = marketsResolved.filter((event) => {\n        const resolvedOutcomeId = parseInt(event.returnValues.outcomeId);\n        const outcomeCount = marketsCreated.find((market) =>  {\n          return market.returnValues.marketId === event.returnValues.marketId\n        }).returnValues.outcomes;\n\n        return resolvedOutcomeId >= outcomeCount;\n      }).map((event) => parseInt(event.returnValues.marketId));\n    } catch (err) {\n      // skipping voided markets if query fails\n    }\n\n    return await allMarketIds.reduce(async (obj, marketId) => {\n      let portfolio;\n      if (!userMarketIds.includes(marketId)) {\n        // user did not interact with market, no need to fetch holdings\n        portfolio = {\n          liquidity: { shares: 0, price: 0 },\n          outcomes: {\n            0: { shares: 0, price: 0 },\n            1: { shares: 0, price: 0 },\n          },\n          claimStatus: {\n            winningsToClaim: false,\n            winningsClaimed: false,\n            liquidityToClaim: false,\n            liquidityClaimed: false,\n            voidedWinningsToClaim: false,\n            voidedWinningsClaimed: false,\n            liquidityFees: 0\n          }\n        };\n      } else {\n        const decimals = await this.getMarketDecimals({marketId});\n        const marketShares = await this.getContract().methods.getUserMarketShares(marketId, user).call();\n        const claimStatus = await this.getContract().methods.getUserClaimStatus(marketId, user).call();\n\n        const outcomeShares = Object.fromEntries(marketShares[1].map((item, index) => {\n          return [\n            index,\n            {\n              shares: Numbers.fromDecimalsNumber(item, decimals),\n              price: this.getAverageOutcomeBuyPrice({events, marketId, outcomeId: index})\n            }\n          ];\n        }));\n\n        const voidedWinningsToClaim = voidedMarketIds.includes(marketId) && marketShares[1].some(item => item > 0);\n        const voidedWinningsClaimed = voidedWinningsToClaim && events.some(event => event.action === 'Claim Voided' && event.marketId === marketId);\n\n        portfolio = {\n          liquidity: {\n            shares: Numbers.fromDecimalsNumber(marketShares[0], decimals),\n            price: this.getAverageAddLiquidityPrice({events, marketId}),\n          },\n          outcomes: outcomeShares,\n          claimStatus: {\n            winningsToClaim: claimStatus[0],\n            winningsClaimed: claimStatus[1],\n            liquidityToClaim: claimStatus[2],\n            liquidityClaimed: claimStatus[3],\n            voidedWinningsToClaim,\n            voidedWinningsClaimed,\n            liquidityFees: Numbers.fromDecimalsNumber(claimStatus[4], decimals)\n          }\n        };\n      }\n\n      return await {\n        ...(await obj),\n        [marketId]: portfolio,\n      };\n    }, {});\n  }\n\n  /**\n   * @function getMyMarketShares\n   * @description Get My Market Shares\n   * @param {Integer} marketId\n   * @returns {Integer} Liquidity Shares\n   * @returns {Array} Outcome Shares\n   */\n  async getMyMarketShares({marketId}) {\n    const account = await this.getMyAccount();\n    if (!account) return [];\n\n    const decimals = await this.getMarketDecimals({marketId});\n    const marketShares = await this.getContract().methods.getUserMarketShares(marketId, account).call();\n    const outcomeShares = Object.fromEntries(marketShares[1].map((item, index) => [index, Numbers.fromDecimalsNumber(item, decimals)] ));\n\n    return  {\n      liquidityShares: Numbers.fromDecimalsNumber(marketShares[0], decimals),\n      outcomeShares\n    };\n  }\n\n  async getMyActions() {\n    const account = await this.getMyAccount();\n    if (!account) return [];\n\n    return this.getActions({ user: account });\n  }\n\n  async getActions({ user }) {\n    const events = await this.getEvents('MarketActionTx', { user });\n\n    // fetching decimals for each market (unique)\n    const marketIds = events.map(event => event.returnValues.marketId).filter((x, i, a) => a.indexOf(x) == i);\n    const marketDecimals = await Promise.all(marketIds.map(marketId => this.getMarketDecimals({marketId})));\n\n    // filtering by address\n    return events.map(event => {\n      const decimals = marketDecimals[marketIds.indexOf(event.returnValues.marketId)];\n\n      return {\n        action: this.constructor.ACTIONS[Numbers.fromBigNumberToInteger(event.returnValues.action, 18)],\n        marketId: Numbers.fromBigNumberToInteger(event.returnValues.marketId, 18),\n        outcomeId: Numbers.fromBigNumberToInteger(event.returnValues.outcomeId, 18),\n        shares: Numbers.fromDecimalsNumber(event.returnValues.shares, decimals),\n        value: Numbers.fromDecimalsNumber(event.returnValues.value, decimals),\n        timestamp: Numbers.fromBigNumberToInteger(event.returnValues.timestamp, 18),\n        transactionHash: event.transactionHash,\n      }\n    });\n  }\n\n  /**\n   * @function getMarketOutcomePrice\n   * @description Get Market Price\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @return {Integer} price\n   */\n  async getMarketOutcomePrice({marketId, outcomeId}) {\n    return Numbers.fromDecimals(\n      await this.__sendTx(\n        this.getContract().methods.getMarketOutcomePrice(marketId, outcomeId),\n        true\n      ),\n      18\n    );\n  }\n\n  /**\n   * @function getMarketPrices\n   * @description Get Market Price\n   * @param {Integer} marketId\n   * @return {Object} prices\n   */\n  async getMarketPrices({marketId}) {\n    const marketPrices = await this.getContract().methods.getMarketPrices(marketId).call();\n\n    return {\n      liquidity: Numbers.fromDecimalsNumber(marketPrices[0], 18),\n      outcomes: Object.fromEntries(marketPrices[1].map((item, index) => [index, Numbers.fromDecimalsNumber(item, 18)] ))\n    };\n  }\n\n  /**\n   * @function getMarketShares\n   * @description Get Market Shares\n   * @param {Integer} marketId\n   * @return {Object} shares\n   */\n  async getMarketShares({marketId}) {\n    const decimals = await this.getMarketDecimals({marketId});\n    const marketShares = await this.getContract().methods.getMarketShares(marketId).call();\n\n    return {\n      liquidity: Numbers.fromDecimalsNumber(marketShares[0], decimals),\n      outcomes: Object.fromEntries(marketShares[1].map((item, index) => [index, Numbers.fromDecimalsNumber(item, decimals)] ))\n    };\n  }\n\n  /**\n   * @function getTokenDecimals\n   * @description Get Token Decimals\n   * @param {address} contractAddress\n   * @return {Integer} decimals\n   */\n  async getTokenDecimals({contractAddress}) {\n    try {\n      const erc20Contract = new ERC20Contract({ ...this.params, contractAddress, abi: ierc20 });\n\n      return await erc20Contract.getDecimalsAsync();\n    } catch (err) {\n      // defaulting to 18 decimals\n      return 18;\n    }\n  }\n\n  /**\n   * @function getMarketDecimals\n   * @description Get Market Decimals\n   * @param {Integer} marketId\n   * @return {Integer} decimals\n   */\n  async getMarketDecimals({marketId}) {\n    if (this.marketDecimals && this.marketDecimals[marketId]) {\n      return this.marketDecimals[marketId];\n    }\n    if (this.defaultDecimals) {\n      return this.defaultDecimals;\n    }\n\n    const marketAltData = await this.params.contract.getContract().methods.getMarketAltData(marketId).call();\n    const contractAddress = marketAltData[3];\n\n    return await this.getTokenDecimals({ contractAddress });\n  }\n\n  /**\n   * @function prepareCreateMarketDescription\n   * @description Prepare createMarket function call args\n   */\n  async prepareCreateMarketDescription({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    token,\n    odds = [],\n    fee = 0,\n    treasuryFee = 0,\n    treasury = '0x0000000000000000000000000000000000000000',\n  }) {\n    const decimals = await this.getTokenDecimals({ contractAddress: token });\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n    const title = `${name};${description}`;\n    const question = realitioLib.encodeText('single-select', title, outcomes, category);\n    let distribution = [];\n\n    if (odds.length > 0) {\n      if (odds.length !== outcomes.length) {\n        throw new Error('Odds and outcomes must have the same length');\n      }\n\n      const oddsSum = odds.reduce((a, b) => a + b, 0);\n      // odds must match 100 (0.1 margin)\n      if (oddsSum < 99.9 || oddsSum > 100.1) {\n        throw new Error('Odds must sum 100');\n      }\n\n      distribution = this.calcDistribution({ odds });\n    }\n\n    return {\n      value: valueToWei,\n      closesAt: duration,\n      outcomes: outcomes.length,\n      token,\n      distribution,\n      question,\n      image,\n      arbitrator: oracleAddress,\n      fee,\n      treasuryFee,\n      treasury,\n    };\n  }\n\n  /* POST User Functions */\n  /**\n   * @function createMarket\n   * @description Create a µarket\n   * @param {Integer} value\n   * @param {String} name\n   * @param {Integer} duration\n   * @param {Address} oracleAddress\n   * @param {Array} outcomes\n   */\n  async createMarket ({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    token,\n    odds = [],\n    fee = 0,\n    treasuryFee = 0,\n    treasury = '0x0000000000000000000000000000000000000000',\n  }) {\n    const desc = await this.prepareCreateMarketDescription({\n      value,\n      name,\n      description,\n      image,\n      duration,\n      oracleAddress,\n      outcomes,\n      category,\n      token,\n      odds,\n      fee,\n      treasuryFee,\n      treasury,\n    });\n\n    return await this.__sendTx(this.getContract().methods.createMarket(desc));\n  };\n\n/**\n   * @function createMarketWithETH\n   * @description Create a market\n   * @param {Integer} value\n   * @param {String} name\n   * @param {Integer} duration\n   * @param {Address} oracleAddress\n   * @param {Array} outcomes\n   */\n  async createMarketWithETH ({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    odds = [],\n    fee = 0,\n    treasuryFee = 0,\n    treasury = '0x0000000000000000000000000000000000000000',\n  }) {\n    const token = await this.getWETHAddress();\n    const desc = await this.prepareCreateMarketDescription({\n      value,\n      name,\n      description,\n      image,\n      duration,\n      oracleAddress,\n      outcomes,\n      category,\n      token,\n      odds,\n      fee,\n      treasuryFee,\n      treasury,\n    });\n\n    return await this.__sendTx(\n      this.getContract().methods.createMarketWithETH(desc),\n      false,\n      desc.value\n    );\n  };\n\n  /**\n   * @function addLiquidity\n   * @description Add Liquidity from Market\n   * @param {Integer} marketId\n   * @param {Integer} value\n   */\n  async addLiquidity({marketId, value, wrapped = false}) {\n    const decimals = await this.getMarketDecimals({marketId});\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n\n    if (wrapped) {\n      return await this.__sendTx(\n        this.getContract().methods.addLiquidityWithETH(marketId),\n        false,\n        valueToWei\n      );\n    }\n\n    return await this.__sendTx(\n      this.getContract().methods.addLiquidity(marketId, valueToWei),\n    );\n  };\n\n  /**\n   * @function removeLiquidity\n   * @description Remove Liquidity from Market\n   * @param {Integer} marketId\n   * @param {Integer} shares\n   */\n  async removeLiquidity({marketId, shares, wrapped = false}) {\n    const decimals = await this.getMarketDecimals({marketId});\n    shares = Numbers.toSmartContractDecimals(shares, decimals);\n\n    if (wrapped) {\n      return await this.__sendTx(\n        this.getContract().methods.removeLiquidityToETH(marketId, shares),\n        null\n      );\n    }\n\n    return await this.__sendTx(\n      this.getContract().methods.removeLiquidity(marketId, shares)\n    );\n  };\n\n  /**\n   * @function buy\n   * @description Buy Shares of a Market Outcome\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @param {Integer} value\n   */\n  async buy ({ marketId, outcomeId, value, minOutcomeSharesToBuy, wrapped = false}) {\n    const decimals = await this.getMarketDecimals({marketId});\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n    minOutcomeSharesToBuy = Numbers.toSmartContractDecimals(minOutcomeSharesToBuy, decimals);\n\n    if (wrapped) {\n      return await this.__sendTx(\n        this.getContract().methods.buyWithETH(marketId, outcomeId, minOutcomeSharesToBuy),\n        false,\n        valueToWei,\n      );\n    }\n\n    return await this.__sendTx(\n      this.getContract().methods.buy(marketId, outcomeId, minOutcomeSharesToBuy, valueToWei),\n    );\n  };\n\n  /**\n   * @function sell\n   * @description Sell Shares of a Market Outcome\n   * @param {Integer} marketId\n   * @param {Integer} outcomeId\n   * @param {Integer} shares\n   */\n  async sell({marketId, outcomeId, value, maxOutcomeSharesToSell, wrapped = false}) {\n    const decimals = await this.getMarketDecimals({marketId});\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n    maxOutcomeSharesToSell = Numbers.toSmartContractDecimals(maxOutcomeSharesToSell, decimals);\n\n    if (wrapped) {\n      return await this.__sendTx(\n        this.getContract().methods.sellToETH(marketId, outcomeId, valueToWei, maxOutcomeSharesToSell),\n        false,\n      );\n    }\n\n    return await this.__sendTx(\n      this.getContract().methods.sell(marketId, outcomeId, valueToWei, maxOutcomeSharesToSell),\n    );\n  };\n\n  async resolveMarketOutcome({marketId}) {\n    return await this.__sendTx(\n      this.getContract().methods.resolveMarketOutcome(marketId),\n      false,\n    );\n  };\n\n  async claimWinnings({marketId, wrapped = false}) {\n    if (wrapped) {\n      return await this.__sendTx(\n        this.getContract().methods.claimWinningsToETH(marketId),\n        false,\n      );\n    }\n\n    return await this.__sendTx(\n      this.getContract().methods.claimWinnings(marketId),\n      false,\n    );\n  };\n\n  async claimVoidedOutcomeShares({marketId, outcomeId, wrapped = false}) {\n    if (wrapped) {\n      return await this.__sendTx(\n        this.getContract().methods.claimVoidedOutcomeSharesToETH(marketId, outcomeId),\n        false,\n      );\n    }\n\n    return await this.__sendTx(\n      this.getContract().methods.claimVoidedOutcomeShares(marketId, outcomeId),\n      false,\n    );\n  };\n\n  async claimLiquidity({marketId}) {\n    return await this.__sendTx(\n      this.getContract().methods.claimLiquidity(marketId),\n      false,\n    );\n  };\n\n  async calcBuyAmount({ marketId, outcomeId, value }) {\n    const decimals = await this.getMarketDecimals({marketId});\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n\n    const amount = await this.getContract()\n      .methods.calcBuyAmount(\n        valueToWei,\n        marketId,\n        outcomeId\n      )\n      .call();\n\n    return Numbers.fromDecimalsNumber(amount, decimals);\n  }\n\n  async calcSellAmount({ marketId, outcomeId, value }) {\n    const decimals = await this.getMarketDecimals({marketId});\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n\n    const amount = await this.getContract()\n      .methods.calcSellAmount(\n        valueToWei,\n        marketId,\n        outcomeId\n      )\n      .call();\n\n    return Numbers.fromDecimalsNumber(amount, decimals);\n  }\n\n  calcDistribution({ odds }) {\n    const distribution = [];\n    const prod = odds.reduce((a, b) => a * b, 1);\n\n    for (let i = 0; i < odds.length; i++) {\n      distribution.push((Math.round(prod / odds[i] * 1000000)).toString());\n    }\n\n    return distribution;\n  }\n}\n\nmodule.exports = PredictionMarketV2Contract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV2Contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3Contract.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PredictionMarketV3Contract.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const predictionV3 = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").predictionV3);\nconst PredictionMarketV2Contract = __webpack_require__(/*! ./PredictionMarketV2Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV2Contract.js\");\nconst PredictionMarketV3QuerierContract = __webpack_require__(/*! ./PredictionMarketV3QuerierContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3QuerierContract.js\");\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\n\nclass PredictionMarketV3Contract extends PredictionMarketV2Contract {\n  constructor(params) {\n    super({ abi: predictionV3, ...params });\n    this.contractName = 'predictionMarketV3';\n    if (params.defaultDecimals) {\n      this.defaultDecimals = params.defaultDecimals;\n    }\n    if (params.querierContractAddress) {\n      this.querier = new PredictionMarketV3QuerierContract({\n        ...this.params,\n        contractAddress: params.querierContractAddress\n      });\n    }\n    this.marketDecimals = {};\n  }\n\n  async mintAndCreateMarket ({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    token,\n    odds = [],\n    fee = 0,\n    treasuryFee = 0,\n    treasury = '0x0000000000000000000000000000000000000000',\n    realitioAddress,\n    realitioTimeout,\n    PM3ManagerAddress\n  }) {\n    const desc = await this.prepareCreateMarketDescription({\n      value,\n      name,\n      description,\n      image,\n      duration,\n      oracleAddress,\n      outcomes,\n      category,\n      token,\n      odds,\n      fee,\n      treasuryFee,\n      treasury,\n    });\n\n    return await this.__sendTx(this.getContract().methods.mintAndCreateMarket({\n      ...desc,\n      realitio: realitioAddress,\n      realitioTimeout,\n      manager: PM3ManagerAddress\n    }));\n  };\n\n  async createMarket ({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    token,\n    odds = [],\n    fee = 0,\n    treasuryFee = 0,\n    treasury = '0x0000000000000000000000000000000000000000',\n    realitioAddress,\n    realitioTimeout,\n    PM3ManagerAddress\n  }) {\n    const desc = await this.prepareCreateMarketDescription({\n      value,\n      name,\n      description,\n      image,\n      duration,\n      oracleAddress,\n      outcomes,\n      category,\n      token,\n      odds,\n      fee,\n      treasuryFee,\n      treasury,\n    });\n\n    return await this.__sendTx(this.getContract().methods.createMarket({\n      ...desc,\n      realitio: realitioAddress,\n      realitioTimeout,\n      manager: PM3ManagerAddress\n    }));\n  };\n\n  async createMarketWithETH ({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    odds = [],\n    fee = 0,\n    treasuryFee = 0,\n    treasury = '0x0000000000000000000000000000000000000000',\n    realitioAddress,\n    realitioTimeout,\n    PM3ManagerAddress\n  }) {\n    const token = await this.getWETHAddress();\n    const desc = await this.prepareCreateMarketDescription({\n      value,\n      name,\n      description,\n      image,\n      duration,\n      oracleAddress,\n      outcomes,\n      category,\n      token,\n      odds,\n      fee,\n      treasuryFee,\n      treasury,\n    });\n\n    return await this.__sendTx(\n        this.getContract().methods.createMarketWithETH({\n          ...desc,\n          realitio: realitioAddress,\n          realitioTimeout,\n          manager: PM3ManagerAddress\n        }),\n        false,\n        desc.value\n      );\n  };\n\n  async adminResolveMarketOutcome({marketId, outcomeId}) {\n    return await this.__sendTx(\n      this.getContract().methods.adminResolveMarketOutcome(marketId, outcomeId),\n      false,\n    );\n  };\n\n  async getPortfolio({ user }) {\n    if (!this.querier) {\n      return super.getPortfolio({ user });\n    }\n\n    let events = [];\n    try {\n      events = await this.getActions({ user });\n    } catch (err) {\n      // should be non-blocking\n    }\n\n    const chunkSize = 250;\n    let userMarketsData;\n\n    // chunking data to avoid out of gas errors\n    const marketIndex = await this.getMarketIndex();\n\n    if (marketIndex > chunkSize) {\n      const chunks = Math.ceil(marketIndex / chunkSize);\n      const promises = Array.from({ length: chunks }, async (_, i) => {\n        const marketIds = Array.from({ length: chunkSize }, (_, j) => i * chunkSize + j).filter(id => id < marketIndex);\n        const chunkMarketData = await this.querier.getUserMarketsData({ user, marketIds });\n        return chunkMarketData;\n      });\n      const chunksData = await Promise.all(promises);\n      // concatenating all arrays into a single one\n      userMarketsData = chunksData.reduce((obj, chunk) => [...obj, ...chunk], []);\n    } else {\n      userMarketsData = await this.querier.getUserAllMarketsData({ user });\n    }\n\n    const marketIds = Object.keys(userMarketsData).map(Number);\n    // fetching all markets decimals asynchrounously\n    const marketDecimals = await this.getMarketsERC20Decimals({ marketIds });\n\n    const portfolio = marketIds.reduce((obj, marketId) => {\n      const marketData = userMarketsData[marketId];\n      const decimals = marketDecimals[marketId];\n\n      const outcomeShares = Object.fromEntries(marketData.outcomeShares.map((item, index) => {\n      const shares = Numbers.fromDecimalsNumber(item, decimals);\n      const price = this.getAverageOutcomeBuyPrice({events, marketId, outcomeId: index});\n      const voidedWinningsToClaim = marketData.voidedSharesToClaim && shares > 0;\n      const voidedWinningsClaimed = voidedWinningsToClaim && events.some((event) => {\n        return event.action === 'Claim Voided' &&\n          event.marketId === marketId &&\n          event.outcomeId === index\n        });\n        return [\n          index,\n          {\n            shares,\n            price,\n            voidedWinningsToClaim,\n            voidedWinningsClaimed\n          }\n        ];\n      }));\n\n      const item = {\n        liquidity: {\n          shares: Numbers.fromDecimalsNumber(marketData.liquidityShares, decimals),\n          price: this.getAverageAddLiquidityPrice({events, marketId}),\n        },\n        outcomes: outcomeShares,\n        claimStatus: {\n          winningsToClaim: marketData.winningsToClaim,\n          winningsClaimed: marketData.winningsClaimed,\n          liquidityToClaim: marketData.liquidityToClaim,\n          liquidityClaimed: marketData.liquidityClaimed,\n          voidedWinningsToClaim: marketData.voidedSharesToClaim,\n          voidedWinningsClaimed: false,\n          liquidityFees: 0 // discontinued\n        }\n      };\n\n      return {\n        ...obj,\n        [marketId]: item\n      };\n    }, {});\n\n    // calculationg voidedWinningsClaimed, if there's any voidedWinningsToClaim\n    Object.keys(portfolio).map(Number).forEach(marketId => {\n      const item = portfolio[marketId];\n      if (item.claimStatus.voidedWinningsToClaim) {\n        item.claimStatus.voidedWinningsClaimed =\n          events.some(event => event.action === 'Claim Voided' && event.marketId === marketId);\n      }\n    });\n\n    return portfolio;\n  };\n\n  async adminResolveMarketOutcome({marketId, outcomeId}) {\n    return await this.__sendTx(\n      this.getContract().methods.adminResolveMarketOutcome(marketId, outcomeId),\n      false,\n    );\n  }\n\n  async getMarketIndex() {\n    return parseInt(await this.getContract().methods.marketIndex().call());\n  }\n\n  async getMarketsPrices({ marketIds }) {\n    if (!this.querier) {\n      const marketPrices = await Promise.all(marketIds.map(marketId => this.getMarketPrices({ marketId })));\n\n      return Object.fromEntries(marketIds.map((marketId, index) => [marketId, marketPrices[index]]));\n    }\n\n    const chunkSize = 250;\n    let marketsPrices;\n\n    // chunking data to avoid out of gas errors\n    if (marketIds.length > chunkSize) {\n      const chunks = Math.ceil(marketIds.length / chunkSize);\n      const promises = Array.from({ length: chunks }, async (_, i) => {\n        const chunkMarketIds = marketIds.slice(i * chunkSize, i * chunkSize + chunkSize);\n        const chunkMarketPrices = await this.querier.getMarketsPrices({ marketIds: chunkMarketIds });\n        return chunkMarketPrices;\n      });\n      const chunksData = await Promise.all(promises);\n      // concatenating all arrays into a single one\n      marketsPrices = chunksData.reduce((obj, chunk) => [...obj, ...chunk], []);\n    } else {\n      marketsPrices = await this.querier.getMarketsPrices({ marketIds });\n    }\n\n    return marketIds.reduce((obj, marketId) => {\n      const index = marketIds.indexOf(marketId);\n      const marketData = marketsPrices[index];\n      // market prices decimals are always 18, don't depend on the erc20 decimals\n      const decimals = 18;\n\n      return {\n        ...obj,\n        [marketId]: {\n          liquidity: Numbers.fromDecimalsNumber(marketData.liquidityPrice, decimals),\n          outcomes: Object.fromEntries(marketData.outcomePrices.map((item, index) => {\n            return [index, Numbers.fromDecimalsNumber(item, decimals)];\n          }))\n        }\n      };\n    });\n  }\n\n  async getMarketsERC20Decimals({ marketIds }) {\n    if (!this.querier) {\n      let marketERC20Decimals = {};\n\n      for(let i = 0; i < marketIds.length; i++) {\n        const marketId = marketIds[i];\n        const decimals = await this.getMarketERC20Decimals({ marketId });\n        marketERC20Decimals[marketId] = decimals;\n      }\n      return marketERC20Decimals;\n    }\n\n    const chunkSize = 250;\n    let marketsDecimals;\n\n    // chunking data to avoid out of gas errors\n    if (marketIds.length > chunkSize) {\n      const chunks = Math.ceil(marketIds.length / chunkSize);\n      const promises = Array.from({ length: chunks }, async (_, i) => {\n        const chunkMarketIds = marketIds.slice(i * chunkSize, i * chunkSize + chunkSize);\n        const chunkMarketDecimals = await this.querier.getMarketsERC20Decimals({ marketIds: chunkMarketIds });\n        return chunkMarketDecimals;\n      });\n      const chunksData = await Promise.all(promises);\n      // concatenating all arrays into a single one\n      marketsDecimals = chunksData.reduce((obj, chunk) => [...obj, ...chunk], []);\n    } else {\n      marketsDecimals = await this.querier.getMarketsERC20Decimals({ marketIds });\n    }\n\n    // storing in instance var\n    this.marketDecimals = { ...this.marketDecimals, ...marketsDecimals };\n\n    return Object.fromEntries(marketIds.map((marketId, index) => [marketId, marketsDecimals[index]]));\n  }\n\n  async getActions({ user }) {\n    if (!this.querier) {\n      return super.getActions({ user });\n    }\n\n    const events = await this.getEvents('MarketActionTx', { user });\n\n    // fetching decimals for each market (unique)\n    const marketIds = events.map(event => event.returnValues.marketId).filter((x, i, a) => a.indexOf(x) == i);\n    const marketDecimals = await this.getMarketsERC20Decimals({ marketIds });\n\n    // filtering by address\n    return events.map(event => {\n      const decimals = marketDecimals[event.returnValues.marketId];\n\n      return {\n        action: this.constructor.ACTIONS[Numbers.fromBigNumberToInteger(event.returnValues.action, 18)],\n        marketId: Numbers.fromBigNumberToInteger(event.returnValues.marketId, 18),\n        outcomeId: Numbers.fromBigNumberToInteger(event.returnValues.outcomeId, 18),\n        shares: Numbers.fromDecimalsNumber(event.returnValues.shares, decimals),\n        value: Numbers.fromDecimalsNumber(event.returnValues.value, decimals),\n        timestamp: Numbers.fromBigNumberToInteger(event.returnValues.timestamp, 18),\n        transactionHash: event.transactionHash,\n      }\n    });\n  }\n}\n\nmodule.exports = PredictionMarketV3Contract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3Contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3ControllerContract.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PredictionMarketV3ControllerContract.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nconst predictionV3Controller = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").predictionV3Controller);\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\n\nclass PredictionMarketV3ControllerContract extends IContract {\n  constructor(params) {\n    super({ abi: predictionV3Controller, ...params });\n    this.contractName = 'PredictionMarketV3Controller';\n  }\n\n  async getLandById({ id }) {\n    const token = await this.getContract().methods.landTokens(id).call();\n\n    return await this.getLandByAddress({ token });\n  }\n\n  async getLandByAddress({ token }) {\n    const res = await this.getContract().methods.lands(token).call();\n    const landPermissions = await this.getContract().methods.landPermissions(token).call();\n\n    return {\n      token: res.token,\n      active: res.active,\n      realitio: res.realitio,\n      everyoneCanCreateMarkets: landPermissions.openMarketCreation\n    }\n  }\n\n  async getLandTokensLength() {\n    const index = await this.getContract().methods.landTokensLength().call();\n\n    return parseInt(index);\n  }\n\n  async isAllowedToCreateMarket({ token, user }) {\n    return await this.params.contract.getContract().methods.isAllowedToCreateMarket(token, user).call();\n  }\n\n  async isAllowedToEditMarket({ token, user }) {\n    return await this.params.contract.getContract().methods.isAllowedToEditMarket(token, user).call();\n  }\n\n  async isIERC20TokenSocial({ token }) {\n    return await this.params.contract.getContract().methods.isIERC20TokenSocial(token, user).call();\n  }\n\n  async isLandAdmin({ token, user }) {\n    return await this.params.contract.getContract().methods.isLandAdmin(token, user).call();\n  }\n\n  async createLand({ name, symbol, tokenAmountToClaim, tokenToAnswer, everyoneCanCreateMarkets }) {\n    const transaction = await this.__sendTx(\n      this.getContract().methods.createLand(\n        name,\n        symbol,\n        Numbers.toSmartContractDecimals(tokenAmountToClaim, 18),\n        tokenToAnswer\n      )\n    );\n\n    const token = transaction.events.LandCreated[0].returnValues.token;\n\n    // fetching land on index\n    const land = await this.getLandByAddress({ token });\n\n    if (everyoneCanCreateMarkets) {\n      await this.__sendTx(\n        this.getContract().methods.setLandEveryoneCanCreateMarkets(land.token, everyoneCanCreateMarkets)\n      );\n    }\n\n    return land;\n  };\n\n  async disableLand({ token }) {\n    return await this.__sendTx(\n      this.getContract().methods.disableLand(token)\n    );\n  }\n\n  async enableLand({ token }) {\n    return await this.__sendTx(\n      this.getContract().methods.enableLand(token)\n    );\n  }\n\n  async addAdminToLand({ token, user }) {\n    return await this.__sendTx(\n      this.getContract().methods.addAdminToLand(token, user)\n    );\n  }\n\n  async removeAdminFromLand({ token, user }) {\n    return await this.__sendTx(\n      this.getContract().methods.removeAdminFromLand(token, user)\n    );\n  }\n}\n\nmodule.exports = PredictionMarketV3ControllerContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvUHJlZGljdGlvbk1hcmtldFYzQ29udHJvbGxlckNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFhOztBQUV2QywrQkFBK0IsaUlBQStDOztBQUU5RSxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBa0I7O0FBRTFDO0FBQ0E7QUFDQSxZQUFZLHdDQUF3QztBQUNwRDtBQUNBOztBQUVBLHNCQUFzQixJQUFJO0FBQzFCOztBQUVBLHlDQUF5QyxPQUFPO0FBQ2hEOztBQUVBLDJCQUEyQixPQUFPO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGtDQUFrQyxhQUFhO0FBQy9DO0FBQ0E7O0FBRUEsZ0NBQWdDLGFBQWE7QUFDN0M7QUFDQTs7QUFFQSw4QkFBOEIsT0FBTztBQUNyQztBQUNBOztBQUVBLHNCQUFzQixhQUFhO0FBQ25DO0FBQ0E7O0FBRUEscUJBQXFCLDJFQUEyRTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsK0NBQStDLE9BQU87O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxzQkFBc0IsT0FBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsT0FBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIsYUFBYTtBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4QkFBOEIsYUFBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvc3JjL21vZGVscy9QcmVkaWN0aW9uTWFya2V0VjNDb250cm9sbGVyQ29udHJhY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSUNvbnRyYWN0ID0gcmVxdWlyZSgnLi9JQ29udHJhY3QnKTtcblxuY29uc3QgcHJlZGljdGlvblYzQ29udHJvbGxlciA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzXCIpLnByZWRpY3Rpb25WM0NvbnRyb2xsZXI7XG5cbmNvbnN0IE51bWJlcnMgPSByZXF1aXJlKCcuLi91dGlscy9OdW1iZXJzJyk7XG5cbmNsYXNzIFByZWRpY3Rpb25NYXJrZXRWM0NvbnRyb2xsZXJDb250cmFjdCBleHRlbmRzIElDb250cmFjdCB7XG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgIHN1cGVyKHsgYWJpOiBwcmVkaWN0aW9uVjNDb250cm9sbGVyLCAuLi5wYXJhbXMgfSk7XG4gICAgdGhpcy5jb250cmFjdE5hbWUgPSAnUHJlZGljdGlvbk1hcmtldFYzQ29udHJvbGxlcic7XG4gIH1cblxuICBhc3luYyBnZXRMYW5kQnlJZCh7IGlkIH0pIHtcbiAgICBjb25zdCB0b2tlbiA9IGF3YWl0IHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmxhbmRUb2tlbnMoaWQpLmNhbGwoKTtcblxuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldExhbmRCeUFkZHJlc3MoeyB0b2tlbiB9KTtcbiAgfVxuXG4gIGFzeW5jIGdldExhbmRCeUFkZHJlc3MoeyB0b2tlbiB9KSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMubGFuZHModG9rZW4pLmNhbGwoKTtcbiAgICBjb25zdCBsYW5kUGVybWlzc2lvbnMgPSBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5sYW5kUGVybWlzc2lvbnModG9rZW4pLmNhbGwoKTtcblxuICAgIHJldHVybiB7XG4gICAgICB0b2tlbjogcmVzLnRva2VuLFxuICAgICAgYWN0aXZlOiByZXMuYWN0aXZlLFxuICAgICAgcmVhbGl0aW86IHJlcy5yZWFsaXRpbyxcbiAgICAgIGV2ZXJ5b25lQ2FuQ3JlYXRlTWFya2V0czogbGFuZFBlcm1pc3Npb25zLm9wZW5NYXJrZXRDcmVhdGlvblxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldExhbmRUb2tlbnNMZW5ndGgoKSB7XG4gICAgY29uc3QgaW5kZXggPSBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5sYW5kVG9rZW5zTGVuZ3RoKCkuY2FsbCgpO1xuXG4gICAgcmV0dXJuIHBhcnNlSW50KGluZGV4KTtcbiAgfVxuXG4gIGFzeW5jIGlzQWxsb3dlZFRvQ3JlYXRlTWFya2V0KHsgdG9rZW4sIHVzZXIgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuaXNBbGxvd2VkVG9DcmVhdGVNYXJrZXQodG9rZW4sIHVzZXIpLmNhbGwoKTtcbiAgfVxuXG4gIGFzeW5jIGlzQWxsb3dlZFRvRWRpdE1hcmtldCh7IHRva2VuLCB1c2VyIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmlzQWxsb3dlZFRvRWRpdE1hcmtldCh0b2tlbiwgdXNlcikuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgaXNJRVJDMjBUb2tlblNvY2lhbCh7IHRva2VuIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmlzSUVSQzIwVG9rZW5Tb2NpYWwodG9rZW4sIHVzZXIpLmNhbGwoKTtcbiAgfVxuXG4gIGFzeW5jIGlzTGFuZEFkbWluKHsgdG9rZW4sIHVzZXIgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuaXNMYW5kQWRtaW4odG9rZW4sIHVzZXIpLmNhbGwoKTtcbiAgfVxuXG4gIGFzeW5jIGNyZWF0ZUxhbmQoeyBuYW1lLCBzeW1ib2wsIHRva2VuQW1vdW50VG9DbGFpbSwgdG9rZW5Ub0Fuc3dlciwgZXZlcnlvbmVDYW5DcmVhdGVNYXJrZXRzIH0pIHtcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5jcmVhdGVMYW5kKFxuICAgICAgICBuYW1lLFxuICAgICAgICBzeW1ib2wsXG4gICAgICAgIE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHModG9rZW5BbW91bnRUb0NsYWltLCAxOCksXG4gICAgICAgIHRva2VuVG9BbnN3ZXJcbiAgICAgIClcbiAgICApO1xuXG4gICAgY29uc3QgdG9rZW4gPSB0cmFuc2FjdGlvbi5ldmVudHMuTGFuZENyZWF0ZWRbMF0ucmV0dXJuVmFsdWVzLnRva2VuO1xuXG4gICAgLy8gZmV0Y2hpbmcgbGFuZCBvbiBpbmRleFxuICAgIGNvbnN0IGxhbmQgPSBhd2FpdCB0aGlzLmdldExhbmRCeUFkZHJlc3MoeyB0b2tlbiB9KTtcblxuICAgIGlmIChldmVyeW9uZUNhbkNyZWF0ZU1hcmtldHMpIHtcbiAgICAgIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnNldExhbmRFdmVyeW9uZUNhbkNyZWF0ZU1hcmtldHMobGFuZC50b2tlbiwgZXZlcnlvbmVDYW5DcmVhdGVNYXJrZXRzKVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbGFuZDtcbiAgfTtcblxuICBhc3luYyBkaXNhYmxlTGFuZCh7IHRva2VuIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmRpc2FibGVMYW5kKHRva2VuKVxuICAgICk7XG4gIH1cblxuICBhc3luYyBlbmFibGVMYW5kKHsgdG9rZW4gfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuZW5hYmxlTGFuZCh0b2tlbilcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgYWRkQWRtaW5Ub0xhbmQoeyB0b2tlbiwgdXNlciB9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5hZGRBZG1pblRvTGFuZCh0b2tlbiwgdXNlcilcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgcmVtb3ZlQWRtaW5Gcm9tTGFuZCh7IHRva2VuLCB1c2VyIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnJlbW92ZUFkbWluRnJvbUxhbmQodG9rZW4sIHVzZXIpXG4gICAgKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFByZWRpY3Rpb25NYXJrZXRWM0NvbnRyb2xsZXJDb250cmFjdDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3ControllerContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3FactoryContract.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PredictionMarketV3FactoryContract.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nconst predictionMarketFactory = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").predictionMarketV3Factory);\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\n\nclass PredictionMarketV3FactoryContract extends IContract {\n  constructor(params) {\n    super({ abi: predictionMarketFactory, ...params });\n    this.contractName = 'PredictionMarketFactory';\n  }\n\n  async getPMControllerById({ id }) {\n    const controllerAddress = await this.getPMControllerAddressById({ id });\n\n    return await this.getPMControllerByAddress({ controllerAddress });\n  }\n\n  async getPMControllerAddressById({ id }) {\n    return this.getContract().methods.controllersAddresses(id).call();\n  }\n\n  async getPMControllerByAddress({ controllerAddress }) {\n    const res = await this.getContract().methods.controllers(controllerAddress).call();\n\n    return {\n      active: res.active,\n      lockAmount: Numbers.fromDecimalsNumber(res.lockAmount, 18),\n      lockUser: res.lockUser,\n    }\n  }\n\n  async getControllersLength() {\n    const index = await this.getContract().methods.controllersLength().call();\n\n    return parseInt(index);\n  }\n\n  async isPMControllerAdmin({ controllerAddress, user }) {\n    return await this.params.contract.getContract().methods.isPMControllerAdmin(controllerAddress, user).call();\n  }\n\n  async lockAmount() {\n    const amount = await this.params.contract.getContract().methods.lockAmount().call();\n    // TODO: fetch ERC20 decimals\n    return Numbers.fromDecimalsNumber(amount, 18);\n  }\n\n  async updateLockAmount({ amount }) {\n    return await this.__sendTx(\n      this.getContract().methods.updateLockAmount(Numbers.toSmartContractDecimals(amount, 18))\n    );\n  }\n\n  async createPMController({\n    PMV3,\n  }) {\n    return await this.__sendTx(\n      this.getContract().methods.createPMController(\n        PMV3,\n      )\n    );\n  };\n\n  async disablePMController({ controllerAddress }) {\n    return await this.__sendTx(\n      this.getContract().methods.disablePMController(controllerAddress)\n    );\n  }\n\n  async enablePMController({ controllerAddress }) {\n    return await this.__sendTx(\n      this.getContract().methods.enablePMController(controllerAddress)\n    );\n  }\n\n  async unlockOffsetFromPMController({ controllerAddress }) {\n    return await this.__sendTx(\n      this.getContract().methods.unlockOffsetFromPMController(controllerAddress)\n    );\n  }\n\n  async addAdminToPMController({ controllerAddress, user }) {\n    return await this.__sendTx(\n      this.getContract().methods.addAdminToPMController(controllerAddress, user)\n    );\n  }\n\n  async removeAdminFromPMController({ controllerAddress, user }) {\n    return await this.__sendTx(\n      this.getContract().methods.removeAdminFromPMController(controllerAddress, user)\n    );\n  }\n}\n\nmodule.exports = PredictionMarketV3FactoryContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvUHJlZGljdGlvbk1hcmtldFYzRmFjdG9yeUNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFhOztBQUV2QyxnQ0FBZ0Msb0lBQWtEOztBQUVsRixnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBa0I7O0FBRTFDO0FBQ0E7QUFDQSxZQUFZLHlDQUF5QztBQUNyRDtBQUNBOztBQUVBLDhCQUE4QixJQUFJO0FBQ2xDLHNFQUFzRSxJQUFJOztBQUUxRSxpREFBaUQsbUJBQW1CO0FBQ3BFOztBQUVBLHFDQUFxQyxJQUFJO0FBQ3pDO0FBQ0E7O0FBRUEsbUNBQW1DLG1CQUFtQjtBQUN0RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDhCQUE4Qix5QkFBeUI7QUFDdkQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDhCQUE4QixtQkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkJBQTZCLG1CQUFtQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1Q0FBdUMsbUJBQW1CO0FBQzFEO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQyx5QkFBeUI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0NBQXNDLHlCQUF5QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvc3JjL21vZGVscy9QcmVkaWN0aW9uTWFya2V0VjNGYWN0b3J5Q29udHJhY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSUNvbnRyYWN0ID0gcmVxdWlyZSgnLi9JQ29udHJhY3QnKTtcblxuY29uc3QgcHJlZGljdGlvbk1hcmtldEZhY3RvcnkgPSByZXF1aXJlKFwiLi4vaW50ZXJmYWNlc1wiKS5wcmVkaWN0aW9uTWFya2V0VjNGYWN0b3J5O1xuXG5jb25zdCBOdW1iZXJzID0gcmVxdWlyZSgnLi4vdXRpbHMvTnVtYmVycycpO1xuXG5jbGFzcyBQcmVkaWN0aW9uTWFya2V0VjNGYWN0b3J5Q29udHJhY3QgZXh0ZW5kcyBJQ29udHJhY3Qge1xuICBjb25zdHJ1Y3RvcihwYXJhbXMpIHtcbiAgICBzdXBlcih7IGFiaTogcHJlZGljdGlvbk1hcmtldEZhY3RvcnksIC4uLnBhcmFtcyB9KTtcbiAgICB0aGlzLmNvbnRyYWN0TmFtZSA9ICdQcmVkaWN0aW9uTWFya2V0RmFjdG9yeSc7XG4gIH1cblxuICBhc3luYyBnZXRQTUNvbnRyb2xsZXJCeUlkKHsgaWQgfSkge1xuICAgIGNvbnN0IGNvbnRyb2xsZXJBZGRyZXNzID0gYXdhaXQgdGhpcy5nZXRQTUNvbnRyb2xsZXJBZGRyZXNzQnlJZCh7IGlkIH0pO1xuXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0UE1Db250cm9sbGVyQnlBZGRyZXNzKHsgY29udHJvbGxlckFkZHJlc3MgfSk7XG4gIH1cblxuICBhc3luYyBnZXRQTUNvbnRyb2xsZXJBZGRyZXNzQnlJZCh7IGlkIH0pIHtcbiAgICByZXR1cm4gdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuY29udHJvbGxlcnNBZGRyZXNzZXMoaWQpLmNhbGwoKTtcbiAgfVxuXG4gIGFzeW5jIGdldFBNQ29udHJvbGxlckJ5QWRkcmVzcyh7IGNvbnRyb2xsZXJBZGRyZXNzIH0pIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5jb250cm9sbGVycyhjb250cm9sbGVyQWRkcmVzcykuY2FsbCgpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGFjdGl2ZTogcmVzLmFjdGl2ZSxcbiAgICAgIGxvY2tBbW91bnQ6IE51bWJlcnMuZnJvbURlY2ltYWxzTnVtYmVyKHJlcy5sb2NrQW1vdW50LCAxOCksXG4gICAgICBsb2NrVXNlcjogcmVzLmxvY2tVc2VyLFxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldENvbnRyb2xsZXJzTGVuZ3RoKCkge1xuICAgIGNvbnN0IGluZGV4ID0gYXdhaXQgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuY29udHJvbGxlcnNMZW5ndGgoKS5jYWxsKCk7XG5cbiAgICByZXR1cm4gcGFyc2VJbnQoaW5kZXgpO1xuICB9XG5cbiAgYXN5bmMgaXNQTUNvbnRyb2xsZXJBZG1pbih7IGNvbnRyb2xsZXJBZGRyZXNzLCB1c2VyIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmlzUE1Db250cm9sbGVyQWRtaW4oY29udHJvbGxlckFkZHJlc3MsIHVzZXIpLmNhbGwoKTtcbiAgfVxuXG4gIGFzeW5jIGxvY2tBbW91bnQoKSB7XG4gICAgY29uc3QgYW1vdW50ID0gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmxvY2tBbW91bnQoKS5jYWxsKCk7XG4gICAgLy8gVE9ETzogZmV0Y2ggRVJDMjAgZGVjaW1hbHNcbiAgICByZXR1cm4gTnVtYmVycy5mcm9tRGVjaW1hbHNOdW1iZXIoYW1vdW50LCAxOCk7XG4gIH1cblxuICBhc3luYyB1cGRhdGVMb2NrQW1vdW50KHsgYW1vdW50IH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnVwZGF0ZUxvY2tBbW91bnQoTnVtYmVycy50b1NtYXJ0Q29udHJhY3REZWNpbWFscyhhbW91bnQsIDE4KSlcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgY3JlYXRlUE1Db250cm9sbGVyKHtcbiAgICBQTVYzLFxuICB9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5jcmVhdGVQTUNvbnRyb2xsZXIoXG4gICAgICAgIFBNVjMsXG4gICAgICApXG4gICAgKTtcbiAgfTtcblxuICBhc3luYyBkaXNhYmxlUE1Db250cm9sbGVyKHsgY29udHJvbGxlckFkZHJlc3MgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuZGlzYWJsZVBNQ29udHJvbGxlcihjb250cm9sbGVyQWRkcmVzcylcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgZW5hYmxlUE1Db250cm9sbGVyKHsgY29udHJvbGxlckFkZHJlc3MgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuZW5hYmxlUE1Db250cm9sbGVyKGNvbnRyb2xsZXJBZGRyZXNzKVxuICAgICk7XG4gIH1cblxuICBhc3luYyB1bmxvY2tPZmZzZXRGcm9tUE1Db250cm9sbGVyKHsgY29udHJvbGxlckFkZHJlc3MgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMudW5sb2NrT2Zmc2V0RnJvbVBNQ29udHJvbGxlcihjb250cm9sbGVyQWRkcmVzcylcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgYWRkQWRtaW5Ub1BNQ29udHJvbGxlcih7IGNvbnRyb2xsZXJBZGRyZXNzLCB1c2VyIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmFkZEFkbWluVG9QTUNvbnRyb2xsZXIoY29udHJvbGxlckFkZHJlc3MsIHVzZXIpXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIHJlbW92ZUFkbWluRnJvbVBNQ29udHJvbGxlcih7IGNvbnRyb2xsZXJBZGRyZXNzLCB1c2VyIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnJlbW92ZUFkbWluRnJvbVBNQ29udHJvbGxlcihjb250cm9sbGVyQWRkcmVzcywgdXNlcilcbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHJlZGljdGlvbk1hcmtldFYzRmFjdG9yeUNvbnRyYWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3FactoryContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3ManagerContract.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PredictionMarketV3ManagerContract.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nconst predictionV3Manager = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").predictionV3Manager);\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\n\nclass PredictionMarketV3ManagerContract extends IContract {\n  constructor(params) {\n    super({ abi: predictionV3Manager, ...params });\n    this.contractName = 'PredictionMarketV3Manager';\n  }\n\n  async getLandById({ id }) {\n    const token = await this.getContract().methods.landTokens(id).call();\n\n    return await this.getLandByAddress({ token });\n  }\n\n  async getLandByAddress({ token }) {\n    const res = await this.getContract().methods.lands(token).call();\n\n    return {\n      token: res.token,\n      active: res.active,\n      lockAmount: Numbers.fromDecimalsNumber(res.lockAmount, 18),\n      lockUser: res.lockUser,\n      realitio: res.realitio,\n    }\n  }\n\n  async getLandTokensLength() {\n    const index = await this.getContract().methods.landTokensLength().call();\n\n    return parseInt(index);\n  }\n\n  async isAllowedToCreateMarket({ token, user }) {\n    return await this.params.contract.getContract().methods.isAllowedToCreateMarket(token, user).call();\n  }\n\n  async isAllowedToResolveMarket({ token, user }) {\n    return await this.params.contract.getContract().methods.isAllowedToResolveMarket(token, user).call();\n  }\n\n  async isAllowedToEditMarket({ token, user }) {\n    return await this.params.contract.getContract().methods.isAllowedToEditMarket(token, user).call();\n  }\n\n  async isIERC20TokenSocial({ token }) {\n    return await this.params.contract.getContract().methods.isIERC20TokenSocial(token, user).call();\n  }\n\n  async isLandAdmin({ token, user }) {\n    return await this.params.contract.getContract().methods.isLandAdmin(token, user).call();\n  }\n\n  async lockAmount() {\n    const amount = await this.params.contract.getContract().methods.lockAmount().call();\n    // TODO: fetch ERC20 decimals\n    return Numbers.fromDecimalsNumber(amount, 18);\n  }\n\n  async lockToken() {\n    return await this.params.contract.getContract().methods.token().call();\n  }\n\n  async updateLockAmount({ amount }) {\n    return await this.__sendTx(\n      this.getContract().methods.updateLockAmount(Numbers.toSmartContractDecimals(amount, 18))\n    );\n  }\n\n  async createLand({ name, symbol, tokenAmountToClaim, tokenToAnswer }) {\n    return await this.__sendTx(\n      this.getContract().methods.createLand(\n        name,\n        symbol,\n        Numbers.toSmartContractDecimals(tokenAmountToClaim, 18),\n        tokenToAnswer\n      )\n    );\n  };\n\n  async disableLand({ token }) {\n    return await this.__sendTx(\n      this.getContract().methods.disableLand(token)\n    );\n  }\n\n  async enableLand({ token }) {\n    return await this.__sendTx(\n      this.getContract().methods.enableLand(token)\n    );\n  }\n\n  async unlockOffsetFromLand({ token }) {\n    return await this.__sendTx(\n      this.getContract().methods.unlockOffsetFromLand(token)\n    );\n  }\n\n  async addAdminToLand({ token, user }) {\n    return await this.__sendTx(\n      this.getContract().methods.addAdminToLand(token, user)\n    );\n  }\n\n  async removeAdminFromLand({ token, user }) {\n    return await this.__sendTx(\n      this.getContract().methods.removeAdminFromLand(token, user)\n    );\n  }\n}\n\nmodule.exports = PredictionMarketV3ManagerContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvUHJlZGljdGlvbk1hcmtldFYzTWFuYWdlckNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFhOztBQUV2Qyw0QkFBNEIsOEhBQTRDOztBQUV4RSxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBa0I7O0FBRTFDO0FBQ0E7QUFDQSxZQUFZLHFDQUFxQztBQUNqRDtBQUNBOztBQUVBLHNCQUFzQixJQUFJO0FBQzFCOztBQUVBLHlDQUF5QyxPQUFPO0FBQ2hEOztBQUVBLDJCQUEyQixPQUFPO0FBQ2xDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGtDQUFrQyxhQUFhO0FBQy9DO0FBQ0E7O0FBRUEsbUNBQW1DLGFBQWE7QUFDaEQ7QUFDQTs7QUFFQSxnQ0FBZ0MsYUFBYTtBQUM3QztBQUNBOztBQUVBLDhCQUE4QixPQUFPO0FBQ3JDO0FBQ0E7O0FBRUEsc0JBQXNCLGFBQWE7QUFDbkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsaURBQWlEO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0IsT0FBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQkFBcUIsT0FBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0IsT0FBTztBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIsYUFBYTtBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4QkFBOEIsYUFBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvc3JjL21vZGVscy9QcmVkaWN0aW9uTWFya2V0VjNNYW5hZ2VyQ29udHJhY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSUNvbnRyYWN0ID0gcmVxdWlyZSgnLi9JQ29udHJhY3QnKTtcblxuY29uc3QgcHJlZGljdGlvblYzTWFuYWdlciA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzXCIpLnByZWRpY3Rpb25WM01hbmFnZXI7XG5cbmNvbnN0IE51bWJlcnMgPSByZXF1aXJlKCcuLi91dGlscy9OdW1iZXJzJyk7XG5cbmNsYXNzIFByZWRpY3Rpb25NYXJrZXRWM01hbmFnZXJDb250cmFjdCBleHRlbmRzIElDb250cmFjdCB7XG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgIHN1cGVyKHsgYWJpOiBwcmVkaWN0aW9uVjNNYW5hZ2VyLCAuLi5wYXJhbXMgfSk7XG4gICAgdGhpcy5jb250cmFjdE5hbWUgPSAnUHJlZGljdGlvbk1hcmtldFYzTWFuYWdlcic7XG4gIH1cblxuICBhc3luYyBnZXRMYW5kQnlJZCh7IGlkIH0pIHtcbiAgICBjb25zdCB0b2tlbiA9IGF3YWl0IHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmxhbmRUb2tlbnMoaWQpLmNhbGwoKTtcblxuICAgIHJldHVybiBhd2FpdCB0aGlzLmdldExhbmRCeUFkZHJlc3MoeyB0b2tlbiB9KTtcbiAgfVxuXG4gIGFzeW5jIGdldExhbmRCeUFkZHJlc3MoeyB0b2tlbiB9KSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMubGFuZHModG9rZW4pLmNhbGwoKTtcblxuICAgIHJldHVybiB7XG4gICAgICB0b2tlbjogcmVzLnRva2VuLFxuICAgICAgYWN0aXZlOiByZXMuYWN0aXZlLFxuICAgICAgbG9ja0Ftb3VudDogTnVtYmVycy5mcm9tRGVjaW1hbHNOdW1iZXIocmVzLmxvY2tBbW91bnQsIDE4KSxcbiAgICAgIGxvY2tVc2VyOiByZXMubG9ja1VzZXIsXG4gICAgICByZWFsaXRpbzogcmVzLnJlYWxpdGlvLFxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldExhbmRUb2tlbnNMZW5ndGgoKSB7XG4gICAgY29uc3QgaW5kZXggPSBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5sYW5kVG9rZW5zTGVuZ3RoKCkuY2FsbCgpO1xuXG4gICAgcmV0dXJuIHBhcnNlSW50KGluZGV4KTtcbiAgfVxuXG4gIGFzeW5jIGlzQWxsb3dlZFRvQ3JlYXRlTWFya2V0KHsgdG9rZW4sIHVzZXIgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuaXNBbGxvd2VkVG9DcmVhdGVNYXJrZXQodG9rZW4sIHVzZXIpLmNhbGwoKTtcbiAgfVxuXG4gIGFzeW5jIGlzQWxsb3dlZFRvUmVzb2x2ZU1hcmtldCh7IHRva2VuLCB1c2VyIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmlzQWxsb3dlZFRvUmVzb2x2ZU1hcmtldCh0b2tlbiwgdXNlcikuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgaXNBbGxvd2VkVG9FZGl0TWFya2V0KHsgdG9rZW4sIHVzZXIgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuaXNBbGxvd2VkVG9FZGl0TWFya2V0KHRva2VuLCB1c2VyKS5jYWxsKCk7XG4gIH1cblxuICBhc3luYyBpc0lFUkMyMFRva2VuU29jaWFsKHsgdG9rZW4gfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuaXNJRVJDMjBUb2tlblNvY2lhbCh0b2tlbiwgdXNlcikuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgaXNMYW5kQWRtaW4oeyB0b2tlbiwgdXNlciB9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMucGFyYW1zLmNvbnRyYWN0LmdldENvbnRyYWN0KCkubWV0aG9kcy5pc0xhbmRBZG1pbih0b2tlbiwgdXNlcikuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgbG9ja0Ftb3VudCgpIHtcbiAgICBjb25zdCBhbW91bnQgPSBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMubG9ja0Ftb3VudCgpLmNhbGwoKTtcbiAgICAvLyBUT0RPOiBmZXRjaCBFUkMyMCBkZWNpbWFsc1xuICAgIHJldHVybiBOdW1iZXJzLmZyb21EZWNpbWFsc051bWJlcihhbW91bnQsIDE4KTtcbiAgfVxuXG4gIGFzeW5jIGxvY2tUb2tlbigpIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnRva2VuKCkuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgdXBkYXRlTG9ja0Ftb3VudCh7IGFtb3VudCB9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy51cGRhdGVMb2NrQW1vdW50KE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHMoYW1vdW50LCAxOCkpXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIGNyZWF0ZUxhbmQoeyBuYW1lLCBzeW1ib2wsIHRva2VuQW1vdW50VG9DbGFpbSwgdG9rZW5Ub0Fuc3dlciB9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5jcmVhdGVMYW5kKFxuICAgICAgICBuYW1lLFxuICAgICAgICBzeW1ib2wsXG4gICAgICAgIE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHModG9rZW5BbW91bnRUb0NsYWltLCAxOCksXG4gICAgICAgIHRva2VuVG9BbnN3ZXJcbiAgICAgIClcbiAgICApO1xuICB9O1xuXG4gIGFzeW5jIGRpc2FibGVMYW5kKHsgdG9rZW4gfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuZGlzYWJsZUxhbmQodG9rZW4pXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIGVuYWJsZUxhbmQoeyB0b2tlbiB9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5lbmFibGVMYW5kKHRva2VuKVxuICAgICk7XG4gIH1cblxuICBhc3luYyB1bmxvY2tPZmZzZXRGcm9tTGFuZCh7IHRva2VuIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnVubG9ja09mZnNldEZyb21MYW5kKHRva2VuKVxuICAgICk7XG4gIH1cblxuICBhc3luYyBhZGRBZG1pblRvTGFuZCh7IHRva2VuLCB1c2VyIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmFkZEFkbWluVG9MYW5kKHRva2VuLCB1c2VyKVxuICAgICk7XG4gIH1cblxuICBhc3luYyByZW1vdmVBZG1pbkZyb21MYW5kKHsgdG9rZW4sIHVzZXIgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMucmVtb3ZlQWRtaW5Gcm9tTGFuZCh0b2tlbiwgdXNlcilcbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHJlZGljdGlvbk1hcmtldFYzTWFuYWdlckNvbnRyYWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3ManagerContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3PlusContract.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PredictionMarketV3PlusContract.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const predictionV3 = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").predictionV3Plus);\nconst PredictionMarketV3Contract = __webpack_require__(/*! ./PredictionMarketV3Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3Contract.js\");\nconst PredictionMarketV3QuerierContract = __webpack_require__(/*! ./PredictionMarketV3QuerierContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3QuerierContract.js\");\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\n\nconst realitioLib = __webpack_require__(/*! @reality.eth/reality-eth-lib/formatters/question */ \"(ssr)/./node_modules/@reality.eth/reality-eth-lib/formatters/question.js\");\n\nclass PredictionMarketV3PlusContract extends PredictionMarketV3Contract {\n  constructor(params) {\n    super({ abi: predictionV3, ...params });\n    this.contractName = 'predictionMarketV3';\n    if (params.defaultDecimals) {\n      this.defaultDecimals = params.defaultDecimals;\n    }\n    if (params.querierContractAddress) {\n      this.querier = new PredictionMarketV3QuerierContract({\n        ...this.params,\n        contractAddress: params.querierContractAddress\n      });\n    }\n    this.marketDecimals = {};\n  }\n\n  /**\n   * @function prepareCreateMarketDescription\n   * @description Prepare createMarket function call args\n   */\n  async prepareCreateMarketDescription({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    token,\n    odds = [],\n    buyFees = [0, 0, 0],\n    sellFees = [0, 0, 0],\n    treasury = '0x0000000000000000000000000000000000000000',\n    distributor = '0x0000000000000000000000000000000000000000',\n  }) {\n    const decimals = await this.getTokenDecimals({ contractAddress: token });\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n    const buyFeesToWei = buyFees.map(fee => Numbers.toSmartContractDecimals(fee, 18));\n    const sellFeesToWei = sellFees.map(fee => Numbers.toSmartContractDecimals(fee, 18));\n    const title = `${name};${description}`;\n    const question = realitioLib.encodeText('single-select', title, outcomes, category);\n    let distribution = [];\n\n    if (odds.length > 0) {\n      if (odds.length !== outcomes.length) {\n        throw new Error('Odds and outcomes must have the same length');\n      }\n\n      const oddsSum = odds.reduce((a, b) => a + b, 0);\n      // odds must match 100 (0.1 margin)\n      if (oddsSum < 99.9 || oddsSum > 100.1) {\n        throw new Error('Odds must sum 100');\n      }\n\n      distribution = this.calcDistribution({ odds });\n    }\n\n    return {\n      value: valueToWei,\n      closesAt: duration,\n      outcomes: outcomes.length,\n      token,\n      distribution,\n      question,\n      image,\n      arbitrator: oracleAddress,\n      buyFees: buyFeesToWei,\n      sellFees: sellFeesToWei,\n      treasury,\n      distributor\n    };\n  }\n\n  async mintAndCreateMarket({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    token,\n    odds = [],\n    buyFees = [0, 0, 0],\n    sellFees = [0, 0, 0],\n    treasury = '0x0000000000000000000000000000000000000000',\n    distributor = '0x0000000000000000000000000000000000000000',\n    realitioAddress,\n    realitioTimeout,\n    PM3ManagerAddress\n  }) {\n    const desc = await this.prepareCreateMarketDescription({\n      value,\n      name,\n      description,\n      image,\n      duration,\n      oracleAddress,\n      outcomes,\n      category,\n      token,\n      odds,\n      buyFees,\n      sellFees,\n      treasury,\n      distributor,\n    });\n\n    return await this.__sendTx(this.getContract().methods.mintAndCreateMarket({\n      ...desc,\n      realitio: realitioAddress,\n      realitioTimeout,\n      manager: PM3ManagerAddress\n    }));\n  };\n\n  async createMarket ({\n    value,\n    name,\n    description = '',\n    image,\n    duration,\n    oracleAddress,\n    outcomes,\n    category,\n    token,\n    odds = [],\n    buyFees = [0, 0, 0],\n    sellFees = [0, 0, 0],\n    treasury = '0x0000000000000000000000000000000000000000',\n    distributor = '0x0000000000000000000000000000000000000000',\n    realitioAddress,\n    realitioTimeout,\n    PM3ManagerAddress\n  }) {\n    const desc = await this.prepareCreateMarketDescription({\n      value,\n      name,\n      description,\n      image,\n      duration,\n      oracleAddress,\n      outcomes,\n      category,\n      token,\n      odds,\n      buyFees,\n      sellFees,\n      treasury,\n      distributor,\n    });\n\n    return await this.__sendTx(this.getContract().methods.createMarket({\n      ...desc,\n      realitio: realitioAddress,\n      realitioTimeout,\n      manager: PM3ManagerAddress\n    }));\n  };\n\n  async adminPauseMarket({marketId}) {\n    return await this.__sendTx(\n      this.getContract().methods.adminPauseMarket(marketId),\n      false,\n    );\n  };\n\n  async adminUnpauseMarket({marketId}) {\n    return await this.__sendTx(\n      this.getContract().methods.adminUnpauseMarket(marketId),\n      false,\n    );\n  };\n\n  async getMarketFees({marketId}) {\n    return (await this.getContract().methods.getMarketFees(marketId).call());\n  }\n\n  async referralBuy({ marketId, outcomeId, value, minOutcomeSharesToBuy, code }) {\n    const decimals = await this.getMarketDecimals({marketId});\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n    minOutcomeSharesToBuy = Numbers.toSmartContractDecimals(minOutcomeSharesToBuy, decimals);\n\n    return await this.__sendTx(\n      this.getContract().methods.referralBuy(marketId, outcomeId, minOutcomeSharesToBuy, valueToWei, code),\n    );\n  };\n\n  async referralSell({marketId, outcomeId, value, maxOutcomeSharesToSell, code}) {\n    const decimals = await this.getMarketDecimals({marketId});\n    const valueToWei = Numbers.toSmartContractDecimals(value, decimals);\n    maxOutcomeSharesToSell = Numbers.toSmartContractDecimals(maxOutcomeSharesToSell, decimals);\n\n    return await this.__sendTx(\n      this.getContract().methods.referralSell(marketId, outcomeId, valueToWei, maxOutcomeSharesToSell, code),\n    );\n  };\n}\n\nmodule.exports = PredictionMarketV3PlusContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvUHJlZGljdGlvbk1hcmtldFYzUGx1c0NvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQiwySEFBeUM7QUFDOUQsbUNBQW1DLG1CQUFPLENBQUMsbUhBQThCO0FBQ3pFLDBDQUEwQyxtQkFBTyxDQUFDLGlJQUFxQzs7QUFFdkYsZ0JBQWdCLG1CQUFPLENBQUMsbUZBQWtCOztBQUUxQyxvQkFBb0IsbUJBQU8sQ0FBQyxrSUFBa0Q7O0FBRTlFO0FBQ0E7QUFDQSxZQUFZLDhCQUE4QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxtREFBbUQsd0JBQXdCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUFNLEVBQUUsWUFBWTtBQUN6QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkNBQTZDLE1BQU07QUFDbkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSwwQkFBMEIsU0FBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDRCQUE0QixTQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLFNBQVM7QUFDaEM7QUFDQTs7QUFFQSxzQkFBc0IseURBQXlEO0FBQy9FLG1EQUFtRCxTQUFTO0FBQzVEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCLHlEQUF5RDtBQUMvRSxtREFBbUQsU0FBUztBQUM1RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL3BvbGthbWFya2V0cy1qcy9zcmMvbW9kZWxzL1ByZWRpY3Rpb25NYXJrZXRWM1BsdXNDb250cmFjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcmVkaWN0aW9uVjMgPSByZXF1aXJlKFwiLi4vaW50ZXJmYWNlc1wiKS5wcmVkaWN0aW9uVjNQbHVzO1xuY29uc3QgUHJlZGljdGlvbk1hcmtldFYzQ29udHJhY3QgPSByZXF1aXJlKFwiLi9QcmVkaWN0aW9uTWFya2V0VjNDb250cmFjdFwiKTtcbmNvbnN0IFByZWRpY3Rpb25NYXJrZXRWM1F1ZXJpZXJDb250cmFjdCA9IHJlcXVpcmUoXCIuL1ByZWRpY3Rpb25NYXJrZXRWM1F1ZXJpZXJDb250cmFjdFwiKTtcblxuY29uc3QgTnVtYmVycyA9IHJlcXVpcmUoJy4uL3V0aWxzL051bWJlcnMnKTtcblxuY29uc3QgcmVhbGl0aW9MaWIgPSByZXF1aXJlKCdAcmVhbGl0eS5ldGgvcmVhbGl0eS1ldGgtbGliL2Zvcm1hdHRlcnMvcXVlc3Rpb24nKTtcblxuY2xhc3MgUHJlZGljdGlvbk1hcmtldFYzUGx1c0NvbnRyYWN0IGV4dGVuZHMgUHJlZGljdGlvbk1hcmtldFYzQ29udHJhY3Qge1xuICBjb25zdHJ1Y3RvcihwYXJhbXMpIHtcbiAgICBzdXBlcih7IGFiaTogcHJlZGljdGlvblYzLCAuLi5wYXJhbXMgfSk7XG4gICAgdGhpcy5jb250cmFjdE5hbWUgPSAncHJlZGljdGlvbk1hcmtldFYzJztcbiAgICBpZiAocGFyYW1zLmRlZmF1bHREZWNpbWFscykge1xuICAgICAgdGhpcy5kZWZhdWx0RGVjaW1hbHMgPSBwYXJhbXMuZGVmYXVsdERlY2ltYWxzO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLnF1ZXJpZXJDb250cmFjdEFkZHJlc3MpIHtcbiAgICAgIHRoaXMucXVlcmllciA9IG5ldyBQcmVkaWN0aW9uTWFya2V0VjNRdWVyaWVyQ29udHJhY3Qoe1xuICAgICAgICAuLi50aGlzLnBhcmFtcyxcbiAgICAgICAgY29udHJhY3RBZGRyZXNzOiBwYXJhbXMucXVlcmllckNvbnRyYWN0QWRkcmVzc1xuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMubWFya2V0RGVjaW1hbHMgPSB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb24gcHJlcGFyZUNyZWF0ZU1hcmtldERlc2NyaXB0aW9uXG4gICAqIEBkZXNjcmlwdGlvbiBQcmVwYXJlIGNyZWF0ZU1hcmtldCBmdW5jdGlvbiBjYWxsIGFyZ3NcbiAgICovXG4gIGFzeW5jIHByZXBhcmVDcmVhdGVNYXJrZXREZXNjcmlwdGlvbih7XG4gICAgdmFsdWUsXG4gICAgbmFtZSxcbiAgICBkZXNjcmlwdGlvbiA9ICcnLFxuICAgIGltYWdlLFxuICAgIGR1cmF0aW9uLFxuICAgIG9yYWNsZUFkZHJlc3MsXG4gICAgb3V0Y29tZXMsXG4gICAgY2F0ZWdvcnksXG4gICAgdG9rZW4sXG4gICAgb2RkcyA9IFtdLFxuICAgIGJ1eUZlZXMgPSBbMCwgMCwgMF0sXG4gICAgc2VsbEZlZXMgPSBbMCwgMCwgMF0sXG4gICAgdHJlYXN1cnkgPSAnMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyxcbiAgICBkaXN0cmlidXRvciA9ICcweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLFxuICB9KSB7XG4gICAgY29uc3QgZGVjaW1hbHMgPSBhd2FpdCB0aGlzLmdldFRva2VuRGVjaW1hbHMoeyBjb250cmFjdEFkZHJlc3M6IHRva2VuIH0pO1xuICAgIGNvbnN0IHZhbHVlVG9XZWkgPSBOdW1iZXJzLnRvU21hcnRDb250cmFjdERlY2ltYWxzKHZhbHVlLCBkZWNpbWFscyk7XG4gICAgY29uc3QgYnV5RmVlc1RvV2VpID0gYnV5RmVlcy5tYXAoZmVlID0+IE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHMoZmVlLCAxOCkpO1xuICAgIGNvbnN0IHNlbGxGZWVzVG9XZWkgPSBzZWxsRmVlcy5tYXAoZmVlID0+IE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHMoZmVlLCAxOCkpO1xuICAgIGNvbnN0IHRpdGxlID0gYCR7bmFtZX07JHtkZXNjcmlwdGlvbn1gO1xuICAgIGNvbnN0IHF1ZXN0aW9uID0gcmVhbGl0aW9MaWIuZW5jb2RlVGV4dCgnc2luZ2xlLXNlbGVjdCcsIHRpdGxlLCBvdXRjb21lcywgY2F0ZWdvcnkpO1xuICAgIGxldCBkaXN0cmlidXRpb24gPSBbXTtcblxuICAgIGlmIChvZGRzLmxlbmd0aCA+IDApIHtcbiAgICAgIGlmIChvZGRzLmxlbmd0aCAhPT0gb3V0Y29tZXMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignT2RkcyBhbmQgb3V0Y29tZXMgbXVzdCBoYXZlIHRoZSBzYW1lIGxlbmd0aCcpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBvZGRzU3VtID0gb2Rkcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKTtcbiAgICAgIC8vIG9kZHMgbXVzdCBtYXRjaCAxMDAgKDAuMSBtYXJnaW4pXG4gICAgICBpZiAob2Rkc1N1bSA8IDk5LjkgfHwgb2Rkc1N1bSA+IDEwMC4xKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignT2RkcyBtdXN0IHN1bSAxMDAnKTtcbiAgICAgIH1cblxuICAgICAgZGlzdHJpYnV0aW9uID0gdGhpcy5jYWxjRGlzdHJpYnV0aW9uKHsgb2RkcyB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHZhbHVlVG9XZWksXG4gICAgICBjbG9zZXNBdDogZHVyYXRpb24sXG4gICAgICBvdXRjb21lczogb3V0Y29tZXMubGVuZ3RoLFxuICAgICAgdG9rZW4sXG4gICAgICBkaXN0cmlidXRpb24sXG4gICAgICBxdWVzdGlvbixcbiAgICAgIGltYWdlLFxuICAgICAgYXJiaXRyYXRvcjogb3JhY2xlQWRkcmVzcyxcbiAgICAgIGJ1eUZlZXM6IGJ1eUZlZXNUb1dlaSxcbiAgICAgIHNlbGxGZWVzOiBzZWxsRmVlc1RvV2VpLFxuICAgICAgdHJlYXN1cnksXG4gICAgICBkaXN0cmlidXRvclxuICAgIH07XG4gIH1cblxuICBhc3luYyBtaW50QW5kQ3JlYXRlTWFya2V0KHtcbiAgICB2YWx1ZSxcbiAgICBuYW1lLFxuICAgIGRlc2NyaXB0aW9uID0gJycsXG4gICAgaW1hZ2UsXG4gICAgZHVyYXRpb24sXG4gICAgb3JhY2xlQWRkcmVzcyxcbiAgICBvdXRjb21lcyxcbiAgICBjYXRlZ29yeSxcbiAgICB0b2tlbixcbiAgICBvZGRzID0gW10sXG4gICAgYnV5RmVlcyA9IFswLCAwLCAwXSxcbiAgICBzZWxsRmVlcyA9IFswLCAwLCAwXSxcbiAgICB0cmVhc3VyeSA9ICcweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLFxuICAgIGRpc3RyaWJ1dG9yID0gJzB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgcmVhbGl0aW9BZGRyZXNzLFxuICAgIHJlYWxpdGlvVGltZW91dCxcbiAgICBQTTNNYW5hZ2VyQWRkcmVzc1xuICB9KSB7XG4gICAgY29uc3QgZGVzYyA9IGF3YWl0IHRoaXMucHJlcGFyZUNyZWF0ZU1hcmtldERlc2NyaXB0aW9uKHtcbiAgICAgIHZhbHVlLFxuICAgICAgbmFtZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgaW1hZ2UsXG4gICAgICBkdXJhdGlvbixcbiAgICAgIG9yYWNsZUFkZHJlc3MsXG4gICAgICBvdXRjb21lcyxcbiAgICAgIGNhdGVnb3J5LFxuICAgICAgdG9rZW4sXG4gICAgICBvZGRzLFxuICAgICAgYnV5RmVlcyxcbiAgICAgIHNlbGxGZWVzLFxuICAgICAgdHJlYXN1cnksXG4gICAgICBkaXN0cmlidXRvcixcbiAgICB9KTtcblxuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLm1pbnRBbmRDcmVhdGVNYXJrZXQoe1xuICAgICAgLi4uZGVzYyxcbiAgICAgIHJlYWxpdGlvOiByZWFsaXRpb0FkZHJlc3MsXG4gICAgICByZWFsaXRpb1RpbWVvdXQsXG4gICAgICBtYW5hZ2VyOiBQTTNNYW5hZ2VyQWRkcmVzc1xuICAgIH0pKTtcbiAgfTtcblxuICBhc3luYyBjcmVhdGVNYXJrZXQgKHtcbiAgICB2YWx1ZSxcbiAgICBuYW1lLFxuICAgIGRlc2NyaXB0aW9uID0gJycsXG4gICAgaW1hZ2UsXG4gICAgZHVyYXRpb24sXG4gICAgb3JhY2xlQWRkcmVzcyxcbiAgICBvdXRjb21lcyxcbiAgICBjYXRlZ29yeSxcbiAgICB0b2tlbixcbiAgICBvZGRzID0gW10sXG4gICAgYnV5RmVlcyA9IFswLCAwLCAwXSxcbiAgICBzZWxsRmVlcyA9IFswLCAwLCAwXSxcbiAgICB0cmVhc3VyeSA9ICcweDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAnLFxuICAgIGRpc3RyaWJ1dG9yID0gJzB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgcmVhbGl0aW9BZGRyZXNzLFxuICAgIHJlYWxpdGlvVGltZW91dCxcbiAgICBQTTNNYW5hZ2VyQWRkcmVzc1xuICB9KSB7XG4gICAgY29uc3QgZGVzYyA9IGF3YWl0IHRoaXMucHJlcGFyZUNyZWF0ZU1hcmtldERlc2NyaXB0aW9uKHtcbiAgICAgIHZhbHVlLFxuICAgICAgbmFtZSxcbiAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgaW1hZ2UsXG4gICAgICBkdXJhdGlvbixcbiAgICAgIG9yYWNsZUFkZHJlc3MsXG4gICAgICBvdXRjb21lcyxcbiAgICAgIGNhdGVnb3J5LFxuICAgICAgdG9rZW4sXG4gICAgICBvZGRzLFxuICAgICAgYnV5RmVlcyxcbiAgICAgIHNlbGxGZWVzLFxuICAgICAgdHJlYXN1cnksXG4gICAgICBkaXN0cmlidXRvcixcbiAgICB9KTtcblxuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmNyZWF0ZU1hcmtldCh7XG4gICAgICAuLi5kZXNjLFxuICAgICAgcmVhbGl0aW86IHJlYWxpdGlvQWRkcmVzcyxcbiAgICAgIHJlYWxpdGlvVGltZW91dCxcbiAgICAgIG1hbmFnZXI6IFBNM01hbmFnZXJBZGRyZXNzXG4gICAgfSkpO1xuICB9O1xuXG4gIGFzeW5jIGFkbWluUGF1c2VNYXJrZXQoe21hcmtldElkfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuYWRtaW5QYXVzZU1hcmtldChtYXJrZXRJZCksXG4gICAgICBmYWxzZSxcbiAgICApO1xuICB9O1xuXG4gIGFzeW5jIGFkbWluVW5wYXVzZU1hcmtldCh7bWFya2V0SWR9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX19zZW5kVHgoXG4gICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5hZG1pblVucGF1c2VNYXJrZXQobWFya2V0SWQpLFxuICAgICAgZmFsc2UsXG4gICAgKTtcbiAgfTtcblxuICBhc3luYyBnZXRNYXJrZXRGZWVzKHttYXJrZXRJZH0pIHtcbiAgICByZXR1cm4gKGF3YWl0IHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmdldE1hcmtldEZlZXMobWFya2V0SWQpLmNhbGwoKSk7XG4gIH1cblxuICBhc3luYyByZWZlcnJhbEJ1eSh7IG1hcmtldElkLCBvdXRjb21lSWQsIHZhbHVlLCBtaW5PdXRjb21lU2hhcmVzVG9CdXksIGNvZGUgfSkge1xuICAgIGNvbnN0IGRlY2ltYWxzID0gYXdhaXQgdGhpcy5nZXRNYXJrZXREZWNpbWFscyh7bWFya2V0SWR9KTtcbiAgICBjb25zdCB2YWx1ZVRvV2VpID0gTnVtYmVycy50b1NtYXJ0Q29udHJhY3REZWNpbWFscyh2YWx1ZSwgZGVjaW1hbHMpO1xuICAgIG1pbk91dGNvbWVTaGFyZXNUb0J1eSA9IE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHMobWluT3V0Y29tZVNoYXJlc1RvQnV5LCBkZWNpbWFscyk7XG5cbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnJlZmVycmFsQnV5KG1hcmtldElkLCBvdXRjb21lSWQsIG1pbk91dGNvbWVTaGFyZXNUb0J1eSwgdmFsdWVUb1dlaSwgY29kZSksXG4gICAgKTtcbiAgfTtcblxuICBhc3luYyByZWZlcnJhbFNlbGwoe21hcmtldElkLCBvdXRjb21lSWQsIHZhbHVlLCBtYXhPdXRjb21lU2hhcmVzVG9TZWxsLCBjb2RlfSkge1xuICAgIGNvbnN0IGRlY2ltYWxzID0gYXdhaXQgdGhpcy5nZXRNYXJrZXREZWNpbWFscyh7bWFya2V0SWR9KTtcbiAgICBjb25zdCB2YWx1ZVRvV2VpID0gTnVtYmVycy50b1NtYXJ0Q29udHJhY3REZWNpbWFscyh2YWx1ZSwgZGVjaW1hbHMpO1xuICAgIG1heE91dGNvbWVTaGFyZXNUb1NlbGwgPSBOdW1iZXJzLnRvU21hcnRDb250cmFjdERlY2ltYWxzKG1heE91dGNvbWVTaGFyZXNUb1NlbGwsIGRlY2ltYWxzKTtcblxuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMucmVmZXJyYWxTZWxsKG1hcmtldElkLCBvdXRjb21lSWQsIHZhbHVlVG9XZWksIG1heE91dGNvbWVTaGFyZXNUb1NlbGwsIGNvZGUpLFxuICAgICk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHJlZGljdGlvbk1hcmtldFYzUGx1c0NvbnRyYWN0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3PlusContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3QuerierContract.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/PredictionMarketV3QuerierContract.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nconst predictionV3Querier = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").predictionV3Querier);\n\nclass PredictionMarketV3QuerierContract extends IContract {\n  constructor(params) {\n    super({ ...params, abi: predictionV3Querier });\n    this.contractName = 'PredictionMarketV3Querier';\n  }\n\n  async getUserMarketData({ user, marketId }) {\n    return await this.params.contract.getContract().methods.getUserMarketData(marketId, user).call();\n  }\n\n  async getUserMarketsData({ user, marketIds }) {\n    return await this.params.contract.getContract().methods.getUserMarketsData(marketIds, user).call();\n  }\n\n  async getUserAllMarketsData({ user }) {\n    return await this.params.contract.getContract().methods.getUserAllMarketsData(user).call();\n  }\n\n  async getMarketPrices({ marketId }) {\n    return await this.params.contract.getContract().methods.getMarketPrices(marketId).call();\n  }\n\n  async getMarketsPrices({ marketIds }) {\n    return await this.params.contract.getContract().methods.getMarketsPrices(marketIds).call();\n  }\n\n  async getMarketERC20Decimals({ marketId }) {\n    return await this.params.contract.getContract().methods.getMarketERC20Decimals(marketId).call();\n  }\n\n  async getMarketsERC20Decimals({ marketIds }) {\n    return await this.params.contract.getContract().methods.getMarketsERC20Decimals(marketIds).call();\n  }\n}\n\nmodule.exports = PredictionMarketV3QuerierContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvUHJlZGljdGlvbk1hcmtldFYzUXVlcmllckNvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFhOztBQUV2Qyw0QkFBNEIsOEhBQTRDOztBQUV4RTtBQUNBO0FBQ0EsWUFBWSxxQ0FBcUM7QUFDakQ7QUFDQTs7QUFFQSw0QkFBNEIsZ0JBQWdCO0FBQzVDO0FBQ0E7O0FBRUEsNkJBQTZCLGlCQUFpQjtBQUM5QztBQUNBOztBQUVBLGdDQUFnQyxNQUFNO0FBQ3RDO0FBQ0E7O0FBRUEsMEJBQTBCLFVBQVU7QUFDcEM7QUFDQTs7QUFFQSwyQkFBMkIsV0FBVztBQUN0QztBQUNBOztBQUVBLGlDQUFpQyxVQUFVO0FBQzNDO0FBQ0E7O0FBRUEsa0NBQWtDLFdBQVc7QUFDN0M7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvc3JjL21vZGVscy9QcmVkaWN0aW9uTWFya2V0VjNRdWVyaWVyQ29udHJhY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSUNvbnRyYWN0ID0gcmVxdWlyZSgnLi9JQ29udHJhY3QnKTtcblxuY29uc3QgcHJlZGljdGlvblYzUXVlcmllciA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzXCIpLnByZWRpY3Rpb25WM1F1ZXJpZXI7XG5cbmNsYXNzIFByZWRpY3Rpb25NYXJrZXRWM1F1ZXJpZXJDb250cmFjdCBleHRlbmRzIElDb250cmFjdCB7XG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgIHN1cGVyKHsgLi4ucGFyYW1zLCBhYmk6IHByZWRpY3Rpb25WM1F1ZXJpZXIgfSk7XG4gICAgdGhpcy5jb250cmFjdE5hbWUgPSAnUHJlZGljdGlvbk1hcmtldFYzUXVlcmllcic7XG4gIH1cblxuICBhc3luYyBnZXRVc2VyTWFya2V0RGF0YSh7IHVzZXIsIG1hcmtldElkIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmdldFVzZXJNYXJrZXREYXRhKG1hcmtldElkLCB1c2VyKS5jYWxsKCk7XG4gIH1cblxuICBhc3luYyBnZXRVc2VyTWFya2V0c0RhdGEoeyB1c2VyLCBtYXJrZXRJZHMgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuZ2V0VXNlck1hcmtldHNEYXRhKG1hcmtldElkcywgdXNlcikuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgZ2V0VXNlckFsbE1hcmtldHNEYXRhKHsgdXNlciB9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMucGFyYW1zLmNvbnRyYWN0LmdldENvbnRyYWN0KCkubWV0aG9kcy5nZXRVc2VyQWxsTWFya2V0c0RhdGEodXNlcikuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgZ2V0TWFya2V0UHJpY2VzKHsgbWFya2V0SWQgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuZ2V0TWFya2V0UHJpY2VzKG1hcmtldElkKS5jYWxsKCk7XG4gIH1cblxuICBhc3luYyBnZXRNYXJrZXRzUHJpY2VzKHsgbWFya2V0SWRzIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5wYXJhbXMuY29udHJhY3QuZ2V0Q29udHJhY3QoKS5tZXRob2RzLmdldE1hcmtldHNQcmljZXMobWFya2V0SWRzKS5jYWxsKCk7XG4gIH1cblxuICBhc3luYyBnZXRNYXJrZXRFUkMyMERlY2ltYWxzKHsgbWFya2V0SWQgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuZ2V0TWFya2V0RVJDMjBEZWNpbWFscyhtYXJrZXRJZCkuY2FsbCgpO1xuICB9XG5cbiAgYXN5bmMgZ2V0TWFya2V0c0VSQzIwRGVjaW1hbHMoeyBtYXJrZXRJZHMgfSkge1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMuZ2V0TWFya2V0c0VSQzIwRGVjaW1hbHMobWFya2V0SWRzKS5jYWxsKCk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQcmVkaWN0aW9uTWFya2V0VjNRdWVyaWVyQ29udHJhY3Q7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3QuerierContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/RealitioERC20Contract.js":
/*!**************************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/RealitioERC20Contract.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const _ = __webpack_require__(/*! lodash */ \"(ssr)/./node_modules/lodash/lodash.js\");\n\nconst realitio = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").realitio);\nconst ierc20 = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").ierc20);\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nconst ERC20Contract = __webpack_require__(/*! ./ERC20Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/ERC20Contract.js\");\n\n/**\n * RealitioERC20 Contract Object\n * @constructor RealitioERC20Contract\n * @param {Web3} web3\n * @param {Integer} decimals\n * @param {Address} contractAddress\n */\n\nclass RealitioERC20Contract extends IContract {\n  constructor(params) {\n    super({ abi: realitio, ...params });\n    this.contractName = 'realitio';\n  }\n\n  /**\n   * @function getTokenDecimals\n   * @description Get Token Decimals\n   * @return {Integer} decimals\n   */\n  async getTokenDecimals() {\n    try {\n      const contractAddress = await this.params.contract.getContract().methods.token().call();\n      const erc20Contract = new ERC20Contract({ ...this.params, contractAddress, abi: ierc20 });\n\n      return await erc20Contract.getDecimalsAsync();\n    } catch (err) {\n      // defaulting to 18 decimals\n      return 18;\n    }\n  }\n\n  /**\n   * @function getQuestion\n   * @description getQuestion\n   * @param {bytes32} questionId\n   * @returns {Object} question\n   */\n  async getQuestion({ questionId }) {\n    const question = await this.getContract().methods.questions(questionId).call();\n    const isFinalized = await this.getContract().methods.isFinalized(questionId).call();\n    const isClaimed = isFinalized && question.history_hash === Numbers.nullHash();\n    const decimals = await this.getTokenDecimals();\n\n    return {\n      id: questionId,\n      bond: Numbers.fromDecimalsNumber(question.bond, decimals),\n      bestAnswer: question.best_answer,\n      finalizeTs: question.finalize_ts,\n      isFinalized,\n      isClaimed,\n      isPendingArbitration: question.is_pending_arbitration,\n      arbitrator: question.arbitrator,\n    };\n  }\n\n  /**\n   * @function getQuestionBestAnswer\n   * @description getQuestionBestAnswer\n   * @param {bytes32} questionId\n   * @returns {bytes32} answerId\n   */\n  async getQuestionBestAnswer({ questionId }) {\n    return await this.getContract().methods.getBestAnswer(questionId).call();\n  }\n\n  /**\n   * @function resultForQuestion\n   * @description resultForQuestion - throws an error if question is not finalized\n   * @param {bytes32} questionId\n   * @returns {bytes32} answerId\n   */\n  async getResultForQuestion({ questionId }) {\n    return await this.getContract().methods.resultFor(questionId).call();\n  }\n\n  /**\n   * @function getQuestionBondsByAnswer\n   * @description getQuestionBondsByAnswer - throws an error if question is not finalized\n   * @param {bytes32} questionId\n   * @returns {Object} bonds\n   */\n  async getQuestionBondsByAnswer({ questionId, user }) {\n    const bonds = {};\n\n    const answers = await this.getEvents('LogNewAnswer', { question_id: questionId, user });\n\n    const decimals = await this.getTokenDecimals();\n\n    answers.forEach((answer) => {\n      const answerId = answer.returnValues.answer;\n\n      if (!bonds[answerId]) bonds[answerId] = 0;\n\n      bonds[answerId] += Numbers.fromDecimalsNumber(answer.returnValues.bond, decimals);\n    });\n\n    return bonds;\n  }\n\n  /**\n   * @function submitAnswerERC20\n   * @description Submit Answer for a Question\n   * @param {bytes32} questionId\n   * @param {bytes32} answerId\n   * @param {Integer} amount\n   */\n  async submitAnswerERC20({ questionId, answerId, amount }) {\n    const decimals = await this.getTokenDecimals();\n    let amountDecimals = Numbers.toSmartContractDecimals(amount, decimals);\n\n    return await this.__sendTx(\n      this.getContract().methods.submitAnswerERC20(\n        questionId,\n        answerId,\n        0,\n        amountDecimals\n      ),\n      false\n    );\n  }\n\n  async getMyBonds() {\n    const user = await this.getMyAccount();\n    if (!user) return {};\n\n    return await this.getUserBonds({ user });\n  }\n\n  /**\n   * @function getMyBonds\n   * @description Get My Bonds\n   * @returns {Array} Outcome Shares\n   */\n  async getUserBonds({ user }) {\n    const events = await this.getEvents('LogNewAnswer', { user });\n    const claimEvents = await this.getEvents('LogClaim', { user });\n    const withdrawEvents = await this.getEvents('LogWithdraw', { user });\n    const decimals = await this.getTokenDecimals();\n\n    const lastWithdrawBlockNumber = withdrawEvents[withdrawEvents.length - 1]\n      ? withdrawEvents[withdrawEvents.length - 1].blockNumber\n      : 0;\n\n    const bonds = {};\n\n    // iterating through every answer and summing up the bonds\n    events.forEach((event) => {\n      const questionId = event.returnValues.question_id;\n\n      // initializing bond vars\n      if (!bonds[questionId]) bonds[questionId] = { total: 0, answers: {}, claimed: 0, withdrawn: false };\n      if (!bonds[questionId].answers[event.returnValues.answer]) {\n        bonds[questionId].answers[event.returnValues.answer] = 0;\n      }\n\n      const bond = Numbers.fromDecimalsNumber(event.returnValues.bond, decimals)\n\n      bonds[questionId].total += bond;\n      bonds[questionId].answers[event.returnValues.answer] += bond;\n    });\n\n    claimEvents.forEach((event) => {\n      const questionId = event.returnValues.question_id;\n\n      const amount = Numbers.fromDecimalsNumber(event.returnValues.amount, decimals);\n\n      bonds[questionId].claimed += amount;\n\n      // withdraw occurred after claim, marking as withdrawn\n      if (lastWithdrawBlockNumber >= event.blockNumber) bonds[questionId].withdrawn = true;\n    });\n\n    return bonds;\n  }\n\n  async getMyActions() {\n    const user = await this.getMyAccount();\n    if (!user) return [];\n\n    return await this.getUserActions({ user });\n  }\n\n  /**\n   * @function getMyActions\n   * @description Get My Actions\n   * @returns {Array} Actions\n   */\n  async getUserActions({ user }) {\n    const events = await this.getEvents('LogNewAnswer', { user });\n    const decimals = await this.getTokenDecimals();\n\n    return events.map(event => {\n      return {\n        action: 'Bond',\n        questionId: event.returnValues.question_id,\n        answerId: event.returnValues.answer,\n        value: Numbers.fromDecimalsNumber(event.returnValues.bond, decimals),\n        timestamp: Numbers.fromBigNumberToInteger(event.returnValues.ts, 18),\n        transactionHash: event.transactionHash\n      }\n    })\n  }\n\n  async getMyQuestions() {\n    const user = await this.getMyAccount();\n    if (!user) return [];\n\n    return await this.getUserQuestions({ user });\n  }\n\n  /**\n   * @function getMyQuestions\n   * @description Get My Questions\n   * @returns {Array} Questions\n   */\n  async getUserQuestions({ user }) {\n    const events = await this.getEvents('LogNewAnswer', { user });\n    const logQuestionEvents = await this.getEvents('LogNewQuestion');\n\n    // getting unique question ids\n    const questionIds = events.map(event => event.returnValues.question_id).filter((value, index, self) => self.indexOf(value) === index);\n    const questions = logQuestionEvents.filter(event => questionIds.includes(event.returnValues.question_id));\n\n    return questions.map(event => {\n      return {\n        questionId: event.returnValues.question_id,\n        question: event.returnValues.question,\n        transactionHash: event.transactionHash\n      }\n    });\n  }\n\n  /**\n   * @function claimWinnings\n   * @description claimWinnings\n   * @param {bytes32} questionId\n   */\n  async claimWinningsAndWithdraw({ questionId }) {\n    const question = await this.getQuestion({ questionId });\n\n    // assuring question state is finalized\n    if (!question.isFinalized) return false;\n\n    if (question.isClaimed) {\n      // question already claimed, only performing a withdraw action\n      return await this.__sendTx(\n        this.getContract().methods.withdraw(),\n        false\n      );\n    }\n\n    const events = await this.getEvents('LogNewAnswer', { question_id: questionId });\n\n    const historyHashes = events.map((event) => event.returnValues.history_hash).slice(0, -1).reverse();\n    // adding an empty hash to the history hashes\n    historyHashes.push(Numbers.nullHash());\n\n    const addrs = events.map((event) => event.returnValues.user).reverse();\n    const bonds = events.map((event) => event.returnValues.bond).reverse();\n    const answers = events.map((event) => event.returnValues.answer).reverse();\n\n    return await this.__sendTx(\n      this.getContract().methods.claimMultipleAndWithdrawBalance(\n        [questionId],\n        [historyHashes.length],\n        historyHashes,\n        addrs,\n        bonds,\n        answers\n      ),\n      false\n    );\n  }\n}\n\nmodule.exports = RealitioERC20Contract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvUmVhbGl0aW9FUkMyMENvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxxREFBUTs7QUFFMUIsaUJBQWlCLG1IQUFpQztBQUNsRCxlQUFlLGlIQUErQjs7QUFFOUMsZ0JBQWdCLG1CQUFPLENBQUMsbUZBQWtCO0FBQzFDLGtCQUFrQixtQkFBTyxDQUFDLGlGQUFhOztBQUV2QyxzQkFBc0IsbUJBQU8sQ0FBQyx5RkFBaUI7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxTQUFTO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQSxZQUFZLDBCQUEwQjtBQUN0QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCw4Q0FBOEM7O0FBRTlGO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlLFFBQVE7QUFDdkI7QUFDQSxzQkFBc0IsWUFBWTtBQUNsQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlLFNBQVM7QUFDeEI7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlLFNBQVM7QUFDeEI7QUFDQSwrQkFBK0IsWUFBWTtBQUMzQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsU0FBUztBQUN0QixlQUFlLFFBQVE7QUFDdkI7QUFDQSxtQ0FBbUMsa0JBQWtCO0FBQ3JEOztBQUVBLDJEQUEyRCwrQkFBK0I7O0FBRTFGOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCLGFBQWEsU0FBUztBQUN0QixhQUFhLFNBQVM7QUFDdEI7QUFDQSw0QkFBNEIsOEJBQThCO0FBQzFEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHFDQUFxQyxNQUFNO0FBQzNDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBLHVCQUF1QixNQUFNO0FBQzdCLDBEQUEwRCxNQUFNO0FBQ2hFLDJEQUEyRCxNQUFNO0FBQ2pFLGlFQUFpRSxNQUFNO0FBQ3ZFOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvREFBb0QscUJBQXFCO0FBQ3pFO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLHVDQUF1QyxNQUFNO0FBQzdDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBLHlCQUF5QixNQUFNO0FBQy9CLDBEQUEwRCxNQUFNO0FBQ2hFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEseUNBQXlDLE1BQU07QUFDL0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxPQUFPO0FBQ3RCO0FBQ0EsMkJBQTJCLE1BQU07QUFDakMsMERBQTBELE1BQU07QUFDaEU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDQSxtQ0FBbUMsWUFBWTtBQUMvQyw4Q0FBOEMsWUFBWTs7QUFFMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwREFBMEQseUJBQXlCOztBQUVuRjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9wb2xrYW1hcmtldHMtanMvc3JjL21vZGVscy9SZWFsaXRpb0VSQzIwQ29udHJhY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoXCJsb2Rhc2hcIik7XG5cbmNvbnN0IHJlYWxpdGlvID0gcmVxdWlyZShcIi4uL2ludGVyZmFjZXNcIikucmVhbGl0aW87XG5jb25zdCBpZXJjMjAgPSByZXF1aXJlKFwiLi4vaW50ZXJmYWNlc1wiKS5pZXJjMjA7XG5cbmNvbnN0IE51bWJlcnMgPSByZXF1aXJlKFwiLi4vdXRpbHMvTnVtYmVyc1wiKTtcbmNvbnN0IElDb250cmFjdCA9IHJlcXVpcmUoJy4vSUNvbnRyYWN0Jyk7XG5cbmNvbnN0IEVSQzIwQ29udHJhY3QgPSByZXF1aXJlKCcuL0VSQzIwQ29udHJhY3QnKTtcblxuLyoqXG4gKiBSZWFsaXRpb0VSQzIwIENvbnRyYWN0IE9iamVjdFxuICogQGNvbnN0cnVjdG9yIFJlYWxpdGlvRVJDMjBDb250cmFjdFxuICogQHBhcmFtIHtXZWIzfSB3ZWIzXG4gKiBAcGFyYW0ge0ludGVnZXJ9IGRlY2ltYWxzXG4gKiBAcGFyYW0ge0FkZHJlc3N9IGNvbnRyYWN0QWRkcmVzc1xuICovXG5cbmNsYXNzIFJlYWxpdGlvRVJDMjBDb250cmFjdCBleHRlbmRzIElDb250cmFjdCB7XG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgIHN1cGVyKHsgYWJpOiByZWFsaXRpbywgLi4ucGFyYW1zIH0pO1xuICAgIHRoaXMuY29udHJhY3ROYW1lID0gJ3JlYWxpdGlvJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb24gZ2V0VG9rZW5EZWNpbWFsc1xuICAgKiBAZGVzY3JpcHRpb24gR2V0IFRva2VuIERlY2ltYWxzXG4gICAqIEByZXR1cm4ge0ludGVnZXJ9IGRlY2ltYWxzXG4gICAqL1xuICBhc3luYyBnZXRUb2tlbkRlY2ltYWxzKCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBjb250cmFjdEFkZHJlc3MgPSBhd2FpdCB0aGlzLnBhcmFtcy5jb250cmFjdC5nZXRDb250cmFjdCgpLm1ldGhvZHMudG9rZW4oKS5jYWxsKCk7XG4gICAgICBjb25zdCBlcmMyMENvbnRyYWN0ID0gbmV3IEVSQzIwQ29udHJhY3QoeyAuLi50aGlzLnBhcmFtcywgY29udHJhY3RBZGRyZXNzLCBhYmk6IGllcmMyMCB9KTtcblxuICAgICAgcmV0dXJuIGF3YWl0IGVyYzIwQ29udHJhY3QuZ2V0RGVjaW1hbHNBc3luYygpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgLy8gZGVmYXVsdGluZyB0byAxOCBkZWNpbWFsc1xuICAgICAgcmV0dXJuIDE4O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb24gZ2V0UXVlc3Rpb25cbiAgICogQGRlc2NyaXB0aW9uIGdldFF1ZXN0aW9uXG4gICAqIEBwYXJhbSB7Ynl0ZXMzMn0gcXVlc3Rpb25JZFxuICAgKiBAcmV0dXJucyB7T2JqZWN0fSBxdWVzdGlvblxuICAgKi9cbiAgYXN5bmMgZ2V0UXVlc3Rpb24oeyBxdWVzdGlvbklkIH0pIHtcbiAgICBjb25zdCBxdWVzdGlvbiA9IGF3YWl0IHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnF1ZXN0aW9ucyhxdWVzdGlvbklkKS5jYWxsKCk7XG4gICAgY29uc3QgaXNGaW5hbGl6ZWQgPSBhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5pc0ZpbmFsaXplZChxdWVzdGlvbklkKS5jYWxsKCk7XG4gICAgY29uc3QgaXNDbGFpbWVkID0gaXNGaW5hbGl6ZWQgJiYgcXVlc3Rpb24uaGlzdG9yeV9oYXNoID09PSBOdW1iZXJzLm51bGxIYXNoKCk7XG4gICAgY29uc3QgZGVjaW1hbHMgPSBhd2FpdCB0aGlzLmdldFRva2VuRGVjaW1hbHMoKTtcblxuICAgIHJldHVybiB7XG4gICAgICBpZDogcXVlc3Rpb25JZCxcbiAgICAgIGJvbmQ6IE51bWJlcnMuZnJvbURlY2ltYWxzTnVtYmVyKHF1ZXN0aW9uLmJvbmQsIGRlY2ltYWxzKSxcbiAgICAgIGJlc3RBbnN3ZXI6IHF1ZXN0aW9uLmJlc3RfYW5zd2VyLFxuICAgICAgZmluYWxpemVUczogcXVlc3Rpb24uZmluYWxpemVfdHMsXG4gICAgICBpc0ZpbmFsaXplZCxcbiAgICAgIGlzQ2xhaW1lZCxcbiAgICAgIGlzUGVuZGluZ0FyYml0cmF0aW9uOiBxdWVzdGlvbi5pc19wZW5kaW5nX2FyYml0cmF0aW9uLFxuICAgICAgYXJiaXRyYXRvcjogcXVlc3Rpb24uYXJiaXRyYXRvcixcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEBmdW5jdGlvbiBnZXRRdWVzdGlvbkJlc3RBbnN3ZXJcbiAgICogQGRlc2NyaXB0aW9uIGdldFF1ZXN0aW9uQmVzdEFuc3dlclxuICAgKiBAcGFyYW0ge2J5dGVzMzJ9IHF1ZXN0aW9uSWRcbiAgICogQHJldHVybnMge2J5dGVzMzJ9IGFuc3dlcklkXG4gICAqL1xuICBhc3luYyBnZXRRdWVzdGlvbkJlc3RBbnN3ZXIoeyBxdWVzdGlvbklkIH0pIHtcbiAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuZ2V0QmVzdEFuc3dlcihxdWVzdGlvbklkKS5jYWxsKCk7XG4gIH1cblxuICAvKipcbiAgICogQGZ1bmN0aW9uIHJlc3VsdEZvclF1ZXN0aW9uXG4gICAqIEBkZXNjcmlwdGlvbiByZXN1bHRGb3JRdWVzdGlvbiAtIHRocm93cyBhbiBlcnJvciBpZiBxdWVzdGlvbiBpcyBub3QgZmluYWxpemVkXG4gICAqIEBwYXJhbSB7Ynl0ZXMzMn0gcXVlc3Rpb25JZFxuICAgKiBAcmV0dXJucyB7Ynl0ZXMzMn0gYW5zd2VySWRcbiAgICovXG4gIGFzeW5jIGdldFJlc3VsdEZvclF1ZXN0aW9uKHsgcXVlc3Rpb25JZCB9KSB7XG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnJlc3VsdEZvcihxdWVzdGlvbklkKS5jYWxsKCk7XG4gIH1cblxuICAvKipcbiAgICogQGZ1bmN0aW9uIGdldFF1ZXN0aW9uQm9uZHNCeUFuc3dlclxuICAgKiBAZGVzY3JpcHRpb24gZ2V0UXVlc3Rpb25Cb25kc0J5QW5zd2VyIC0gdGhyb3dzIGFuIGVycm9yIGlmIHF1ZXN0aW9uIGlzIG5vdCBmaW5hbGl6ZWRcbiAgICogQHBhcmFtIHtieXRlczMyfSBxdWVzdGlvbklkXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IGJvbmRzXG4gICAqL1xuICBhc3luYyBnZXRRdWVzdGlvbkJvbmRzQnlBbnN3ZXIoeyBxdWVzdGlvbklkLCB1c2VyIH0pIHtcbiAgICBjb25zdCBib25kcyA9IHt9O1xuXG4gICAgY29uc3QgYW5zd2VycyA9IGF3YWl0IHRoaXMuZ2V0RXZlbnRzKCdMb2dOZXdBbnN3ZXInLCB7IHF1ZXN0aW9uX2lkOiBxdWVzdGlvbklkLCB1c2VyIH0pO1xuXG4gICAgY29uc3QgZGVjaW1hbHMgPSBhd2FpdCB0aGlzLmdldFRva2VuRGVjaW1hbHMoKTtcblxuICAgIGFuc3dlcnMuZm9yRWFjaCgoYW5zd2VyKSA9PiB7XG4gICAgICBjb25zdCBhbnN3ZXJJZCA9IGFuc3dlci5yZXR1cm5WYWx1ZXMuYW5zd2VyO1xuXG4gICAgICBpZiAoIWJvbmRzW2Fuc3dlcklkXSkgYm9uZHNbYW5zd2VySWRdID0gMDtcblxuICAgICAgYm9uZHNbYW5zd2VySWRdICs9IE51bWJlcnMuZnJvbURlY2ltYWxzTnVtYmVyKGFuc3dlci5yZXR1cm5WYWx1ZXMuYm9uZCwgZGVjaW1hbHMpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGJvbmRzO1xuICB9XG5cbiAgLyoqXG4gICAqIEBmdW5jdGlvbiBzdWJtaXRBbnN3ZXJFUkMyMFxuICAgKiBAZGVzY3JpcHRpb24gU3VibWl0IEFuc3dlciBmb3IgYSBRdWVzdGlvblxuICAgKiBAcGFyYW0ge2J5dGVzMzJ9IHF1ZXN0aW9uSWRcbiAgICogQHBhcmFtIHtieXRlczMyfSBhbnN3ZXJJZFxuICAgKiBAcGFyYW0ge0ludGVnZXJ9IGFtb3VudFxuICAgKi9cbiAgYXN5bmMgc3VibWl0QW5zd2VyRVJDMjAoeyBxdWVzdGlvbklkLCBhbnN3ZXJJZCwgYW1vdW50IH0pIHtcbiAgICBjb25zdCBkZWNpbWFscyA9IGF3YWl0IHRoaXMuZ2V0VG9rZW5EZWNpbWFscygpO1xuICAgIGxldCBhbW91bnREZWNpbWFscyA9IE51bWJlcnMudG9TbWFydENvbnRyYWN0RGVjaW1hbHMoYW1vdW50LCBkZWNpbWFscyk7XG5cbiAgICByZXR1cm4gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgIHRoaXMuZ2V0Q29udHJhY3QoKS5tZXRob2RzLnN1Ym1pdEFuc3dlckVSQzIwKFxuICAgICAgICBxdWVzdGlvbklkLFxuICAgICAgICBhbnN3ZXJJZCxcbiAgICAgICAgMCxcbiAgICAgICAgYW1vdW50RGVjaW1hbHNcbiAgICAgICksXG4gICAgICBmYWxzZVxuICAgICk7XG4gIH1cblxuICBhc3luYyBnZXRNeUJvbmRzKCkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLmdldE15QWNjb3VudCgpO1xuICAgIGlmICghdXNlcikgcmV0dXJuIHt9O1xuXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0VXNlckJvbmRzKHsgdXNlciB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAZnVuY3Rpb24gZ2V0TXlCb25kc1xuICAgKiBAZGVzY3JpcHRpb24gR2V0IE15IEJvbmRzXG4gICAqIEByZXR1cm5zIHtBcnJheX0gT3V0Y29tZSBTaGFyZXNcbiAgICovXG4gIGFzeW5jIGdldFVzZXJCb25kcyh7IHVzZXIgfSkge1xuICAgIGNvbnN0IGV2ZW50cyA9IGF3YWl0IHRoaXMuZ2V0RXZlbnRzKCdMb2dOZXdBbnN3ZXInLCB7IHVzZXIgfSk7XG4gICAgY29uc3QgY2xhaW1FdmVudHMgPSBhd2FpdCB0aGlzLmdldEV2ZW50cygnTG9nQ2xhaW0nLCB7IHVzZXIgfSk7XG4gICAgY29uc3Qgd2l0aGRyYXdFdmVudHMgPSBhd2FpdCB0aGlzLmdldEV2ZW50cygnTG9nV2l0aGRyYXcnLCB7IHVzZXIgfSk7XG4gICAgY29uc3QgZGVjaW1hbHMgPSBhd2FpdCB0aGlzLmdldFRva2VuRGVjaW1hbHMoKTtcblxuICAgIGNvbnN0IGxhc3RXaXRoZHJhd0Jsb2NrTnVtYmVyID0gd2l0aGRyYXdFdmVudHNbd2l0aGRyYXdFdmVudHMubGVuZ3RoIC0gMV1cbiAgICAgID8gd2l0aGRyYXdFdmVudHNbd2l0aGRyYXdFdmVudHMubGVuZ3RoIC0gMV0uYmxvY2tOdW1iZXJcbiAgICAgIDogMDtcblxuICAgIGNvbnN0IGJvbmRzID0ge307XG5cbiAgICAvLyBpdGVyYXRpbmcgdGhyb3VnaCBldmVyeSBhbnN3ZXIgYW5kIHN1bW1pbmcgdXAgdGhlIGJvbmRzXG4gICAgZXZlbnRzLmZvckVhY2goKGV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBxdWVzdGlvbklkID0gZXZlbnQucmV0dXJuVmFsdWVzLnF1ZXN0aW9uX2lkO1xuXG4gICAgICAvLyBpbml0aWFsaXppbmcgYm9uZCB2YXJzXG4gICAgICBpZiAoIWJvbmRzW3F1ZXN0aW9uSWRdKSBib25kc1txdWVzdGlvbklkXSA9IHsgdG90YWw6IDAsIGFuc3dlcnM6IHt9LCBjbGFpbWVkOiAwLCB3aXRoZHJhd246IGZhbHNlIH07XG4gICAgICBpZiAoIWJvbmRzW3F1ZXN0aW9uSWRdLmFuc3dlcnNbZXZlbnQucmV0dXJuVmFsdWVzLmFuc3dlcl0pIHtcbiAgICAgICAgYm9uZHNbcXVlc3Rpb25JZF0uYW5zd2Vyc1tldmVudC5yZXR1cm5WYWx1ZXMuYW5zd2VyXSA9IDA7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGJvbmQgPSBOdW1iZXJzLmZyb21EZWNpbWFsc051bWJlcihldmVudC5yZXR1cm5WYWx1ZXMuYm9uZCwgZGVjaW1hbHMpXG5cbiAgICAgIGJvbmRzW3F1ZXN0aW9uSWRdLnRvdGFsICs9IGJvbmQ7XG4gICAgICBib25kc1txdWVzdGlvbklkXS5hbnN3ZXJzW2V2ZW50LnJldHVyblZhbHVlcy5hbnN3ZXJdICs9IGJvbmQ7XG4gICAgfSk7XG5cbiAgICBjbGFpbUV2ZW50cy5mb3JFYWNoKChldmVudCkgPT4ge1xuICAgICAgY29uc3QgcXVlc3Rpb25JZCA9IGV2ZW50LnJldHVyblZhbHVlcy5xdWVzdGlvbl9pZDtcblxuICAgICAgY29uc3QgYW1vdW50ID0gTnVtYmVycy5mcm9tRGVjaW1hbHNOdW1iZXIoZXZlbnQucmV0dXJuVmFsdWVzLmFtb3VudCwgZGVjaW1hbHMpO1xuXG4gICAgICBib25kc1txdWVzdGlvbklkXS5jbGFpbWVkICs9IGFtb3VudDtcblxuICAgICAgLy8gd2l0aGRyYXcgb2NjdXJyZWQgYWZ0ZXIgY2xhaW0sIG1hcmtpbmcgYXMgd2l0aGRyYXduXG4gICAgICBpZiAobGFzdFdpdGhkcmF3QmxvY2tOdW1iZXIgPj0gZXZlbnQuYmxvY2tOdW1iZXIpIGJvbmRzW3F1ZXN0aW9uSWRdLndpdGhkcmF3biA9IHRydWU7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gYm9uZHM7XG4gIH1cblxuICBhc3luYyBnZXRNeUFjdGlvbnMoKSB7XG4gICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuZ2V0TXlBY2NvdW50KCk7XG4gICAgaWYgKCF1c2VyKSByZXR1cm4gW107XG5cbiAgICByZXR1cm4gYXdhaXQgdGhpcy5nZXRVc2VyQWN0aW9ucyh7IHVzZXIgfSk7XG4gIH1cblxuICAvKipcbiAgICogQGZ1bmN0aW9uIGdldE15QWN0aW9uc1xuICAgKiBAZGVzY3JpcHRpb24gR2V0IE15IEFjdGlvbnNcbiAgICogQHJldHVybnMge0FycmF5fSBBY3Rpb25zXG4gICAqL1xuICBhc3luYyBnZXRVc2VyQWN0aW9ucyh7IHVzZXIgfSkge1xuICAgIGNvbnN0IGV2ZW50cyA9IGF3YWl0IHRoaXMuZ2V0RXZlbnRzKCdMb2dOZXdBbnN3ZXInLCB7IHVzZXIgfSk7XG4gICAgY29uc3QgZGVjaW1hbHMgPSBhd2FpdCB0aGlzLmdldFRva2VuRGVjaW1hbHMoKTtcblxuICAgIHJldHVybiBldmVudHMubWFwKGV2ZW50ID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGFjdGlvbjogJ0JvbmQnLFxuICAgICAgICBxdWVzdGlvbklkOiBldmVudC5yZXR1cm5WYWx1ZXMucXVlc3Rpb25faWQsXG4gICAgICAgIGFuc3dlcklkOiBldmVudC5yZXR1cm5WYWx1ZXMuYW5zd2VyLFxuICAgICAgICB2YWx1ZTogTnVtYmVycy5mcm9tRGVjaW1hbHNOdW1iZXIoZXZlbnQucmV0dXJuVmFsdWVzLmJvbmQsIGRlY2ltYWxzKSxcbiAgICAgICAgdGltZXN0YW1wOiBOdW1iZXJzLmZyb21CaWdOdW1iZXJUb0ludGVnZXIoZXZlbnQucmV0dXJuVmFsdWVzLnRzLCAxOCksXG4gICAgICAgIHRyYW5zYWN0aW9uSGFzaDogZXZlbnQudHJhbnNhY3Rpb25IYXNoXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIGFzeW5jIGdldE15UXVlc3Rpb25zKCkge1xuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB0aGlzLmdldE15QWNjb3VudCgpO1xuICAgIGlmICghdXNlcikgcmV0dXJuIFtdO1xuXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZ2V0VXNlclF1ZXN0aW9ucyh7IHVzZXIgfSk7XG4gIH1cblxuICAvKipcbiAgICogQGZ1bmN0aW9uIGdldE15UXVlc3Rpb25zXG4gICAqIEBkZXNjcmlwdGlvbiBHZXQgTXkgUXVlc3Rpb25zXG4gICAqIEByZXR1cm5zIHtBcnJheX0gUXVlc3Rpb25zXG4gICAqL1xuICBhc3luYyBnZXRVc2VyUXVlc3Rpb25zKHsgdXNlciB9KSB7XG4gICAgY29uc3QgZXZlbnRzID0gYXdhaXQgdGhpcy5nZXRFdmVudHMoJ0xvZ05ld0Fuc3dlcicsIHsgdXNlciB9KTtcbiAgICBjb25zdCBsb2dRdWVzdGlvbkV2ZW50cyA9IGF3YWl0IHRoaXMuZ2V0RXZlbnRzKCdMb2dOZXdRdWVzdGlvbicpO1xuXG4gICAgLy8gZ2V0dGluZyB1bmlxdWUgcXVlc3Rpb24gaWRzXG4gICAgY29uc3QgcXVlc3Rpb25JZHMgPSBldmVudHMubWFwKGV2ZW50ID0+IGV2ZW50LnJldHVyblZhbHVlcy5xdWVzdGlvbl9pZCkuZmlsdGVyKCh2YWx1ZSwgaW5kZXgsIHNlbGYpID0+IHNlbGYuaW5kZXhPZih2YWx1ZSkgPT09IGluZGV4KTtcbiAgICBjb25zdCBxdWVzdGlvbnMgPSBsb2dRdWVzdGlvbkV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gcXVlc3Rpb25JZHMuaW5jbHVkZXMoZXZlbnQucmV0dXJuVmFsdWVzLnF1ZXN0aW9uX2lkKSk7XG5cbiAgICByZXR1cm4gcXVlc3Rpb25zLm1hcChldmVudCA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBxdWVzdGlvbklkOiBldmVudC5yZXR1cm5WYWx1ZXMucXVlc3Rpb25faWQsXG4gICAgICAgIHF1ZXN0aW9uOiBldmVudC5yZXR1cm5WYWx1ZXMucXVlc3Rpb24sXG4gICAgICAgIHRyYW5zYWN0aW9uSGFzaDogZXZlbnQudHJhbnNhY3Rpb25IYXNoXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQGZ1bmN0aW9uIGNsYWltV2lubmluZ3NcbiAgICogQGRlc2NyaXB0aW9uIGNsYWltV2lubmluZ3NcbiAgICogQHBhcmFtIHtieXRlczMyfSBxdWVzdGlvbklkXG4gICAqL1xuICBhc3luYyBjbGFpbVdpbm5pbmdzQW5kV2l0aGRyYXcoeyBxdWVzdGlvbklkIH0pIHtcbiAgICBjb25zdCBxdWVzdGlvbiA9IGF3YWl0IHRoaXMuZ2V0UXVlc3Rpb24oeyBxdWVzdGlvbklkIH0pO1xuXG4gICAgLy8gYXNzdXJpbmcgcXVlc3Rpb24gc3RhdGUgaXMgZmluYWxpemVkXG4gICAgaWYgKCFxdWVzdGlvbi5pc0ZpbmFsaXplZCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgaWYgKHF1ZXN0aW9uLmlzQ2xhaW1lZCkge1xuICAgICAgLy8gcXVlc3Rpb24gYWxyZWFkeSBjbGFpbWVkLCBvbmx5IHBlcmZvcm1pbmcgYSB3aXRoZHJhdyBhY3Rpb25cbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy53aXRoZHJhdygpLFxuICAgICAgICBmYWxzZVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCBldmVudHMgPSBhd2FpdCB0aGlzLmdldEV2ZW50cygnTG9nTmV3QW5zd2VyJywgeyBxdWVzdGlvbl9pZDogcXVlc3Rpb25JZCB9KTtcblxuICAgIGNvbnN0IGhpc3RvcnlIYXNoZXMgPSBldmVudHMubWFwKChldmVudCkgPT4gZXZlbnQucmV0dXJuVmFsdWVzLmhpc3RvcnlfaGFzaCkuc2xpY2UoMCwgLTEpLnJldmVyc2UoKTtcbiAgICAvLyBhZGRpbmcgYW4gZW1wdHkgaGFzaCB0byB0aGUgaGlzdG9yeSBoYXNoZXNcbiAgICBoaXN0b3J5SGFzaGVzLnB1c2goTnVtYmVycy5udWxsSGFzaCgpKTtcblxuICAgIGNvbnN0IGFkZHJzID0gZXZlbnRzLm1hcCgoZXZlbnQpID0+IGV2ZW50LnJldHVyblZhbHVlcy51c2VyKS5yZXZlcnNlKCk7XG4gICAgY29uc3QgYm9uZHMgPSBldmVudHMubWFwKChldmVudCkgPT4gZXZlbnQucmV0dXJuVmFsdWVzLmJvbmQpLnJldmVyc2UoKTtcbiAgICBjb25zdCBhbnN3ZXJzID0gZXZlbnRzLm1hcCgoZXZlbnQpID0+IGV2ZW50LnJldHVyblZhbHVlcy5hbnN3ZXIpLnJldmVyc2UoKTtcblxuICAgIHJldHVybiBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuY2xhaW1NdWx0aXBsZUFuZFdpdGhkcmF3QmFsYW5jZShcbiAgICAgICAgW3F1ZXN0aW9uSWRdLFxuICAgICAgICBbaGlzdG9yeUhhc2hlcy5sZW5ndGhdLFxuICAgICAgICBoaXN0b3J5SGFzaGVzLFxuICAgICAgICBhZGRycyxcbiAgICAgICAgYm9uZHMsXG4gICAgICAgIGFuc3dlcnNcbiAgICAgICksXG4gICAgICBmYWxzZVxuICAgICk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZWFsaXRpb0VSQzIwQ29udHJhY3Q7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/RealitioERC20Contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/VotingContract.js":
/*!*******************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/VotingContract.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// const _ =  require(\"lodash\");\n// const moment = require(\"moment\");\n\nconst voting = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").voting);\n\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nconst actions = {\n  0: 'Upvote',\n  1: 'Remove Upvote',\n  2: 'Downvote',\n  3: 'Remove Downvote',\n}\n\n/**\n * Voting Contract Object\n * @constructor VotingContract\n * @param {Web3} web3\n * @param {Integer} decimals\n * @param {Address} contractAddress\n */\n\nclass VotingContract extends IContract {\n  constructor(params) {\n    super({ abi: voting, ...params });\n    this.contractName = 'voting';\n  }\n\n  /* Get Functions */\n  /**\n   * @function getMinimumRequiredBalance\n   * @description Returns minimum required ERC20 balance to vote\n   * @returns {Integer} requiredBalance\n   */\n  async getMinimumRequiredBalance() {\n    const requiredBalance = await this.params.contract\n      .getContract()\n      .methods\n      .requiredBalance()\n      .call();\n\n    return Numbers.fromDecimalsNumber(requiredBalance, 18)\n  }\n\n  /**\n   * @function getItemVotes\n   * @description Get Item Total upvotes and downvotes\n   * @param {Integer} itemId\n   * @returns {Integer} upvotes\n   * @returns {Integer} downvotes\n   */\n  async getItemVotes({ itemId }) {\n    let res = await this.params.contract\n      .getContract()\n      .methods\n      .getItemVotes(itemId)\n      .call();\n\n    return {\n      upvotes: Number(res[0]),\n      downvotes: Number(res[1]),\n    }\n  }\n\n  /**\n   * @function hasUserVotedItem\n   * @description Get info if user has voted the item\n   * @param {Integer} itemId\n   * @param {Address} user\n   * @returns {Boolean} upvoted\n   * @returns {Boolean} downvoted\n   */\n  async hasUserVotedItem({ user, itemId }) {\n    let res = await this.params.contract\n      .getContract()\n      .methods\n      .hasUserVotedItem(user, itemId)\n      .call();\n\n    return {\n      upvoted: res[0],\n      downvoted: res[1],\n    }\n  }\n\n  /**\n   * @function getUserActions\n   * @description Get user voting actions\n   * @param {Address} user\n   * @returns {Array} Voted Actions\n   */\n  async getUserActions({ user }) {\n    const events = await this.getEvents('ItemVoteAction', { user });\n\n    return events.map(event => {\n      return {\n        action: actions[Numbers.fromBigNumberToInteger(event.returnValues.action, 18)],\n        itemId: Numbers.fromBigNumberToInteger(event.returnValues.itemId, 18),\n        timestamp: Numbers.fromBigNumberToInteger(event.returnValues.timestamp, 18),\n        transactionHash: event.transactionHash,\n      }\n    });\n  }\n\n  /**\n   * @function getUserVotes\n   * @description Get user voting status for every item he has voted\n   * @param {Address} user\n   * @returns {Object} Voting status\n   */\n  async getUserVotes({ user }) {\n    const events = await this.getEvents('ItemVoteAction', { user });\n\n    const eventMap = new Map();\n\n    // go through all events and get the latest event per each item\n    events.forEach(event => {\n      eventMap.set(\n        Numbers.fromBigNumberToInteger(event.returnValues.itemId, 18),\n        actions[Numbers.fromBigNumberToInteger(event.returnValues.action, 18)]\n      );\n    });\n\n    const userVotes = {};\n    [...eventMap].forEach(([itemId, action]) => userVotes[itemId] = {\n      upvoted: action === actions[0],\n      downvoted: action === actions[2],\n    });\n\n    return userVotes;\n  }\n\n  /* POST User Functions */\n\n  /**\n   * @function upvoteItem\n   * @description Upvote an item\n   * @param {Integer} itemId\n   */\n  async upvoteItem({ itemId }) {\n    return await this.__sendTx(\n      this.getContract().methods.upvoteItem(itemId)\n    );\n  };\n\n  /**\n   * @function downvoteItem\n   * @description Downvote an item\n   * @param {Integer} itemId\n   */\n  async downvoteItem({ itemId }) {\n    return await this.__sendTx(\n      this.getContract().methods.downvoteItem(itemId)\n    );\n  };\n\n\n  /**\n   * @function removeUpvoteItem\n   * @description Remove Upvote from an item\n   * @param {Integer} itemId\n   */\n  async removeUpvoteItem({ itemId }) {\n    return await this.__sendTx(\n      this.getContract().methods.removeUpvoteItem(itemId)\n    );\n  };\n\n  /**\n   * @function removeDownvoteItem\n   * @description Remove Downvote from an item\n   * @param {Integer} itemId\n   */\n  async removeDownvoteItem({ itemId }) {\n    return await this.__sendTx(\n      this.getContract().methods.removeDownvoteItem(itemId)\n    );\n  };\n}\n\nmodule.exports = VotingContract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/VotingContract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/WETH9Contract.js":
/*!******************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/WETH9Contract.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const weth = (__webpack_require__(/*! ../interfaces */ \"(ssr)/./node_modules/polkamarkets-js/src/interfaces/index.js\").weth);\nconst Numbers = __webpack_require__(/*! ../utils/Numbers */ \"(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\");\nconst IContract = __webpack_require__(/*! ./IContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/IContract.js\");\n\nclass WETH9Contract extends IContract {\n  constructor(params) {\n    super({ abi: weth, ...params });\n    this.contractName = 'weth';\n  }\n\n  getDecimals() {\n    return 18;\n  }\n\n  async totalSupply() {\n    return Numbers.fromDecimals(await this.getContract().methods.totalSupply().call(), this.getDecimals());\n  }\n\n  async balanceOf({ address }) {\n    return Numbers.fromDecimalsNumber(await this.getContract().methods.balanceOf(address).call(), this.getDecimals());\n  }\n\n  async isApproved({ address, amount, spenderAddress }) {\n    try {\n      let approvedAmount = Numbers.fromDecimals(\n        await this.getContract().methods.allowance(address, spenderAddress).call(),\n        this.getDecimals()\n      );\n      return (approvedAmount >= amount);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async approve({ address, amount, callback }) {\n    try {\n      let amountWithDecimals = Numbers.toSmartContractDecimals(\n        amount,\n        this.getDecimals()\n      );\n      let res = await this.__sendTx(\n        this.getContract()\n          .methods.approve(address, amountWithDecimals),\n        null,\n        null,\n        callback\n      );\n      return res;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async deposit({ amount, callback }) {\n    try {\n      let amountWithDecimals = Numbers.toSmartContractDecimals(\n        amount,\n        this.getDecimals()\n      );\n      let res = await this.__sendTx(\n        this.getContract().methods.deposit(),\n        false,\n        amountWithDecimals,\n        callback\n      );\n      return res;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async withdraw({ amount, callback }) {\n    try {\n      let amountWithDecimals = Numbers.toSmartContractDecimals(\n        amount,\n        this.getDecimals()\n      );\n      let res = await this.__sendTx(\n        this.getContract()\n          .methods.withdraw(amountWithDecimals),\n        null,\n        null,\n        callback\n      );\n      return res;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\nmodule.exports = WETH9Contract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvV0VUSDlDb250cmFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLCtHQUE2QjtBQUMxQyxnQkFBZ0IsbUJBQU8sQ0FBQyxtRkFBa0I7QUFDMUMsa0JBQWtCLG1CQUFPLENBQUMsaUZBQWE7O0FBRXZDO0FBQ0E7QUFDQSxZQUFZLHNCQUFzQjtBQUNsQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTs7QUFFQSxxQkFBcUIsaUNBQWlDO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLDJCQUEyQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL3BvbGthbWFya2V0cy1qcy9zcmMvbW9kZWxzL1dFVEg5Q29udHJhY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgd2V0aCA9IHJlcXVpcmUoXCIuLi9pbnRlcmZhY2VzXCIpLndldGg7XG5jb25zdCBOdW1iZXJzID0gcmVxdWlyZShcIi4uL3V0aWxzL051bWJlcnNcIik7XG5jb25zdCBJQ29udHJhY3QgPSByZXF1aXJlKCcuL0lDb250cmFjdCcpO1xuXG5jbGFzcyBXRVRIOUNvbnRyYWN0IGV4dGVuZHMgSUNvbnRyYWN0IHtcbiAgY29uc3RydWN0b3IocGFyYW1zKSB7XG4gICAgc3VwZXIoeyBhYmk6IHdldGgsIC4uLnBhcmFtcyB9KTtcbiAgICB0aGlzLmNvbnRyYWN0TmFtZSA9ICd3ZXRoJztcbiAgfVxuXG4gIGdldERlY2ltYWxzKCkge1xuICAgIHJldHVybiAxODtcbiAgfVxuXG4gIGFzeW5jIHRvdGFsU3VwcGx5KCkge1xuICAgIHJldHVybiBOdW1iZXJzLmZyb21EZWNpbWFscyhhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy50b3RhbFN1cHBseSgpLmNhbGwoKSwgdGhpcy5nZXREZWNpbWFscygpKTtcbiAgfVxuXG4gIGFzeW5jIGJhbGFuY2VPZih7IGFkZHJlc3MgfSkge1xuICAgIHJldHVybiBOdW1iZXJzLmZyb21EZWNpbWFsc051bWJlcihhd2FpdCB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5iYWxhbmNlT2YoYWRkcmVzcykuY2FsbCgpLCB0aGlzLmdldERlY2ltYWxzKCkpO1xuICB9XG5cbiAgYXN5bmMgaXNBcHByb3ZlZCh7IGFkZHJlc3MsIGFtb3VudCwgc3BlbmRlckFkZHJlc3MgfSkge1xuICAgIHRyeSB7XG4gICAgICBsZXQgYXBwcm92ZWRBbW91bnQgPSBOdW1iZXJzLmZyb21EZWNpbWFscyhcbiAgICAgICAgYXdhaXQgdGhpcy5nZXRDb250cmFjdCgpLm1ldGhvZHMuYWxsb3dhbmNlKGFkZHJlc3MsIHNwZW5kZXJBZGRyZXNzKS5jYWxsKCksXG4gICAgICAgIHRoaXMuZ2V0RGVjaW1hbHMoKVxuICAgICAgKTtcbiAgICAgIHJldHVybiAoYXBwcm92ZWRBbW91bnQgPj0gYW1vdW50KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH1cblxuICBhc3luYyBhcHByb3ZlKHsgYWRkcmVzcywgYW1vdW50LCBjYWxsYmFjayB9KSB7XG4gICAgdHJ5IHtcbiAgICAgIGxldCBhbW91bnRXaXRoRGVjaW1hbHMgPSBOdW1iZXJzLnRvU21hcnRDb250cmFjdERlY2ltYWxzKFxuICAgICAgICBhbW91bnQsXG4gICAgICAgIHRoaXMuZ2V0RGVjaW1hbHMoKVxuICAgICAgKTtcbiAgICAgIGxldCByZXMgPSBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgICB0aGlzLmdldENvbnRyYWN0KClcbiAgICAgICAgICAubWV0aG9kcy5hcHByb3ZlKGFkZHJlc3MsIGFtb3VudFdpdGhEZWNpbWFscyksXG4gICAgICAgIG51bGwsXG4gICAgICAgIG51bGwsXG4gICAgICAgIGNhbGxiYWNrXG4gICAgICApO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH1cblxuICBhc3luYyBkZXBvc2l0KHsgYW1vdW50LCBjYWxsYmFjayB9KSB7XG4gICAgdHJ5IHtcbiAgICAgIGxldCBhbW91bnRXaXRoRGVjaW1hbHMgPSBOdW1iZXJzLnRvU21hcnRDb250cmFjdERlY2ltYWxzKFxuICAgICAgICBhbW91bnQsXG4gICAgICAgIHRoaXMuZ2V0RGVjaW1hbHMoKVxuICAgICAgKTtcbiAgICAgIGxldCByZXMgPSBhd2FpdCB0aGlzLl9fc2VuZFR4KFxuICAgICAgICB0aGlzLmdldENvbnRyYWN0KCkubWV0aG9kcy5kZXBvc2l0KCksXG4gICAgICAgIGZhbHNlLFxuICAgICAgICBhbW91bnRXaXRoRGVjaW1hbHMsXG4gICAgICAgIGNhbGxiYWNrXG4gICAgICApO1xuICAgICAgcmV0dXJuIHJlcztcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH1cblxuICBhc3luYyB3aXRoZHJhdyh7IGFtb3VudCwgY2FsbGJhY2sgfSkge1xuICAgIHRyeSB7XG4gICAgICBsZXQgYW1vdW50V2l0aERlY2ltYWxzID0gTnVtYmVycy50b1NtYXJ0Q29udHJhY3REZWNpbWFscyhcbiAgICAgICAgYW1vdW50LFxuICAgICAgICB0aGlzLmdldERlY2ltYWxzKClcbiAgICAgICk7XG4gICAgICBsZXQgcmVzID0gYXdhaXQgdGhpcy5fX3NlbmRUeChcbiAgICAgICAgdGhpcy5nZXRDb250cmFjdCgpXG4gICAgICAgICAgLm1ldGhvZHMud2l0aGRyYXcoYW1vdW50V2l0aERlY2ltYWxzKSxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgbnVsbCxcbiAgICAgICAgY2FsbGJhY2tcbiAgICAgICk7XG4gICAgICByZXR1cm4gcmVzO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFdFVEg5Q29udHJhY3Q7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/WETH9Contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/models/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/models/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ERC20Contract = __webpack_require__(/*! ./ERC20Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/ERC20Contract.js\");\nconst PredictionMarketContract = __webpack_require__(/*! ./PredictionMarketContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketContract.js\");\nconst PredictionMarketV2Contract = __webpack_require__(/*! ./PredictionMarketV2Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV2Contract.js\");\nconst PredictionMarketV3Contract = __webpack_require__(/*! ./PredictionMarketV3Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3Contract.js\");\nconst PredictionMarketV3PlusContract = __webpack_require__(/*! ./PredictionMarketV3PlusContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3PlusContract.js\");\nconst PredictionMarketV3ManagerContract = __webpack_require__(/*! ./PredictionMarketV3ManagerContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3ManagerContract.js\");\nconst PredictionMarketV3ControllerContract = __webpack_require__(/*! ./PredictionMarketV3ControllerContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3ControllerContract.js\");\nconst PredictionMarketV3FactoryContract = __webpack_require__(/*! ./PredictionMarketV3FactoryContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3FactoryContract.js\");\nconst PredictionMarketV3QuerierContract = __webpack_require__(/*! ./PredictionMarketV3QuerierContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/PredictionMarketV3QuerierContract.js\");\nconst AchievementsContract = __webpack_require__(/*! ./AchievementsContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/AchievementsContract.js\");\nconst RealitioERC20Contract = __webpack_require__(/*! ./RealitioERC20Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/RealitioERC20Contract.js\");\nconst VotingContract = __webpack_require__(/*! ./VotingContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/VotingContract.js\");\nconst FantasyERC20Contract = __webpack_require__(/*! ./FantasyERC20Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/FantasyERC20Contract.js\");\nconst WETH9Contract = __webpack_require__(/*! ./WETH9Contract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/WETH9Contract.js\");\nconst ArbitrationContract = __webpack_require__(/*! ./ArbitrationContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/ArbitrationContract.js\");\nconst ArbitrationProxyContract = __webpack_require__(/*! ./ArbitrationProxyContract */ \"(ssr)/./node_modules/polkamarkets-js/src/models/ArbitrationProxyContract.js\");\n\nmodule.exports = {\n  ERC20Contract,\n  PredictionMarketContract,\n  PredictionMarketV2Contract,\n  PredictionMarketV3Contract,\n  PredictionMarketV3PlusContract,\n  PredictionMarketV3ManagerContract,\n  PredictionMarketV3QuerierContract,\n  AchievementsContract,\n  RealitioERC20Contract,\n  VotingContract,\n  FantasyERC20Contract,\n  WETH9Contract,\n  ArbitrationContract,\n  ArbitrationProxyContract,\n  PredictionMarketV3FactoryContract,\n  PredictionMarketV3ControllerContract\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy9tb2RlbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCLG1CQUFPLENBQUMseUZBQWlCO0FBQy9DLGlDQUFpQyxtQkFBTyxDQUFDLCtHQUE0QjtBQUNyRSxtQ0FBbUMsbUJBQU8sQ0FBQyxtSEFBOEI7QUFDekUsbUNBQW1DLG1CQUFPLENBQUMsbUhBQThCO0FBQ3pFLHVDQUF1QyxtQkFBTyxDQUFDLDJIQUFrQztBQUNqRiwwQ0FBMEMsbUJBQU8sQ0FBQyxpSUFBcUM7QUFDdkYsNkNBQTZDLG1CQUFPLENBQUMsdUlBQXdDO0FBQzdGLDBDQUEwQyxtQkFBTyxDQUFDLGlJQUFxQztBQUN2RiwwQ0FBMEMsbUJBQU8sQ0FBQyxpSUFBcUM7QUFDdkYsNkJBQTZCLG1CQUFPLENBQUMsdUdBQXdCO0FBQzdELDhCQUE4QixtQkFBTyxDQUFDLHlHQUF5QjtBQUMvRCx1QkFBdUIsbUJBQU8sQ0FBQywyRkFBa0I7QUFDakQsNkJBQTZCLG1CQUFPLENBQUMsdUdBQXdCO0FBQzdELHNCQUFzQixtQkFBTyxDQUFDLHlGQUFpQjtBQUMvQyw0QkFBNEIsbUJBQU8sQ0FBQyxxR0FBdUI7QUFDM0QsaUNBQWlDLG1CQUFPLENBQUMsK0dBQTRCOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL3BvbGthbWFya2V0cy1qcy9zcmMvbW9kZWxzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEVSQzIwQ29udHJhY3QgPSByZXF1aXJlKCcuL0VSQzIwQ29udHJhY3QnKTtcbmNvbnN0IFByZWRpY3Rpb25NYXJrZXRDb250cmFjdCA9IHJlcXVpcmUoJy4vUHJlZGljdGlvbk1hcmtldENvbnRyYWN0Jyk7XG5jb25zdCBQcmVkaWN0aW9uTWFya2V0VjJDb250cmFjdCA9IHJlcXVpcmUoJy4vUHJlZGljdGlvbk1hcmtldFYyQ29udHJhY3QnKTtcbmNvbnN0IFByZWRpY3Rpb25NYXJrZXRWM0NvbnRyYWN0ID0gcmVxdWlyZSgnLi9QcmVkaWN0aW9uTWFya2V0VjNDb250cmFjdCcpO1xuY29uc3QgUHJlZGljdGlvbk1hcmtldFYzUGx1c0NvbnRyYWN0ID0gcmVxdWlyZSgnLi9QcmVkaWN0aW9uTWFya2V0VjNQbHVzQ29udHJhY3QnKTtcbmNvbnN0IFByZWRpY3Rpb25NYXJrZXRWM01hbmFnZXJDb250cmFjdCA9IHJlcXVpcmUoJy4vUHJlZGljdGlvbk1hcmtldFYzTWFuYWdlckNvbnRyYWN0Jyk7XG5jb25zdCBQcmVkaWN0aW9uTWFya2V0VjNDb250cm9sbGVyQ29udHJhY3QgPSByZXF1aXJlKCcuL1ByZWRpY3Rpb25NYXJrZXRWM0NvbnRyb2xsZXJDb250cmFjdCcpO1xuY29uc3QgUHJlZGljdGlvbk1hcmtldFYzRmFjdG9yeUNvbnRyYWN0ID0gcmVxdWlyZSgnLi9QcmVkaWN0aW9uTWFya2V0VjNGYWN0b3J5Q29udHJhY3QnKTtcbmNvbnN0IFByZWRpY3Rpb25NYXJrZXRWM1F1ZXJpZXJDb250cmFjdCA9IHJlcXVpcmUoJy4vUHJlZGljdGlvbk1hcmtldFYzUXVlcmllckNvbnRyYWN0Jyk7XG5jb25zdCBBY2hpZXZlbWVudHNDb250cmFjdCA9IHJlcXVpcmUoJy4vQWNoaWV2ZW1lbnRzQ29udHJhY3QnKTtcbmNvbnN0IFJlYWxpdGlvRVJDMjBDb250cmFjdCA9IHJlcXVpcmUoJy4vUmVhbGl0aW9FUkMyMENvbnRyYWN0Jyk7XG5jb25zdCBWb3RpbmdDb250cmFjdCA9IHJlcXVpcmUoJy4vVm90aW5nQ29udHJhY3QnKTtcbmNvbnN0IEZhbnRhc3lFUkMyMENvbnRyYWN0ID0gcmVxdWlyZSgnLi9GYW50YXN5RVJDMjBDb250cmFjdCcpO1xuY29uc3QgV0VUSDlDb250cmFjdCA9IHJlcXVpcmUoJy4vV0VUSDlDb250cmFjdCcpO1xuY29uc3QgQXJiaXRyYXRpb25Db250cmFjdCA9IHJlcXVpcmUoJy4vQXJiaXRyYXRpb25Db250cmFjdCcpO1xuY29uc3QgQXJiaXRyYXRpb25Qcm94eUNvbnRyYWN0ID0gcmVxdWlyZSgnLi9BcmJpdHJhdGlvblByb3h5Q29udHJhY3QnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEVSQzIwQ29udHJhY3QsXG4gIFByZWRpY3Rpb25NYXJrZXRDb250cmFjdCxcbiAgUHJlZGljdGlvbk1hcmtldFYyQ29udHJhY3QsXG4gIFByZWRpY3Rpb25NYXJrZXRWM0NvbnRyYWN0LFxuICBQcmVkaWN0aW9uTWFya2V0VjNQbHVzQ29udHJhY3QsXG4gIFByZWRpY3Rpb25NYXJrZXRWM01hbmFnZXJDb250cmFjdCxcbiAgUHJlZGljdGlvbk1hcmtldFYzUXVlcmllckNvbnRyYWN0LFxuICBBY2hpZXZlbWVudHNDb250cmFjdCxcbiAgUmVhbGl0aW9FUkMyMENvbnRyYWN0LFxuICBWb3RpbmdDb250cmFjdCxcbiAgRmFudGFzeUVSQzIwQ29udHJhY3QsXG4gIFdFVEg5Q29udHJhY3QsXG4gIEFyYml0cmF0aW9uQ29udHJhY3QsXG4gIEFyYml0cmF0aW9uUHJveHlDb250cmFjdCxcbiAgUHJlZGljdGlvbk1hcmtldFYzRmFjdG9yeUNvbnRyYWN0LFxuICBQcmVkaWN0aW9uTWFya2V0VjNDb250cm9sbGVyQ29udHJhY3Rcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/models/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/utils/Account.js":
/*!***********************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/utils/Account.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("class Account {\n\n  constructor(web3, account) {\n    this.web3 = web3;\n    this.account = account;\n  }\n\n\n  async getBalance() {\n    let wei = await this.web3.eth.getBalance(this.getAddress());\n    return this.web3.utils.fromWei(wei, 'ether')\n  }\n\n  getAddress() {\n    return this.account.address;\n  }\n\n  getPrivateKey() {\n    return this.account.privateKey;\n  }\n\n  getAccount() {\n    return this.account\n  }\n\n  async sendEther(amount, address, data = null) {\n    let tx = {\n      data: data,\n      from: this.getAddress(),\n      to: address,\n      gas: 443000,\n      value: amount\n    };\n    let result = await this.account.signTransaction(tx);\n    let transaction = await this.web3.eth.sendSignedTransaction(result.rawTransaction);\n    return transaction;\n  }\n}\n\nmodule.exports = Account;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy91dGlscy9BY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy91dGlscy9BY2NvdW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEFjY291bnQge1xuXG4gIGNvbnN0cnVjdG9yKHdlYjMsIGFjY291bnQpIHtcbiAgICB0aGlzLndlYjMgPSB3ZWIzO1xuICAgIHRoaXMuYWNjb3VudCA9IGFjY291bnQ7XG4gIH1cblxuXG4gIGFzeW5jIGdldEJhbGFuY2UoKSB7XG4gICAgbGV0IHdlaSA9IGF3YWl0IHRoaXMud2ViMy5ldGguZ2V0QmFsYW5jZSh0aGlzLmdldEFkZHJlc3MoKSk7XG4gICAgcmV0dXJuIHRoaXMud2ViMy51dGlscy5mcm9tV2VpKHdlaSwgJ2V0aGVyJylcbiAgfVxuXG4gIGdldEFkZHJlc3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuYWNjb3VudC5hZGRyZXNzO1xuICB9XG5cbiAgZ2V0UHJpdmF0ZUtleSgpIHtcbiAgICByZXR1cm4gdGhpcy5hY2NvdW50LnByaXZhdGVLZXk7XG4gIH1cblxuICBnZXRBY2NvdW50KCkge1xuICAgIHJldHVybiB0aGlzLmFjY291bnRcbiAgfVxuXG4gIGFzeW5jIHNlbmRFdGhlcihhbW91bnQsIGFkZHJlc3MsIGRhdGEgPSBudWxsKSB7XG4gICAgbGV0IHR4ID0ge1xuICAgICAgZGF0YTogZGF0YSxcbiAgICAgIGZyb206IHRoaXMuZ2V0QWRkcmVzcygpLFxuICAgICAgdG86IGFkZHJlc3MsXG4gICAgICBnYXM6IDQ0MzAwMCxcbiAgICAgIHZhbHVlOiBhbW91bnRcbiAgICB9O1xuICAgIGxldCByZXN1bHQgPSBhd2FpdCB0aGlzLmFjY291bnQuc2lnblRyYW5zYWN0aW9uKHR4KTtcbiAgICBsZXQgdHJhbnNhY3Rpb24gPSBhd2FpdCB0aGlzLndlYjMuZXRoLnNlbmRTaWduZWRUcmFuc2FjdGlvbihyZXN1bHQucmF3VHJhbnNhY3Rpb24pO1xuICAgIHJldHVybiB0cmFuc2FjdGlvbjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFjY291bnQ7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/utils/Account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/utils/Contract.js":
/*!************************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/utils/Contract.js ***!
  \************************************************************/
/***/ ((module) => {

eval("\nclass Contract {\n  constructor(web3, contract_json, address) {\n    this.web3 = web3;\n    this.json = contract_json;\n    this.abi = contract_json.abi;\n    this.address = address;\n    this.contract = new web3.eth.Contract(contract_json.abi, address);\n  }\n\n  async deploy(account, abi, byteCode, args = [], callback = () => { }) {\n    this.contract = new this.web3.eth.Contract(abi);\n    if (account) {\n      const data = this.contract.deploy({\n        data: byteCode,\n        arguments: args,\n      });\n\n      const rawTransaction = (await account.getAccount().signTransaction({\n        data: data.encodeABI(),\n        from: account.getAddress(),\n        gas: 5913388,\n      })).rawTransaction;\n\n      return await this.web3.eth.sendSignedTransaction(rawTransaction);\n    } else {\n      const accounts = await this.web3.eth.getAccounts();\n      const res = await this.__metamaskDeploy({\n        byteCode,\n        args,\n        acc: accounts[0],\n        callback,\n      });\n      this.address = res.contractAddress;\n      return res;\n    }\n  }\n\n  async __metamaskDeploy({ byteCode, args, acc, callback = () => { } }) {\n    return new Promise((resolve, reject) => {\n      try {\n        this.getContract()\n          .deploy({\n            data: byteCode,\n            arguments: args,\n          }).send({ from: acc })\n          .on('confirmation', (confirmationNumber, receipt) => {\n            callback(confirmationNumber)\n            if (confirmationNumber > 0) {\n              resolve(receipt);\n            }\n          })\n          .on('error', err => { reject(err) });\n      } catch (err) {\n        reject(err);\n      }\n    })\n  }\n\n  async use(contract_json, address) {\n    this.json = contract_json;\n    this.abi = contract_json.abi;\n    this.address = address ? address : this.address;\n    this.contract = new this.web3.eth.Contract(\n      contract_json.abi,\n      this.address\n    );\n  }\n\n  async send(account, byteCode, value = '0x0', callback = () => { }) {\n    return new Promise(async (resolve, reject) => {\n      let gasPrice;\n      try {\n        gasPrice = await this.web3.eth.getGasPrice();\n        gasPrice *= 2;\n      } catch (err) {\n        // should be non-blocking, defaulting to 10 gwei\n        gasPrice = '10000000000';\n      }\n\n      let tx = {\n        data: byteCode,\n        from: account.address,\n        to: this.address,\n        gas: 4430000,\n        gasPrice,\n        value: value ? value : '0x0'\n      }\n\n      let result = await account.signTransaction(tx);\n      this.web3.eth.sendSignedTransaction(result.rawTransaction)\n        .on('confirmation', (confirmationNumber, receipt) => {\n          callback(confirmationNumber);\n          if (confirmationNumber > 0) {\n            resolve(receipt);\n          }\n        })\n        .on('error', err => { reject(err) });\n    })\n\n  }\n\n  getContract() {\n    return this.contract;\n  }\n\n  getABI() {\n    return this.abi;\n  }\n\n  getJSON() {\n    return this.json;\n  }\n\n  getAddress() {\n    return this.address;\n  }\n}\n\nmodule.exports = Contract;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy91dGlscy9Db250cmFjdC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzRUFBc0U7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwyQkFBMkIsMkNBQTJDO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUyxXQUFXO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsZ0NBQWdDLGFBQWE7QUFDN0MsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1FQUFtRTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULDhCQUE4QixhQUFhO0FBQzNDLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL3BvbGthbWFya2V0cy1qcy9zcmMvdXRpbHMvQ29udHJhY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jbGFzcyBDb250cmFjdCB7XG4gIGNvbnN0cnVjdG9yKHdlYjMsIGNvbnRyYWN0X2pzb24sIGFkZHJlc3MpIHtcbiAgICB0aGlzLndlYjMgPSB3ZWIzO1xuICAgIHRoaXMuanNvbiA9IGNvbnRyYWN0X2pzb247XG4gICAgdGhpcy5hYmkgPSBjb250cmFjdF9qc29uLmFiaTtcbiAgICB0aGlzLmFkZHJlc3MgPSBhZGRyZXNzO1xuICAgIHRoaXMuY29udHJhY3QgPSBuZXcgd2ViMy5ldGguQ29udHJhY3QoY29udHJhY3RfanNvbi5hYmksIGFkZHJlc3MpO1xuICB9XG5cbiAgYXN5bmMgZGVwbG95KGFjY291bnQsIGFiaSwgYnl0ZUNvZGUsIGFyZ3MgPSBbXSwgY2FsbGJhY2sgPSAoKSA9PiB7IH0pIHtcbiAgICB0aGlzLmNvbnRyYWN0ID0gbmV3IHRoaXMud2ViMy5ldGguQ29udHJhY3QoYWJpKTtcbiAgICBpZiAoYWNjb3VudCkge1xuICAgICAgY29uc3QgZGF0YSA9IHRoaXMuY29udHJhY3QuZGVwbG95KHtcbiAgICAgICAgZGF0YTogYnl0ZUNvZGUsXG4gICAgICAgIGFyZ3VtZW50czogYXJncyxcbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCByYXdUcmFuc2FjdGlvbiA9IChhd2FpdCBhY2NvdW50LmdldEFjY291bnQoKS5zaWduVHJhbnNhY3Rpb24oe1xuICAgICAgICBkYXRhOiBkYXRhLmVuY29kZUFCSSgpLFxuICAgICAgICBmcm9tOiBhY2NvdW50LmdldEFkZHJlc3MoKSxcbiAgICAgICAgZ2FzOiA1OTEzMzg4LFxuICAgICAgfSkpLnJhd1RyYW5zYWN0aW9uO1xuXG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy53ZWIzLmV0aC5zZW5kU2lnbmVkVHJhbnNhY3Rpb24ocmF3VHJhbnNhY3Rpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBhY2NvdW50cyA9IGF3YWl0IHRoaXMud2ViMy5ldGguZ2V0QWNjb3VudHMoKTtcbiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuX19tZXRhbWFza0RlcGxveSh7XG4gICAgICAgIGJ5dGVDb2RlLFxuICAgICAgICBhcmdzLFxuICAgICAgICBhY2M6IGFjY291bnRzWzBdLFxuICAgICAgICBjYWxsYmFjayxcbiAgICAgIH0pO1xuICAgICAgdGhpcy5hZGRyZXNzID0gcmVzLmNvbnRyYWN0QWRkcmVzcztcbiAgICAgIHJldHVybiByZXM7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgX19tZXRhbWFza0RlcGxveSh7IGJ5dGVDb2RlLCBhcmdzLCBhY2MsIGNhbGxiYWNrID0gKCkgPT4geyB9IH0pIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgdGhpcy5nZXRDb250cmFjdCgpXG4gICAgICAgICAgLmRlcGxveSh7XG4gICAgICAgICAgICBkYXRhOiBieXRlQ29kZSxcbiAgICAgICAgICAgIGFyZ3VtZW50czogYXJncyxcbiAgICAgICAgICB9KS5zZW5kKHsgZnJvbTogYWNjIH0pXG4gICAgICAgICAgLm9uKCdjb25maXJtYXRpb24nLCAoY29uZmlybWF0aW9uTnVtYmVyLCByZWNlaXB0KSA9PiB7XG4gICAgICAgICAgICBjYWxsYmFjayhjb25maXJtYXRpb25OdW1iZXIpXG4gICAgICAgICAgICBpZiAoY29uZmlybWF0aW9uTnVtYmVyID4gMCkge1xuICAgICAgICAgICAgICByZXNvbHZlKHJlY2VpcHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLm9uKCdlcnJvcicsIGVyciA9PiB7IHJlamVjdChlcnIpIH0pO1xuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBhc3luYyB1c2UoY29udHJhY3RfanNvbiwgYWRkcmVzcykge1xuICAgIHRoaXMuanNvbiA9IGNvbnRyYWN0X2pzb247XG4gICAgdGhpcy5hYmkgPSBjb250cmFjdF9qc29uLmFiaTtcbiAgICB0aGlzLmFkZHJlc3MgPSBhZGRyZXNzID8gYWRkcmVzcyA6IHRoaXMuYWRkcmVzcztcbiAgICB0aGlzLmNvbnRyYWN0ID0gbmV3IHRoaXMud2ViMy5ldGguQ29udHJhY3QoXG4gICAgICBjb250cmFjdF9qc29uLmFiaSxcbiAgICAgIHRoaXMuYWRkcmVzc1xuICAgICk7XG4gIH1cblxuICBhc3luYyBzZW5kKGFjY291bnQsIGJ5dGVDb2RlLCB2YWx1ZSA9ICcweDAnLCBjYWxsYmFjayA9ICgpID0+IHsgfSkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgZ2FzUHJpY2U7XG4gICAgICB0cnkge1xuICAgICAgICBnYXNQcmljZSA9IGF3YWl0IHRoaXMud2ViMy5ldGguZ2V0R2FzUHJpY2UoKTtcbiAgICAgICAgZ2FzUHJpY2UgKj0gMjtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAvLyBzaG91bGQgYmUgbm9uLWJsb2NraW5nLCBkZWZhdWx0aW5nIHRvIDEwIGd3ZWlcbiAgICAgICAgZ2FzUHJpY2UgPSAnMTAwMDAwMDAwMDAnO1xuICAgICAgfVxuXG4gICAgICBsZXQgdHggPSB7XG4gICAgICAgIGRhdGE6IGJ5dGVDb2RlLFxuICAgICAgICBmcm9tOiBhY2NvdW50LmFkZHJlc3MsXG4gICAgICAgIHRvOiB0aGlzLmFkZHJlc3MsXG4gICAgICAgIGdhczogNDQzMDAwMCxcbiAgICAgICAgZ2FzUHJpY2UsXG4gICAgICAgIHZhbHVlOiB2YWx1ZSA/IHZhbHVlIDogJzB4MCdcbiAgICAgIH1cblxuICAgICAgbGV0IHJlc3VsdCA9IGF3YWl0IGFjY291bnQuc2lnblRyYW5zYWN0aW9uKHR4KTtcbiAgICAgIHRoaXMud2ViMy5ldGguc2VuZFNpZ25lZFRyYW5zYWN0aW9uKHJlc3VsdC5yYXdUcmFuc2FjdGlvbilcbiAgICAgICAgLm9uKCdjb25maXJtYXRpb24nLCAoY29uZmlybWF0aW9uTnVtYmVyLCByZWNlaXB0KSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2soY29uZmlybWF0aW9uTnVtYmVyKTtcbiAgICAgICAgICBpZiAoY29uZmlybWF0aW9uTnVtYmVyID4gMCkge1xuICAgICAgICAgICAgcmVzb2x2ZShyZWNlaXB0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5vbignZXJyb3InLCBlcnIgPT4geyByZWplY3QoZXJyKSB9KTtcbiAgICB9KVxuXG4gIH1cblxuICBnZXRDb250cmFjdCgpIHtcbiAgICByZXR1cm4gdGhpcy5jb250cmFjdDtcbiAgfVxuXG4gIGdldEFCSSgpIHtcbiAgICByZXR1cm4gdGhpcy5hYmk7XG4gIH1cblxuICBnZXRKU09OKCkge1xuICAgIHJldHVybiB0aGlzLmpzb247XG4gIH1cblxuICBnZXRBZGRyZXNzKCkge1xuICAgIHJldHVybiB0aGlzLmFkZHJlc3M7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb250cmFjdDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/utils/Contract.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js":
/*!***********************************************************!*\
  !*** ./node_modules/polkamarkets-js/src/utils/Numbers.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const moment = __webpack_require__(/*! moment */ \"(ssr)/./node_modules/moment/moment.js\");\n\nNumber.prototype.noExponents = function () {\n  var data = String(this).split(/[eE]/)\n  if (data.length == 1) return data[0]\n\n  var z = '',\n    sign = this < 0 ? '-' : '',\n    str = data[0].replace('.', ''),\n    mag = Number(data[1]) + 1\n\n  if (mag < 0) {\n    z = sign + '0.'\n    while (mag++) z += '0'\n    return z + str.replace(/^\\-/, '')\n  }\n  mag -= str.length\n  while (mag--) z += '0'\n  return str + z\n}\n\nclass numbers {\n  constructor() {}\n\n  fromDayMonthYear(date) {\n    let mom = moment().dayOfYear(date.day)\n    mom.set('hour', date.hour)\n    mom.set('year', date.year)\n    return mom.format('ddd, hA')\n  }\n\n  fromHex(hex){\n    return hex.toString();\n  }\n\n  toFloat(number) {\n    return parseFloat(parseFloat(number).toFixed(2))\n  }\n\n  timeToSmartContractTime(time) {\n    return parseInt(new Date(time).getTime() / 1000)\n  }\n\n  toDate(date) {\n    let mom = moment().dayOfYear(date.day)\n    mom.set('hour', date.hour)\n    mom.set('year', date.year)\n    return mom.unix()\n  }\n\n  toSmartContractDecimals(value, decimals) {\n    let numberWithNoExponents = new Number((Number(value) * 10 ** decimals).toFixed(0)).noExponents();\n    return numberWithNoExponents;\n  }\n\n  fromBigNumberToInteger(value, decimals = 18) {\n    return Math.round((value / Math.pow(10, decimals)) * 1000000000000000000);\n  }\n\n  fromDecimals(value, decimals) {\n      return  Number(parseFloat(value / 10 ** decimals).toPrecision(decimals)).noExponents();\n  }\n\n  fromDecimalsNumber(value, decimals) {\n      const number = Number(parseFloat(value / 10 ** decimals).toPrecision(decimals)).noExponents();\n      return Number(number);\n  }\n\n  fromExponential(x) {\n    if (Math.abs(x) < 1.0) {\n      var e = parseInt(x.toString().split('e-')[1])\n      if (e) {\n        x *= Math.pow(10, e - 1)\n        x = '0.' + new Array(e).join('0') + x.toString().substring(2)\n      }\n    } else {\n      var e = parseInt(x.toString().split('+')[1])\n      if (e > 20) {\n        e -= 20\n        x /= Math.pow(10, e)\n        x += new Array(e + 1).join('0')\n      }\n    }\n    return x\n  }\n\n  nullHash() {\n    return '0x0000000000000000000000000000000000000000000000000000000000000000';\n  }\n}\n\nlet Numbers = new numbers()\n\nmodule.exports = Numbers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcG9sa2FtYXJrZXRzLWpzL3NyYy91dGlscy9OdW1iZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyxxREFBUTs7QUFFL0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL3BvbGthbWFya2V0cy1qcy9zcmMvdXRpbHMvTnVtYmVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcblxuTnVtYmVyLnByb3RvdHlwZS5ub0V4cG9uZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGRhdGEgPSBTdHJpbmcodGhpcykuc3BsaXQoL1tlRV0vKVxuICBpZiAoZGF0YS5sZW5ndGggPT0gMSkgcmV0dXJuIGRhdGFbMF1cblxuICB2YXIgeiA9ICcnLFxuICAgIHNpZ24gPSB0aGlzIDwgMCA/ICctJyA6ICcnLFxuICAgIHN0ciA9IGRhdGFbMF0ucmVwbGFjZSgnLicsICcnKSxcbiAgICBtYWcgPSBOdW1iZXIoZGF0YVsxXSkgKyAxXG5cbiAgaWYgKG1hZyA8IDApIHtcbiAgICB6ID0gc2lnbiArICcwLidcbiAgICB3aGlsZSAobWFnKyspIHogKz0gJzAnXG4gICAgcmV0dXJuIHogKyBzdHIucmVwbGFjZSgvXlxcLS8sICcnKVxuICB9XG4gIG1hZyAtPSBzdHIubGVuZ3RoXG4gIHdoaWxlIChtYWctLSkgeiArPSAnMCdcbiAgcmV0dXJuIHN0ciArIHpcbn1cblxuY2xhc3MgbnVtYmVycyB7XG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBmcm9tRGF5TW9udGhZZWFyKGRhdGUpIHtcbiAgICBsZXQgbW9tID0gbW9tZW50KCkuZGF5T2ZZZWFyKGRhdGUuZGF5KVxuICAgIG1vbS5zZXQoJ2hvdXInLCBkYXRlLmhvdXIpXG4gICAgbW9tLnNldCgneWVhcicsIGRhdGUueWVhcilcbiAgICByZXR1cm4gbW9tLmZvcm1hdCgnZGRkLCBoQScpXG4gIH1cblxuICBmcm9tSGV4KGhleCl7XG4gICAgcmV0dXJuIGhleC50b1N0cmluZygpO1xuICB9XG5cbiAgdG9GbG9hdChudW1iZXIpIHtcbiAgICByZXR1cm4gcGFyc2VGbG9hdChwYXJzZUZsb2F0KG51bWJlcikudG9GaXhlZCgyKSlcbiAgfVxuXG4gIHRpbWVUb1NtYXJ0Q29udHJhY3RUaW1lKHRpbWUpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQobmV3IERhdGUodGltZSkuZ2V0VGltZSgpIC8gMTAwMClcbiAgfVxuXG4gIHRvRGF0ZShkYXRlKSB7XG4gICAgbGV0IG1vbSA9IG1vbWVudCgpLmRheU9mWWVhcihkYXRlLmRheSlcbiAgICBtb20uc2V0KCdob3VyJywgZGF0ZS5ob3VyKVxuICAgIG1vbS5zZXQoJ3llYXInLCBkYXRlLnllYXIpXG4gICAgcmV0dXJuIG1vbS51bml4KClcbiAgfVxuXG4gIHRvU21hcnRDb250cmFjdERlY2ltYWxzKHZhbHVlLCBkZWNpbWFscykge1xuICAgIGxldCBudW1iZXJXaXRoTm9FeHBvbmVudHMgPSBuZXcgTnVtYmVyKChOdW1iZXIodmFsdWUpICogMTAgKiogZGVjaW1hbHMpLnRvRml4ZWQoMCkpLm5vRXhwb25lbnRzKCk7XG4gICAgcmV0dXJuIG51bWJlcldpdGhOb0V4cG9uZW50cztcbiAgfVxuXG4gIGZyb21CaWdOdW1iZXJUb0ludGVnZXIodmFsdWUsIGRlY2ltYWxzID0gMTgpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZCgodmFsdWUgLyBNYXRoLnBvdygxMCwgZGVjaW1hbHMpKSAqIDEwMDAwMDAwMDAwMDAwMDAwMDApO1xuICB9XG5cbiAgZnJvbURlY2ltYWxzKHZhbHVlLCBkZWNpbWFscykge1xuICAgICAgcmV0dXJuICBOdW1iZXIocGFyc2VGbG9hdCh2YWx1ZSAvIDEwICoqIGRlY2ltYWxzKS50b1ByZWNpc2lvbihkZWNpbWFscykpLm5vRXhwb25lbnRzKCk7XG4gIH1cblxuICBmcm9tRGVjaW1hbHNOdW1iZXIodmFsdWUsIGRlY2ltYWxzKSB7XG4gICAgICBjb25zdCBudW1iZXIgPSBOdW1iZXIocGFyc2VGbG9hdCh2YWx1ZSAvIDEwICoqIGRlY2ltYWxzKS50b1ByZWNpc2lvbihkZWNpbWFscykpLm5vRXhwb25lbnRzKCk7XG4gICAgICByZXR1cm4gTnVtYmVyKG51bWJlcik7XG4gIH1cblxuICBmcm9tRXhwb25lbnRpYWwoeCkge1xuICAgIGlmIChNYXRoLmFicyh4KSA8IDEuMCkge1xuICAgICAgdmFyIGUgPSBwYXJzZUludCh4LnRvU3RyaW5nKCkuc3BsaXQoJ2UtJylbMV0pXG4gICAgICBpZiAoZSkge1xuICAgICAgICB4ICo9IE1hdGgucG93KDEwLCBlIC0gMSlcbiAgICAgICAgeCA9ICcwLicgKyBuZXcgQXJyYXkoZSkuam9pbignMCcpICsgeC50b1N0cmluZygpLnN1YnN0cmluZygyKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZSA9IHBhcnNlSW50KHgudG9TdHJpbmcoKS5zcGxpdCgnKycpWzFdKVxuICAgICAgaWYgKGUgPiAyMCkge1xuICAgICAgICBlIC09IDIwXG4gICAgICAgIHggLz0gTWF0aC5wb3coMTAsIGUpXG4gICAgICAgIHggKz0gbmV3IEFycmF5KGUgKyAxKS5qb2luKCcwJylcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHhcbiAgfVxuXG4gIG51bGxIYXNoKCkge1xuICAgIHJldHVybiAnMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJztcbiAgfVxufVxuXG5sZXQgTnVtYmVycyA9IG5ldyBudW1iZXJzKClcblxubW9kdWxlLmV4cG9ydHMgPSBOdW1iZXJzO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/polkamarkets-js/src/utils/Numbers.js\n");

/***/ })

};
;