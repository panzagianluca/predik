/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-ens";
exports.ids = ["vendor-chunks/web3-eth-ens"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth-ens/lib/ENS.js":
/*!**********************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/ENS.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ENS.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nvar config = __webpack_require__(/*! ./config */ \"(ssr)/./node_modules/web3-eth-ens/lib/config.js\");\nvar formatters = (__webpack_require__(/*! web3-core-helpers */ \"(ssr)/./node_modules/web3-core-helpers/lib/index.js\").formatters);\nvar utils = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/index.js\");\nvar Registry = __webpack_require__(/*! ./contracts/Registry */ \"(ssr)/./node_modules/web3-eth-ens/lib/contracts/Registry.js\");\nvar ResolverMethodHandler = __webpack_require__(/*! ./lib/ResolverMethodHandler */ \"(ssr)/./node_modules/web3-eth-ens/lib/lib/ResolverMethodHandler.js\");\nvar contenthash = __webpack_require__(/*! ./lib/contentHash */ \"(ssr)/./node_modules/web3-eth-ens/lib/lib/contentHash.js\");\n/**\n * Constructs a new instance of ENS\n *\n * @param {Eth} eth\n *\n * @constructor\n */\nfunction ENS(eth) {\n    this.eth = eth;\n    var registryAddress = null;\n    this._detectedAddress = null;\n    this._lastSyncCheck = null;\n    Object.defineProperty(this, 'registry', {\n        get: function () {\n            return new Registry(this);\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'resolverMethodHandler', {\n        get: function () {\n            return new ResolverMethodHandler(this.registry);\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'registryAddress', {\n        get: function () {\n            return registryAddress;\n        },\n        set: function (value) {\n            if (value === null) {\n                registryAddress = value;\n                return;\n            }\n            registryAddress = formatters.inputAddressFormatter(value);\n        },\n        enumerable: true\n    });\n}\n/**\n * Returns true if the given interfaceId is supported and otherwise false.\n *\n * @method supportsInterface\n *\n * @param {string} name\n * @param {string} interfaceId\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nENS.prototype.supportsInterface = function (name, interfaceId, callback) {\n    return this.getResolver(name).then(function (resolver) {\n        if (!utils.isHexStrict(interfaceId)) {\n            interfaceId = utils.sha3(interfaceId).slice(0, 10);\n        }\n        return resolver.methods.supportsInterface(interfaceId).call(callback);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        throw error;\n    });\n};\n/**\n * Returns the Resolver by the given address\n *\n * @deprecated Please use the \"getResolver\" method instead of \"resolver\"\n *\n * @method resolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nENS.prototype.resolver = function (name, callback) {\n    return this.registry.resolver(name, callback);\n};\n/**\n * Returns the Resolver by the given address\n *\n * @method getResolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nENS.prototype.getResolver = function (name, callback) {\n    return this.registry.getResolver(name, callback);\n};\n/**\n * Does set the resolver of the given name\n *\n * @method setResolver\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setResolver = function (name, address, txConfig, callback) {\n    return this.registry.setResolver(name, address, txConfig, callback);\n};\n/**\n * Sets the owner, resolver, and TTL for an ENS record in a single operation.\n *\n * @method setRecord\n *\n * @param {string} name\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setRecord = function (name, owner, resolver, ttl, txConfig, callback) {\n    return this.registry.setRecord(name, owner, resolver, ttl, txConfig, callback);\n};\n/**\n * Sets the owner, resolver and TTL for a subdomain, creating it if necessary.\n *\n * @method setSubnodeRecord\n *\n * @param {string} name\n * @param {string} label\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setSubnodeRecord = function (name, label, owner, resolver, ttl, txConfig, callback) {\n    return this.registry.setSubnodeRecord(name, label, owner, resolver, ttl, txConfig, callback);\n};\n/**\n * Sets or clears an approval by the given operator.\n *\n * @method setApprovalForAll\n *\n * @param {string} operator\n * @param {boolean} approved\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setApprovalForAll = function (operator, approved, txConfig, callback) {\n    return this.registry.setApprovalForAll(operator, approved, txConfig, callback);\n};\n/**\n * Returns true if the operator is approved\n *\n * @method isApprovedForAll\n *\n * @param {string} owner\n * @param {string} operator\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nENS.prototype.isApprovedForAll = function (owner, operator, callback) {\n    return this.registry.isApprovedForAll(owner, operator, callback);\n};\n/**\n * Returns true if the record exists\n *\n * @method recordExists\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nENS.prototype.recordExists = function (name, callback) {\n    return this.registry.recordExists(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setSubnodeOwner\n *\n * @param {string} name\n * @param {string} label\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setSubnodeOwner = function (name, label, address, txConfig, callback) {\n    return this.registry.setSubnodeOwner(name, label, address, txConfig, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method getTTL\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getTTL = function (name, callback) {\n    return this.registry.getTTL(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setTTL\n *\n * @param {string} name\n * @param {number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setTTL = function (name, ttl, txConfig, callback) {\n    return this.registry.setTTL(name, ttl, txConfig, callback);\n};\n/**\n * Returns the owner by the given name and current configured or detected Registry\n *\n * @method getOwner\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getOwner = function (name, callback) {\n    return this.registry.getOwner(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setOwner\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setOwner = function (name, address, txConfig, callback) {\n    return this.registry.setOwner(name, address, txConfig, callback);\n};\n/**\n * Returns the address record associated with a name.\n *\n * @method getAddress\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getAddress = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n};\n/**\n * Sets a new address\n *\n * @method setAddress\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setAddress = function (name, address, txConfig, callback) {\n    return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(txConfig, callback);\n};\n/**\n * Returns the public key\n *\n * @method getPubkey\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getPubkey = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'pubkey', [], null, callback).call(callback);\n};\n/**\n * Set the new public key\n *\n * @method setPubkey\n *\n * @param {string} name\n * @param {string} x\n * @param {string} y\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setPubkey = function (name, x, y, txConfig, callback) {\n    return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(txConfig, callback);\n};\n/**\n * Returns the content\n *\n * @method getContent\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getContent = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n};\n/**\n * Set the content\n *\n * @method setContent\n *\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {TransactionConfig} txConfig\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setContent = function (name, hash, txConfig, callback) {\n    return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(txConfig, callback);\n};\n/**\n * Returns the contenthash\n *\n * @method getContenthash\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<ContentHash>}\n */\nENS.prototype.getContenthash = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'contenthash', [], contenthash.decode).call(callback);\n};\n/**\n * Set the contenthash\n *\n * @method setContent\n *\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {TransactionConfig} txConfig\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setContenthash = function (name, hash, txConfig, callback) {\n    var encoded;\n    try {\n        encoded = contenthash.encode(hash);\n    }\n    catch (err) {\n        var error = new Error('Could not encode ' + hash + '. See docs for supported hash protocols.');\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        throw error;\n    }\n    return this.resolverMethodHandler.method(name, 'setContenthash', [encoded]).send(txConfig, callback);\n};\n/**\n * Get the multihash\n *\n * @method getMultihash\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.getMultihash = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n};\n/**\n * Set the multihash\n *\n * @method setMultihash\n *\n * @param {string} name\n * @param {string} hash\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nENS.prototype.setMultihash = function (name, hash, txConfig, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(txConfig, callback);\n};\n/**\n * Checks if the current used network is synced and looks for ENS support there.\n * Throws an error if not.\n *\n * @returns {Promise<string>}\n */\nENS.prototype.checkNetwork = async function () {\n    var now = new Date() / 1000;\n    if (!this._lastSyncCheck || (now - this._lastSyncCheck) > 3600) {\n        var block = await this.eth.getBlock('latest');\n        var headAge = now - block.timestamp;\n        if (headAge > 3600) {\n            throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\n        }\n        this._lastSyncCheck = now;\n    }\n    if (this.registryAddress) {\n        return this.registryAddress;\n    }\n    if (!this._detectedAddress) {\n        var networkType = await this.eth.net.getNetworkType();\n        var addr = config.addresses[networkType];\n        if (typeof addr === 'undefined') {\n            throw new Error(\"ENS is not supported on network \" + networkType);\n        }\n        this._detectedAddress = addr;\n        return this._detectedAddress;\n    }\n    return this._detectedAddress;\n};\nmodule.exports = ENS;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-ens/lib/ENS.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-ens/lib/config.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/config.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file config.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2017\n */\n\n/**\n * Source: https://docs.ens.domains/ens-deployments\n *\n * @type {{addresses: {main: string, rinkeby: string, goerli: string, ropsten: string}}}\n */\nvar config = {\n    addresses: {\n        main: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        ropsten: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        rinkeby: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        goerli: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"\n    },\n    // These ids obtained at ensdomains docs:\n    // https://docs.ens.domains/contract-developer-guide/writing-a-resolver\n    interfaceIds: {\n        addr: \"0x3b3b57de\",\n        setAddr: \"0x3b3b57de\",\n        pubkey: \"0xc8690233\",\n        setPubkey: \"0xc8690233\",\n        contenthash: \"0xbc1c58d1\",\n        setContenthash: \"0xbc1c58d1\",\n        content: \"0xd8389dc5\",\n        setContent: \"0xd8389dc5\"\n    }\n};\nmodule.exports = config;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtZW5zL2xpYi9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWVucy9saWIvY29uZmlnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gICAgVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cbiAgICB3ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAgICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAgICB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gICAgd2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICAgIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICAgIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICAgIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICAgIGFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqIEBmaWxlIGNvbmZpZy5qc1xuICpcbiAqIEBhdXRob3IgU2FtdWVsIEZ1cnRlciA8c2FtdWVsQGV0aGVyZXVtLm9yZz5cbiAqIEBkYXRlIDIwMTdcbiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIFNvdXJjZTogaHR0cHM6Ly9kb2NzLmVucy5kb21haW5zL2Vucy1kZXBsb3ltZW50c1xuICpcbiAqIEB0eXBlIHt7YWRkcmVzc2VzOiB7bWFpbjogc3RyaW5nLCByaW5rZWJ5OiBzdHJpbmcsIGdvZXJsaTogc3RyaW5nLCByb3BzdGVuOiBzdHJpbmd9fX1cbiAqL1xudmFyIGNvbmZpZyA9IHtcbiAgICBhZGRyZXNzZXM6IHtcbiAgICAgICAgbWFpbjogXCIweDAwMDAwMDAwMDAwQzJFMDc0ZUM2OUEwZEZiMjk5N0JBNkM3ZDJlMWVcIixcbiAgICAgICAgcm9wc3RlbjogXCIweDAwMDAwMDAwMDAwQzJFMDc0ZUM2OUEwZEZiMjk5N0JBNkM3ZDJlMWVcIixcbiAgICAgICAgcmlua2VieTogXCIweDAwMDAwMDAwMDAwQzJFMDc0ZUM2OUEwZEZiMjk5N0JBNkM3ZDJlMWVcIixcbiAgICAgICAgZ29lcmxpOiBcIjB4MDAwMDAwMDAwMDBDMkUwNzRlQzY5QTBkRmIyOTk3QkE2QzdkMmUxZVwiXG4gICAgfSxcbiAgICAvLyBUaGVzZSBpZHMgb2J0YWluZWQgYXQgZW5zZG9tYWlucyBkb2NzOlxuICAgIC8vIGh0dHBzOi8vZG9jcy5lbnMuZG9tYWlucy9jb250cmFjdC1kZXZlbG9wZXItZ3VpZGUvd3JpdGluZy1hLXJlc29sdmVyXG4gICAgaW50ZXJmYWNlSWRzOiB7XG4gICAgICAgIGFkZHI6IFwiMHgzYjNiNTdkZVwiLFxuICAgICAgICBzZXRBZGRyOiBcIjB4M2IzYjU3ZGVcIixcbiAgICAgICAgcHVia2V5OiBcIjB4Yzg2OTAyMzNcIixcbiAgICAgICAgc2V0UHVia2V5OiBcIjB4Yzg2OTAyMzNcIixcbiAgICAgICAgY29udGVudGhhc2g6IFwiMHhiYzFjNThkMVwiLFxuICAgICAgICBzZXRDb250ZW50aGFzaDogXCIweGJjMWM1OGQxXCIsXG4gICAgICAgIGNvbnRlbnQ6IFwiMHhkODM4OWRjNVwiLFxuICAgICAgICBzZXRDb250ZW50OiBcIjB4ZDgzODlkYzVcIlxuICAgIH1cbn07XG5tb2R1bGUuZXhwb3J0cyA9IGNvbmZpZztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-ens/lib/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-ens/lib/contracts/Registry.js":
/*!*************************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/contracts/Registry.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Registry.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nvar Contract = __webpack_require__(/*! web3-eth-contract */ \"(ssr)/./node_modules/web3-eth-contract/lib/index.js\");\nvar namehash = __webpack_require__(/*! eth-ens-namehash */ \"(ssr)/./node_modules/eth-ens-namehash/index.js\");\nvar PromiEvent = __webpack_require__(/*! web3-core-promievent */ \"(ssr)/./node_modules/web3-core-promievent/lib/index.js\");\nvar formatters = (__webpack_require__(/*! web3-core-helpers */ \"(ssr)/./node_modules/web3-core-helpers/lib/index.js\").formatters);\nvar utils = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/index.js\");\nvar REGISTRY_ABI = __webpack_require__(/*! ../resources/ABI/Registry */ \"(ssr)/./node_modules/web3-eth-ens/lib/resources/ABI/Registry.js\");\nvar RESOLVER_ABI = __webpack_require__(/*! ../resources/ABI/Resolver */ \"(ssr)/./node_modules/web3-eth-ens/lib/resources/ABI/Resolver.js\");\n/**\n * A wrapper around the ENS registry contract.\n *\n * @method Registry\n * @param {Ens} ens\n * @constructor\n */\nfunction Registry(ens) {\n    var self = this;\n    this.ens = ens;\n    this.contract = ens.checkNetwork().then(function (address) {\n        var contract = new Contract(REGISTRY_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n        return contract;\n    });\n}\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @deprecated Please use the \"getOwner\" method instead of \"owner\"\n *\n * @method owner\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<string>}\n */\nRegistry.prototype.owner = function (name, callback) {\n    console.warn('Deprecated: Please use the \"getOwner\" method instead of \"owner\".');\n    return this.getOwner(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method getOwner\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<string>}\n */\nRegistry.prototype.getOwner = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.owner(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setOwner\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setOwner = function (name, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setOwner(namehash.hash(name), formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the TTL of the given node by his name\n *\n * @method getTTL\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returnss {Promise<string>}\n */\nRegistry.prototype.getTTL = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.ttl(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setTTL\n *\n * @param {string} name\n * @param {number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setTTL = function (name, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setTTL(namehash.hash(name), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setSubnodeOwner\n *\n * @param {string} name\n * @param {string} label\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setSubnodeOwner = function (name, label, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    if (!utils.isHexStrict(label)) {\n        label = utils.sha3(label);\n    }\n    this.contract.then(function (contract) {\n        return contract.methods.setSubnodeOwner(namehash.hash(name), label, formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets the owner, resolver, and TTL for an ENS record in a single operation.\n *\n * @method setRecord\n *\n * @param {string} name\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setRecord = function (name, owner, resolver, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setRecord(namehash.hash(name), formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(resolver), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets the owner, resolver and TTL for a subdomain, creating it if necessary.\n *\n * @method setSubnodeRecord\n *\n * @param {string} name\n * @param {string} label\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setSubnodeRecord = function (name, label, owner, resolver, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    if (!utils.isHexStrict(label)) {\n        label = utils.sha3(label);\n    }\n    this.contract.then(function (contract) {\n        return contract.methods.setSubnodeRecord(namehash.hash(name), label, formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(resolver), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets or clears an approval by the given operator.\n *\n * @method setApprovalForAll\n *\n * @param {string} operator\n * @param {boolean} approved\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setApprovalForAll = function (operator, approved, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setApprovalForAll(formatters.inputAddressFormatter(operator), approved).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns true if the operator is approved\n *\n * @method isApprovedForAll\n *\n * @param {string} owner\n * @param {string} operator\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nRegistry.prototype.isApprovedForAll = function (owner, operator, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.isApprovedForAll(formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(operator)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns true if the record exists\n *\n * @method recordExists\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nRegistry.prototype.recordExists = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.recordExists(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the resolver contract associated with a name.\n *\n * @deprecated Please use the \"getResolver\" method instead of \"resolver\"\n *\n * @method resolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nRegistry.prototype.resolver = function (name, callback) {\n    console.warn('Deprecated: Please use the \"getResolver\" method instead of \"resolver\".');\n    return this.getResolver(name, callback);\n};\n/**\n * Returns the resolver contract associated with a name.\n *\n * @method getResolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nRegistry.prototype.getResolver = function (name, callback) {\n    var self = this;\n    return this.contract.then(function (contract) {\n        return contract.methods.resolver(namehash.hash(name)).call();\n    }).then(function (address) {\n        var contract = new Contract(RESOLVER_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n        if (typeof callback === 'function') {\n            // It's required to pass the contract to the first argument to be backward compatible and to have the required consistency\n            callback(contract, contract);\n            return;\n        }\n        return contract;\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        throw error;\n    });\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setResolver\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setResolver = function (name, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setResolver(namehash.hash(name), formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\nmodule.exports = Registry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-ens/lib/contracts/Registry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-ens/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nvar ENS = __webpack_require__(/*! ./ENS */ \"(ssr)/./node_modules/web3-eth-ens/lib/ENS.js\");\nmodule.exports = ENS;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtZW5zL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYixVQUFVLG1CQUFPLENBQUMsMkRBQU87QUFDekIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYW56YS9Eb2N1bWVudHMvUGVyc29uYWxQcm9qZWN0cy9wcmVkaWsvbm9kZV9tb2R1bGVzL3dlYjMtZXRoLWVucy9saWIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgICBUaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuICAgIHdlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICAgIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICAgIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gICAgKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAgICB3ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gICAgYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAgICBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gICAgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gICAgYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8qKlxuICogQGZpbGUgaW5kZXguanNcbiAqXG4gKiBAYXV0aG9yIFNhbXVlbCBGdXJ0ZXIgPHNhbXVlbEBldGhlcmV1bS5vcmc+XG4gKiBAZGF0ZSAyMDE4XG4gKi9cblwidXNlIHN0cmljdFwiO1xudmFyIEVOUyA9IHJlcXVpcmUoJy4vRU5TJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEVOUztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-ens/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-ens/lib/lib/ResolverMethodHandler.js":
/*!********************************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/lib/ResolverMethodHandler.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ResolverMethodHandler.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nvar PromiEvent = __webpack_require__(/*! web3-core-promievent */ \"(ssr)/./node_modules/web3-core-promievent/lib/index.js\");\nvar namehash = __webpack_require__(/*! eth-ens-namehash */ \"(ssr)/./node_modules/eth-ens-namehash/index.js\");\nvar errors = (__webpack_require__(/*! web3-core-helpers */ \"(ssr)/./node_modules/web3-core-helpers/lib/index.js\").errors);\nvar interfaceIds = (__webpack_require__(/*! ../config */ \"(ssr)/./node_modules/web3-eth-ens/lib/config.js\").interfaceIds);\n/**\n * @param {Registry} registry\n * @constructor\n */\nfunction ResolverMethodHandler(registry) {\n    this.registry = registry;\n}\n/**\n * Executes an resolver method and returns an eventifiedPromise\n *\n * @param {string} ensName\n * @param {string} methodName\n * @param {array} methodArguments\n * @param {function} callback\n * @returns {Object}\n */\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, outputFormatter, callback) {\n    return {\n        call: this.call.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this,\n            outputFormatter: outputFormatter\n        }),\n        send: this.send.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this\n        })\n    };\n};\n/**\n * Executes call\n *\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.call = function (callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n    var outputFormatter = this.outputFormatter || null;\n    this.parent.registry.getResolver(this.ensName).then(async function (resolver) {\n        await self.parent.checkInterfaceSupport(resolver, self.methodName);\n        self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, outputFormatter, callback);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Executes send\n *\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n    this.parent.registry.getResolver(this.ensName).then(async function (resolver) {\n        await self.parent.checkInterfaceSupport(resolver, self.methodName);\n        self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Handles a call method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, outputFormatter, callback) {\n    method.apply(this, preparedArguments).call()\n        .then(function (result) {\n        if (outputFormatter) {\n            result = outputFormatter(result);\n        }\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n            callback(result, result);\n            return;\n        }\n        promiEvent.resolve(result);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent;\n};\n/**\n * Handles a send method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n    method.apply(this, preparedArguments).send(sendOptions)\n        .on('sending', function () {\n        promiEvent.eventEmitter.emit('sending');\n    })\n        .on('sent', function () {\n        promiEvent.eventEmitter.emit('sent');\n    })\n        .on('transactionHash', function (hash) {\n        promiEvent.eventEmitter.emit('transactionHash', hash);\n    })\n        .on('confirmation', function (confirmationNumber, receipt) {\n        promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n    })\n        .on('receipt', function (receipt) {\n        promiEvent.eventEmitter.emit('receipt', receipt);\n        promiEvent.resolve(receipt);\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the second argument to be backwards compatible and to have the required consistency\n            callback(receipt, receipt);\n        }\n    })\n        .on('error', function (error) {\n        promiEvent.eventEmitter.emit('error', error);\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent;\n};\n/**\n * Adds the ENS node to the arguments\n *\n * @param {string} name\n * @param {array} methodArguments\n *\n * @returns {array}\n */\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n    var node = namehash.hash(name);\n    if (methodArguments.length > 0) {\n        methodArguments.unshift(node);\n        return methodArguments;\n    }\n    return [node];\n};\n/**\n *\n *\n * @param {Contract} resolver\n * @param {string} methodName\n *\n * @returns {Promise}\n */\nResolverMethodHandler.prototype.checkInterfaceSupport = async function (resolver, methodName) {\n    // Skip validation for undocumented interface ids (ex: multihash)\n    if (!interfaceIds[methodName])\n        return;\n    var supported = false;\n    try {\n        supported = await resolver\n            .methods\n            .supportsInterface(interfaceIds[methodName])\n            .call();\n    }\n    catch (err) {\n        console.warn('Could not verify interface of resolver contract at \"' + resolver.options.address + '\". ');\n    }\n    if (!supported) {\n        throw errors.ResolverMethodMissingError(resolver.options.address, methodName);\n    }\n};\nmodule.exports = ResolverMethodHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-ens/lib/lib/ResolverMethodHandler.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-ens/lib/lib/contentHash.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/lib/contentHash.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\nAdapted from ensdomains/ui\nhttps://github.com/ensdomains/ui/blob/3e62e440b53466eeec9dd1c63d73924eefbd88c1/src/utils/contents.js#L1-L85\n\nBSD 2-Clause License\n\nCopyright (c) 2019, Ethereum Name Service\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nvar contentHash = __webpack_require__(/*! content-hash */ \"(ssr)/./node_modules/content-hash/src/index.js\");\nfunction decode(encoded) {\n    var decoded = null;\n    var protocolType = null;\n    var error = null;\n    if (encoded && encoded.error) {\n        return {\n            protocolType: null,\n            decoded: encoded.error\n        };\n    }\n    if (encoded) {\n        try {\n            decoded = contentHash.decode(encoded);\n            var codec = contentHash.getCodec(encoded);\n            if (codec === 'ipfs-ns') {\n                protocolType = 'ipfs';\n            }\n            else if (codec === 'swarm-ns') {\n                protocolType = 'bzz';\n            }\n            else if (codec === 'onion') {\n                protocolType = 'onion';\n            }\n            else if (codec === 'onion3') {\n                protocolType = 'onion3';\n            }\n            else {\n                decoded = encoded;\n            }\n        }\n        catch (e) {\n            error = e.message;\n        }\n    }\n    return {\n        protocolType: protocolType,\n        decoded: decoded,\n        error: error\n    };\n}\nfunction encode(text) {\n    var content, contentType;\n    var encoded = false;\n    if (!!text) {\n        var matched = text.match(/^(ipfs|bzz|onion|onion3):\\/\\/(.*)/) || text.match(/\\/(ipfs)\\/(.*)/);\n        if (matched) {\n            contentType = matched[1];\n            content = matched[2];\n        }\n        try {\n            if (contentType === 'ipfs') {\n                if (content.length >= 4) {\n                    encoded = '0x' + contentHash.fromIpfs(content);\n                }\n            }\n            else if (contentType === 'bzz') {\n                if (content.length >= 4) {\n                    encoded = '0x' + contentHash.fromSwarm(content);\n                }\n            }\n            else if (contentType === 'onion') {\n                if (content.length === 16) {\n                    encoded = '0x' + contentHash.encode('onion', content);\n                }\n            }\n            else if (contentType === 'onion3') {\n                if (content.length === 56) {\n                    encoded = '0x' + contentHash.encode('onion3', content);\n                }\n            }\n            else {\n                throw new Error('Could not encode content hash: unsupported content type');\n            }\n        }\n        catch (err) {\n            throw err;\n        }\n    }\n    return encoded;\n}\nmodule.exports = {\n    decode: decode,\n    encode: encode\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtZW5zL2xpYi9saWIvY29udGVudEhhc2guanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLCtCQUErQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLG9FQUFjO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvd2ViMy1ldGgtZW5zL2xpYi9saWIvY29udGVudEhhc2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkFkYXB0ZWQgZnJvbSBlbnNkb21haW5zL3VpXG5odHRwczovL2dpdGh1Yi5jb20vZW5zZG9tYWlucy91aS9ibG9iLzNlNjJlNDQwYjUzNDY2ZWVlYzlkZDFjNjNkNzM5MjRlZWZiZDg4YzEvc3JjL3V0aWxzL2NvbnRlbnRzLmpzI0wxLUw4NVxuXG5CU0QgMi1DbGF1c2UgTGljZW5zZVxuXG5Db3B5cmlnaHQgKGMpIDIwMTksIEV0aGVyZXVtIE5hbWUgU2VydmljZVxuQWxsIHJpZ2h0cyByZXNlcnZlZC5cblxuUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0XG5tb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDpcblxuKiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXNcbiAgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG5cbiogUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlLFxuICB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyIGluIHRoZSBkb2N1bWVudGF0aW9uXG4gIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxuXG5USElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTIFwiQVMgSVNcIlxuQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRVxuSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFXG5ESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFXG5GT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTFxuREFNQUdFUyAoSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFBST0NVUkVNRU5UIE9GIFNVQlNUSVRVVEUgR09PRFMgT1JcblNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSXG5DQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLFxuT1IgVE9SVCAoSU5DTFVESU5HIE5FR0xJR0VOQ0UgT1IgT1RIRVJXSVNFKSBBUklTSU5HIElOIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0Vcbk9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuXG4qL1xudmFyIGNvbnRlbnRIYXNoID0gcmVxdWlyZSgnY29udGVudC1oYXNoJyk7XG5mdW5jdGlvbiBkZWNvZGUoZW5jb2RlZCkge1xuICAgIHZhciBkZWNvZGVkID0gbnVsbDtcbiAgICB2YXIgcHJvdG9jb2xUeXBlID0gbnVsbDtcbiAgICB2YXIgZXJyb3IgPSBudWxsO1xuICAgIGlmIChlbmNvZGVkICYmIGVuY29kZWQuZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHByb3RvY29sVHlwZTogbnVsbCxcbiAgICAgICAgICAgIGRlY29kZWQ6IGVuY29kZWQuZXJyb3JcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGVuY29kZWQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGRlY29kZWQgPSBjb250ZW50SGFzaC5kZWNvZGUoZW5jb2RlZCk7XG4gICAgICAgICAgICB2YXIgY29kZWMgPSBjb250ZW50SGFzaC5nZXRDb2RlYyhlbmNvZGVkKTtcbiAgICAgICAgICAgIGlmIChjb2RlYyA9PT0gJ2lwZnMtbnMnKSB7XG4gICAgICAgICAgICAgICAgcHJvdG9jb2xUeXBlID0gJ2lwZnMnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY29kZWMgPT09ICdzd2FybS1ucycpIHtcbiAgICAgICAgICAgICAgICBwcm90b2NvbFR5cGUgPSAnYnp6JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNvZGVjID09PSAnb25pb24nKSB7XG4gICAgICAgICAgICAgICAgcHJvdG9jb2xUeXBlID0gJ29uaW9uJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNvZGVjID09PSAnb25pb24zJykge1xuICAgICAgICAgICAgICAgIHByb3RvY29sVHlwZSA9ICdvbmlvbjMnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZGVjb2RlZCA9IGVuY29kZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGVycm9yID0gZS5tZXNzYWdlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHByb3RvY29sVHlwZTogcHJvdG9jb2xUeXBlLFxuICAgICAgICBkZWNvZGVkOiBkZWNvZGVkLFxuICAgICAgICBlcnJvcjogZXJyb3JcbiAgICB9O1xufVxuZnVuY3Rpb24gZW5jb2RlKHRleHQpIHtcbiAgICB2YXIgY29udGVudCwgY29udGVudFR5cGU7XG4gICAgdmFyIGVuY29kZWQgPSBmYWxzZTtcbiAgICBpZiAoISF0ZXh0KSB7XG4gICAgICAgIHZhciBtYXRjaGVkID0gdGV4dC5tYXRjaCgvXihpcGZzfGJ6enxvbmlvbnxvbmlvbjMpOlxcL1xcLyguKikvKSB8fCB0ZXh0Lm1hdGNoKC9cXC8oaXBmcylcXC8oLiopLyk7XG4gICAgICAgIGlmIChtYXRjaGVkKSB7XG4gICAgICAgICAgICBjb250ZW50VHlwZSA9IG1hdGNoZWRbMV07XG4gICAgICAgICAgICBjb250ZW50ID0gbWF0Y2hlZFsyXTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKGNvbnRlbnRUeXBlID09PSAnaXBmcycpIHtcbiAgICAgICAgICAgICAgICBpZiAoY29udGVudC5sZW5ndGggPj0gNCkge1xuICAgICAgICAgICAgICAgICAgICBlbmNvZGVkID0gJzB4JyArIGNvbnRlbnRIYXNoLmZyb21JcGZzKGNvbnRlbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNvbnRlbnRUeXBlID09PSAnYnp6Jykge1xuICAgICAgICAgICAgICAgIGlmIChjb250ZW50Lmxlbmd0aCA+PSA0KSB7XG4gICAgICAgICAgICAgICAgICAgIGVuY29kZWQgPSAnMHgnICsgY29udGVudEhhc2guZnJvbVN3YXJtKGNvbnRlbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNvbnRlbnRUeXBlID09PSAnb25pb24nKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbnRlbnQubGVuZ3RoID09PSAxNikge1xuICAgICAgICAgICAgICAgICAgICBlbmNvZGVkID0gJzB4JyArIGNvbnRlbnRIYXNoLmVuY29kZSgnb25pb24nLCBjb250ZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChjb250ZW50VHlwZSA9PT0gJ29uaW9uMycpIHtcbiAgICAgICAgICAgICAgICBpZiAoY29udGVudC5sZW5ndGggPT09IDU2KSB7XG4gICAgICAgICAgICAgICAgICAgIGVuY29kZWQgPSAnMHgnICsgY29udGVudEhhc2guZW5jb2RlKCdvbmlvbjMnLCBjb250ZW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCBlbmNvZGUgY29udGVudCBoYXNoOiB1bnN1cHBvcnRlZCBjb250ZW50IHR5cGUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGVuY29kZWQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBkZWNvZGU6IGRlY29kZSxcbiAgICBlbmNvZGU6IGVuY29kZVxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-ens/lib/lib/contentHash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-ens/lib/resources/ABI/Registry.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/resources/ABI/Registry.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar REGISTRY = [\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"resolver\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"owner\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"label\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setSubnodeOwner\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"ttl\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"setTTL\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"ttl\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"resolver\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setResolver\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setOwner\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"Transfer\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"label\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"NewOwner\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"resolver\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"NewResolver\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"ttl\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"NewTTL\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"resolver\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"ttl\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"setRecord\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"setApprovalForAll\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"bool\",\n                \"name\": \"approved\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"name\": \"ApprovalForAll\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"operator\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isApprovedForAll\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"recordExists\",\n        \"outputs\": [\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"bytes32\",\n                \"name\": \"label\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"owner\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"resolver\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"uint64\",\n                \"name\": \"ttl\",\n                \"type\": \"uint64\"\n            }\n        ],\n        \"name\": \"setSubnodeRecord\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nmodule.exports = REGISTRY;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-ens/lib/resources/ABI/Registry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-ens/lib/resources/ABI/Resolver.js":
/*!*****************************************************************!*\
  !*** ./node_modules/web3-eth-ens/lib/resources/ABI/Resolver.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar RESOLVER = [\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"interfaceID\",\n                \"type\": \"bytes4\"\n            }\n        ],\n        \"name\": \"supportsInterface\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"contentTypes\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ABI\",\n        \"outputs\": [\n            {\n                \"name\": \"contentType\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"hash\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"setMultihash\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"multihash\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"x\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"y\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"setPubkey\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"content\",\n        \"outputs\": [\n            {\n                \"name\": \"ret\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"addr\",\n        \"outputs\": [\n            {\n                \"name\": \"ret\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"contentType\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"name\": \"data\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"setABI\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"name\",\n        \"outputs\": [\n            {\n                \"name\": \"ret\",\n                \"type\": \"string\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"name\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"setName\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"setContent\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"pubkey\",\n        \"outputs\": [\n            {\n                \"name\": \"x\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"y\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"addr\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"setAddr\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"name\": \"ensAddr\",\n                \"type\": \"address\"\n            }\n        ],\n        \"payable\": false,\n        \"type\": \"constructor\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"a\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"AddrChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"hash\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"ContentChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"name\",\n                \"type\": \"string\"\n            }\n        ],\n        \"name\": \"NameChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": true,\n                \"name\": \"contentType\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"ABIChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"x\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"y\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"PubkeyChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"indexed\": false,\n                \"name\": \"hash\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"ContenthashChanged\",\n        \"type\": \"event\"\n    },\n    {\n        \"constant\": true,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            }\n        ],\n        \"name\": \"contenthash\",\n        \"outputs\": [\n            {\n                \"name\": \"\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"payable\": false,\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"constant\": false,\n        \"inputs\": [\n            {\n                \"name\": \"node\",\n                \"type\": \"bytes32\"\n            },\n            {\n                \"name\": \"hash\",\n                \"type\": \"bytes\"\n            }\n        ],\n        \"name\": \"setContenthash\",\n        \"outputs\": [],\n        \"payable\": false,\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n];\nmodule.exports = RESOLVER;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-ens/lib/resources/ABI/Resolver.js\n");

/***/ })

};
;