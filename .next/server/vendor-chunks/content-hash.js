/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/content-hash";
exports.ids = ["vendor-chunks/content-hash"];
exports.modules = {

/***/ "(ssr)/./node_modules/content-hash/src/helpers.js":
/*!**************************************************!*\
  !*** ./node_modules/content-hash/src/helpers.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/*\r\n\tISC License\r\n\r\n\tCopyright (c) 2019, Pierre-Louis Despaigne\r\n\r\n\tPermission to use, copy, modify, and/or distribute this software for any\r\n\tpurpose with or without fee is hereby granted, provided that the above\r\n\tcopyright notice and this permission notice appear in all copies.\r\n\r\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nconst CID = __webpack_require__(/*! cids */ \"(ssr)/./node_modules/cids/src/index.js\");\r\n\r\n/**\r\n * Take any ipfsHash and convert it to a CID v1 encoded in base32.\r\n * @param {string} ipfsHash a regular ipfs hash either a cid v0 or v1 (v1 will remain unchanged)\r\n * @return {string} the resulting ipfs hash as a cid v1\r\n */\r\nconst cidV0ToV1Base32 = (ipfsHash) => {\r\n\tlet cid = new CID(ipfsHash);\r\n\tif (cid.version === 0) {\r\n\t\tcid = cid.toV1();\r\n\t}\r\n\treturn cid.toString('base32');\r\n}\r\n\r\nexports.cidV0ToV1Base32 = cidV0ToV1Base32;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udGVudC1oYXNoL3NyYy9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUJBQU8sQ0FBQyxvREFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvY29udGVudC1oYXNoL3NyYy9oZWxwZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0SVNDIExpY2Vuc2VcclxuXHJcblx0Q29weXJpZ2h0IChjKSAyMDE5LCBQaWVycmUtTG91aXMgRGVzcGFpZ25lXHJcblxyXG5cdFBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5cdHB1cnBvc2Ugd2l0aCBvciB3aXRob3V0IGZlZSBpcyBoZXJlYnkgZ3JhbnRlZCwgcHJvdmlkZWQgdGhhdCB0aGUgYWJvdmVcclxuXHRjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIGFwcGVhciBpbiBhbGwgY29waWVzLlxyXG5cclxuXHRUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFU1xyXG5cdFdJVEggUkVHQVJEIFRPIFRISVMgU09GVFdBUkUgSU5DTFVESU5HIEFMTCBJTVBMSUVEIFdBUlJBTlRJRVMgT0ZcclxuXHRNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1IgQkUgTElBQkxFIEZPUlxyXG5cdEFOWSBTUEVDSUFMLCBESVJFQ1QsIElORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVNcclxuXHRXSEFUU09FVkVSIFJFU1VMVElORyBGUk9NIExPU1MgT0YgVVNFLCBEQVRBIE9SIFBST0ZJVFMsIFdIRVRIRVIgSU4gQU5cclxuXHRBQ1RJT04gT0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0UgT1IgT1RIRVIgVE9SVElPVVMgQUNUSU9OLCBBUklTSU5HIE9VVCBPRlxyXG5cdE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SIFBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbiovXHJcblxyXG5jb25zdCBDSUQgPSByZXF1aXJlKCdjaWRzJyk7XHJcblxyXG4vKipcclxuICogVGFrZSBhbnkgaXBmc0hhc2ggYW5kIGNvbnZlcnQgaXQgdG8gYSBDSUQgdjEgZW5jb2RlZCBpbiBiYXNlMzIuXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBpcGZzSGFzaCBhIHJlZ3VsYXIgaXBmcyBoYXNoIGVpdGhlciBhIGNpZCB2MCBvciB2MSAodjEgd2lsbCByZW1haW4gdW5jaGFuZ2VkKVxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSByZXN1bHRpbmcgaXBmcyBoYXNoIGFzIGEgY2lkIHYxXHJcbiAqL1xyXG5jb25zdCBjaWRWMFRvVjFCYXNlMzIgPSAoaXBmc0hhc2gpID0+IHtcclxuXHRsZXQgY2lkID0gbmV3IENJRChpcGZzSGFzaCk7XHJcblx0aWYgKGNpZC52ZXJzaW9uID09PSAwKSB7XHJcblx0XHRjaWQgPSBjaWQudG9WMSgpO1xyXG5cdH1cclxuXHRyZXR1cm4gY2lkLnRvU3RyaW5nKCdiYXNlMzInKTtcclxufVxyXG5cclxuZXhwb3J0cy5jaWRWMFRvVjFCYXNlMzIgPSBjaWRWMFRvVjFCYXNlMzI7XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/content-hash/src/helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/content-hash/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/content-hash/src/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\r\n\tISC License\r\n\r\n\tCopyright (c) 2019, Pierre-Louis Despaigne\r\n\r\n\tPermission to use, copy, modify, and/or distribute this software for any\r\n\tpurpose with or without fee is hereby granted, provided that the above\r\n\tcopyright notice and this permission notice appear in all copies.\r\n\r\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nconst multiC = __webpack_require__(/*! multicodec */ \"(ssr)/./node_modules/multicodec/src/index.js\");\r\n\r\nconst { hexStringToBuffer, profiles } = __webpack_require__(/*! ./profiles */ \"(ssr)/./node_modules/content-hash/src/profiles.js\");\r\nconst { cidV0ToV1Base32 } = __webpack_require__(/*! ./helpers */ \"(ssr)/./node_modules/content-hash/src/helpers.js\");\r\n\r\nmodule.exports = {\r\n\r\n\t//export some helpers functions\r\n\thelpers: {\r\n\t\tcidV0ToV1Base32,\r\n\t},\r\n\r\n\t/**\r\n\t* Decode a Content Hash.\r\n\t* @param {string} hash an hex string containing a content hash\r\n\t* @return {string} the decoded content\r\n\t*/\r\n\tdecode: function (contentHash) {\r\n\t\tconst buffer = hexStringToBuffer(contentHash);\r\n\t\tconst codec = multiC.getCodec(buffer);\r\n\t\tconst value = multiC.rmPrefix(buffer);\r\n\t\tlet profile = profiles[codec];\r\n\t\tif (!profile) profile = profiles['default'];\r\n\t\treturn profile.decode(value);\r\n\t},\r\n\r\n\t/**\r\n\t* Encode an IPFS address into a content hash\r\n\t* @param {string} ipfsHash string containing an IPFS address\r\n\t* @return {string} the resulting content hash\r\n\t*/\r\n\tfromIpfs: function (ipfsHash) {\r\n\t\treturn this.encode('ipfs-ns', ipfsHash);\r\n\t},\r\n\r\n\t/**\r\n\t* Encode a Swarm address into a content hash\r\n\t* @param {string} swarmHash string containing a Swarm address\r\n\t* @return {string} the resulting content hash\r\n\t*/\r\n\tfromSwarm: function (swarmHash) {\r\n\t\treturn this.encode('swarm-ns', swarmHash);\r\n\t},\r\n\r\n\t/**\r\n\t* General purpose encoding function\r\n  * @param {string} codec \r\n  * @param {string} value \r\n  */\r\n\tencode: function (codec, value) {\r\n\t\tlet profile = profiles[codec];\r\n\t\tif (!profile) profile = profiles['default'];\r\n\t\tconst encodedValue = profile.encode(value);\r\n\t\treturn multiC.addPrefix(codec, encodedValue).toString('hex');\r\n\t},\r\n\r\n\t/**\r\n\t* Extract the codec of a content hash\r\n\t* @param {string} hash hex string containing a content hash\r\n\t* @return {string} the extracted codec\r\n\t*/\r\n\tgetCodec: function (hash) {\r\n\t\tlet buffer = hexStringToBuffer(hash);\r\n\t\treturn multiC.getCodec(buffer);\r\n\t},\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udGVudC1oYXNoL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsZ0VBQVk7QUFDbkM7QUFDQSxRQUFRLDhCQUE4QixFQUFFLG1CQUFPLENBQUMscUVBQVk7QUFDNUQsUUFBUSxrQkFBa0IsRUFBRSxtQkFBTyxDQUFDLG1FQUFXO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVksUUFBUTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhbnphL0RvY3VtZW50cy9QZXJzb25hbFByb2plY3RzL3ByZWRpay9ub2RlX21vZHVsZXMvY29udGVudC1oYXNoL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdElTQyBMaWNlbnNlXHJcblxyXG5cdENvcHlyaWdodCAoYykgMjAxOSwgUGllcnJlLUxvdWlzIERlc3BhaWduZVxyXG5cclxuXHRQZXJtaXNzaW9uIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBhbmQvb3IgZGlzdHJpYnV0ZSB0aGlzIHNvZnR3YXJlIGZvciBhbnlcclxuXHRwdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5IGdyYW50ZWQsIHByb3ZpZGVkIHRoYXQgdGhlIGFib3ZlXHJcblx0Y29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBhcHBlYXIgaW4gYWxsIGNvcGllcy5cclxuXHJcblx0VEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiBBTkQgVEhFIEFVVEhPUiBESVNDTEFJTVMgQUxMIFdBUlJBTlRJRVNcclxuXHRXSVRIIFJFR0FSRCBUTyBUSElTIFNPRlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTIE9GXHJcblx0TUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTLiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SIEJFIExJQUJMRSBGT1JcclxuXHRBTlkgU1BFQ0lBTCwgRElSRUNULCBJTkRJUkVDVCwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIE9SIEFOWSBEQU1BR0VTXHJcblx0V0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTSBMT1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOIEFOXHJcblx0QUNUSU9OIE9GIENPTlRSQUNULCBORUdMSUdFTkNFIE9SIE9USEVSIFRPUlRJT1VTIEFDVElPTiwgQVJJU0lORyBPVVQgT0ZcclxuXHRPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFVTRSBPUiBQRVJGT1JNQU5DRSBPRiBUSElTIFNPRlRXQVJFLlxyXG4qL1xyXG5cclxuY29uc3QgbXVsdGlDID0gcmVxdWlyZSgnbXVsdGljb2RlYycpO1xyXG5cclxuY29uc3QgeyBoZXhTdHJpbmdUb0J1ZmZlciwgcHJvZmlsZXMgfSA9IHJlcXVpcmUoJy4vcHJvZmlsZXMnKTtcclxuY29uc3QgeyBjaWRWMFRvVjFCYXNlMzIgfSA9IHJlcXVpcmUoJy4vaGVscGVycycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcblxyXG5cdC8vZXhwb3J0IHNvbWUgaGVscGVycyBmdW5jdGlvbnNcclxuXHRoZWxwZXJzOiB7XHJcblx0XHRjaWRWMFRvVjFCYXNlMzIsXHJcblx0fSxcclxuXHJcblx0LyoqXHJcblx0KiBEZWNvZGUgYSBDb250ZW50IEhhc2guXHJcblx0KiBAcGFyYW0ge3N0cmluZ30gaGFzaCBhbiBoZXggc3RyaW5nIGNvbnRhaW5pbmcgYSBjb250ZW50IGhhc2hcclxuXHQqIEByZXR1cm4ge3N0cmluZ30gdGhlIGRlY29kZWQgY29udGVudFxyXG5cdCovXHJcblx0ZGVjb2RlOiBmdW5jdGlvbiAoY29udGVudEhhc2gpIHtcclxuXHRcdGNvbnN0IGJ1ZmZlciA9IGhleFN0cmluZ1RvQnVmZmVyKGNvbnRlbnRIYXNoKTtcclxuXHRcdGNvbnN0IGNvZGVjID0gbXVsdGlDLmdldENvZGVjKGJ1ZmZlcik7XHJcblx0XHRjb25zdCB2YWx1ZSA9IG11bHRpQy5ybVByZWZpeChidWZmZXIpO1xyXG5cdFx0bGV0IHByb2ZpbGUgPSBwcm9maWxlc1tjb2RlY107XHJcblx0XHRpZiAoIXByb2ZpbGUpIHByb2ZpbGUgPSBwcm9maWxlc1snZGVmYXVsdCddO1xyXG5cdFx0cmV0dXJuIHByb2ZpbGUuZGVjb2RlKHZhbHVlKTtcclxuXHR9LFxyXG5cclxuXHQvKipcclxuXHQqIEVuY29kZSBhbiBJUEZTIGFkZHJlc3MgaW50byBhIGNvbnRlbnQgaGFzaFxyXG5cdCogQHBhcmFtIHtzdHJpbmd9IGlwZnNIYXNoIHN0cmluZyBjb250YWluaW5nIGFuIElQRlMgYWRkcmVzc1xyXG5cdCogQHJldHVybiB7c3RyaW5nfSB0aGUgcmVzdWx0aW5nIGNvbnRlbnQgaGFzaFxyXG5cdCovXHJcblx0ZnJvbUlwZnM6IGZ1bmN0aW9uIChpcGZzSGFzaCkge1xyXG5cdFx0cmV0dXJuIHRoaXMuZW5jb2RlKCdpcGZzLW5zJywgaXBmc0hhc2gpO1xyXG5cdH0sXHJcblxyXG5cdC8qKlxyXG5cdCogRW5jb2RlIGEgU3dhcm0gYWRkcmVzcyBpbnRvIGEgY29udGVudCBoYXNoXHJcblx0KiBAcGFyYW0ge3N0cmluZ30gc3dhcm1IYXNoIHN0cmluZyBjb250YWluaW5nIGEgU3dhcm0gYWRkcmVzc1xyXG5cdCogQHJldHVybiB7c3RyaW5nfSB0aGUgcmVzdWx0aW5nIGNvbnRlbnQgaGFzaFxyXG5cdCovXHJcblx0ZnJvbVN3YXJtOiBmdW5jdGlvbiAoc3dhcm1IYXNoKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5lbmNvZGUoJ3N3YXJtLW5zJywgc3dhcm1IYXNoKTtcclxuXHR9LFxyXG5cclxuXHQvKipcclxuXHQqIEdlbmVyYWwgcHVycG9zZSBlbmNvZGluZyBmdW5jdGlvblxyXG4gICogQHBhcmFtIHtzdHJpbmd9IGNvZGVjIFxyXG4gICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFxyXG4gICovXHJcblx0ZW5jb2RlOiBmdW5jdGlvbiAoY29kZWMsIHZhbHVlKSB7XHJcblx0XHRsZXQgcHJvZmlsZSA9IHByb2ZpbGVzW2NvZGVjXTtcclxuXHRcdGlmICghcHJvZmlsZSkgcHJvZmlsZSA9IHByb2ZpbGVzWydkZWZhdWx0J107XHJcblx0XHRjb25zdCBlbmNvZGVkVmFsdWUgPSBwcm9maWxlLmVuY29kZSh2YWx1ZSk7XHJcblx0XHRyZXR1cm4gbXVsdGlDLmFkZFByZWZpeChjb2RlYywgZW5jb2RlZFZhbHVlKS50b1N0cmluZygnaGV4Jyk7XHJcblx0fSxcclxuXHJcblx0LyoqXHJcblx0KiBFeHRyYWN0IHRoZSBjb2RlYyBvZiBhIGNvbnRlbnQgaGFzaFxyXG5cdCogQHBhcmFtIHtzdHJpbmd9IGhhc2ggaGV4IHN0cmluZyBjb250YWluaW5nIGEgY29udGVudCBoYXNoXHJcblx0KiBAcmV0dXJuIHtzdHJpbmd9IHRoZSBleHRyYWN0ZWQgY29kZWNcclxuXHQqL1xyXG5cdGdldENvZGVjOiBmdW5jdGlvbiAoaGFzaCkge1xyXG5cdFx0bGV0IGJ1ZmZlciA9IGhleFN0cmluZ1RvQnVmZmVyKGhhc2gpO1xyXG5cdFx0cmV0dXJuIG11bHRpQy5nZXRDb2RlYyhidWZmZXIpO1xyXG5cdH0sXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/content-hash/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/content-hash/src/profiles.js":
/*!***************************************************!*\
  !*** ./node_modules/content-hash/src/profiles.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/*\r\n\tISC License\r\n\r\n\tCopyright (c) 2019, Pierre-Louis Despaigne\r\n\r\n\tPermission to use, copy, modify, and/or distribute this software for any\r\n\tpurpose with or without fee is hereby granted, provided that the above\r\n\tcopyright notice and this permission notice appear in all copies.\r\n\r\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nconst CID = __webpack_require__(/*! cids */ \"(ssr)/./node_modules/cids/src/index.js\");\r\nconst multiH = __webpack_require__(/*! multihashes */ \"(ssr)/./node_modules/multihashes/src/index.js\");\r\n\r\n/**\r\n * Convert an hexadecimal string to a Buffer, the string can start with or without '0x'\r\n * @param {string} hex an hexadecimal value\r\n * @return {Buffer} the resulting Buffer\r\n */\r\nconst hexStringToBuffer = (hex) => {\r\n\tlet prefix = hex.slice(0, 2);\r\n\tlet value = hex.slice(2);\r\n\tlet res = '';\r\n\tif (prefix === '0x') res = value;\r\n\telse res = hex;\r\n\treturn multiH.fromHexString(res);\r\n}\r\n\r\n/**\r\n* list of known encoding,\r\n* encoding should be a function that takes a `string` input,\r\n* and return a `Buffer` result\r\n*/\r\nconst encodes = {\r\n  /**\r\n  * @param {string} value\r\n  * @return {Buffer}\r\n  */\r\n  swarm: (value) => {\r\n    const multihash = multiH.encode(hexStringToBuffer(value), 'keccak-256');\r\n\t\treturn new CID(1, 'swarm-manifest', multihash).buffer;\r\n  },\r\n  /**\r\n  * @param {string} value\r\n  * @return {Buffer}\r\n  */\r\n  ipfs: (value) => {\r\n    const multihash = multiH.fromB58String(value);\r\n    return new CID(1, 'dag-pb', multihash).buffer;\r\n  },\r\n  /**\r\n  * @param {string} value\r\n  * @return {Buffer}\r\n  */\r\n  utf8: (value) => {\r\n    return Buffer.from(value, 'utf8');\r\n  },\r\n};\r\n\r\n/** \r\n* list of known decoding,\r\n* decoding should be a function that takes a `Buffer` input,\r\n* and return a `string` result\r\n*/\r\nconst decodes = {\r\n  /**\r\n  * @param {Buffer} value \r\n  */\r\n  hexMultiHash: (value) => {\r\n    const cid = new CID(value);\r\n    return multiH.decode(cid.multihash).digest.toString('hex');\r\n  },\r\n  /**\r\n  * @param {Buffer} value \r\n  */\r\n  b58MultiHash: (value) => {\r\n    const cid = new CID(value);\r\n    return multiH.toB58String(cid.multihash);\r\n  },\r\n  /**\r\n  * @param {Buffer} value \r\n  */\r\n  utf8: (value) => {\r\n    return value.toString('utf8');\r\n  },\r\n};\r\n\r\n/**\r\n* list of known encoding/decoding for a given codec,\r\n* `encode` should be chosen among the `encodes` functions\r\n* `decode` should be chosen among the `decodes` functions\r\n*/\r\nconst profiles = {\r\n  'swarm-ns': {\r\n    encode: encodes.swarm,\r\n    decode: decodes.hexMultiHash,\r\n  },\r\n  'ipfs-ns': {\r\n    encode: encodes.ipfs,\r\n    decode: decodes.b58MultiHash,\r\n  },\r\n  'ipns-ns': {\r\n    encode: encodes.ipfs,\r\n    decode: decodes.b58MultiHash,\r\n  },\r\n  'default': {\r\n    encode: encodes.utf8,\r\n    decode: decodes.utf8,\r\n  },\r\n};\r\n\r\nexports.hexStringToBuffer = hexStringToBuffer;\r\nexports.profiles = profiles;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udGVudC1oYXNoL3NyYy9wcm9maWxlcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFPLENBQUMsb0RBQU07QUFDMUIsZUFBZSxtQkFBTyxDQUFDLGtFQUFhO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxZQUFZLFFBQVE7QUFDcEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsWUFBWSxRQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsZ0JBQWdCIiwic291cmNlcyI6WyIvVXNlcnMvcGFuemEvRG9jdW1lbnRzL1BlcnNvbmFsUHJvamVjdHMvcHJlZGlrL25vZGVfbW9kdWxlcy9jb250ZW50LWhhc2gvc3JjL3Byb2ZpbGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcblx0SVNDIExpY2Vuc2VcclxuXHJcblx0Q29weXJpZ2h0IChjKSAyMDE5LCBQaWVycmUtTG91aXMgRGVzcGFpZ25lXHJcblxyXG5cdFBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5cdHB1cnBvc2Ugd2l0aCBvciB3aXRob3V0IGZlZSBpcyBoZXJlYnkgZ3JhbnRlZCwgcHJvdmlkZWQgdGhhdCB0aGUgYWJvdmVcclxuXHRjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIGFwcGVhciBpbiBhbGwgY29waWVzLlxyXG5cclxuXHRUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFU1xyXG5cdFdJVEggUkVHQVJEIFRPIFRISVMgU09GVFdBUkUgSU5DTFVESU5HIEFMTCBJTVBMSUVEIFdBUlJBTlRJRVMgT0ZcclxuXHRNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1IgQkUgTElBQkxFIEZPUlxyXG5cdEFOWSBTUEVDSUFMLCBESVJFQ1QsIElORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVNcclxuXHRXSEFUU09FVkVSIFJFU1VMVElORyBGUk9NIExPU1MgT0YgVVNFLCBEQVRBIE9SIFBST0ZJVFMsIFdIRVRIRVIgSU4gQU5cclxuXHRBQ1RJT04gT0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0UgT1IgT1RIRVIgVE9SVElPVVMgQUNUSU9OLCBBUklTSU5HIE9VVCBPRlxyXG5cdE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SIFBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbiovXHJcblxyXG5jb25zdCBDSUQgPSByZXF1aXJlKCdjaWRzJyk7XHJcbmNvbnN0IG11bHRpSCA9IHJlcXVpcmUoJ211bHRpaGFzaGVzJyk7XHJcblxyXG4vKipcclxuICogQ29udmVydCBhbiBoZXhhZGVjaW1hbCBzdHJpbmcgdG8gYSBCdWZmZXIsIHRoZSBzdHJpbmcgY2FuIHN0YXJ0IHdpdGggb3Igd2l0aG91dCAnMHgnXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBoZXggYW4gaGV4YWRlY2ltYWwgdmFsdWVcclxuICogQHJldHVybiB7QnVmZmVyfSB0aGUgcmVzdWx0aW5nIEJ1ZmZlclxyXG4gKi9cclxuY29uc3QgaGV4U3RyaW5nVG9CdWZmZXIgPSAoaGV4KSA9PiB7XHJcblx0bGV0IHByZWZpeCA9IGhleC5zbGljZSgwLCAyKTtcclxuXHRsZXQgdmFsdWUgPSBoZXguc2xpY2UoMik7XHJcblx0bGV0IHJlcyA9ICcnO1xyXG5cdGlmIChwcmVmaXggPT09ICcweCcpIHJlcyA9IHZhbHVlO1xyXG5cdGVsc2UgcmVzID0gaGV4O1xyXG5cdHJldHVybiBtdWx0aUguZnJvbUhleFN0cmluZyhyZXMpO1xyXG59XHJcblxyXG4vKipcclxuKiBsaXN0IG9mIGtub3duIGVuY29kaW5nLFxyXG4qIGVuY29kaW5nIHNob3VsZCBiZSBhIGZ1bmN0aW9uIHRoYXQgdGFrZXMgYSBgc3RyaW5nYCBpbnB1dCxcclxuKiBhbmQgcmV0dXJuIGEgYEJ1ZmZlcmAgcmVzdWx0XHJcbiovXHJcbmNvbnN0IGVuY29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWVcclxuICAqIEByZXR1cm4ge0J1ZmZlcn1cclxuICAqL1xyXG4gIHN3YXJtOiAodmFsdWUpID0+IHtcclxuICAgIGNvbnN0IG11bHRpaGFzaCA9IG11bHRpSC5lbmNvZGUoaGV4U3RyaW5nVG9CdWZmZXIodmFsdWUpLCAna2VjY2FrLTI1NicpO1xyXG5cdFx0cmV0dXJuIG5ldyBDSUQoMSwgJ3N3YXJtLW1hbmlmZXN0JywgbXVsdGloYXNoKS5idWZmZXI7XHJcbiAgfSxcclxuICAvKipcclxuICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gICogQHJldHVybiB7QnVmZmVyfVxyXG4gICovXHJcbiAgaXBmczogKHZhbHVlKSA9PiB7XHJcbiAgICBjb25zdCBtdWx0aWhhc2ggPSBtdWx0aUguZnJvbUI1OFN0cmluZyh2YWx1ZSk7XHJcbiAgICByZXR1cm4gbmV3IENJRCgxLCAnZGFnLXBiJywgbXVsdGloYXNoKS5idWZmZXI7XHJcbiAgfSxcclxuICAvKipcclxuICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxyXG4gICogQHJldHVybiB7QnVmZmVyfVxyXG4gICovXHJcbiAgdXRmODogKHZhbHVlKSA9PiB7XHJcbiAgICByZXR1cm4gQnVmZmVyLmZyb20odmFsdWUsICd1dGY4Jyk7XHJcbiAgfSxcclxufTtcclxuXHJcbi8qKiBcclxuKiBsaXN0IG9mIGtub3duIGRlY29kaW5nLFxyXG4qIGRlY29kaW5nIHNob3VsZCBiZSBhIGZ1bmN0aW9uIHRoYXQgdGFrZXMgYSBgQnVmZmVyYCBpbnB1dCxcclxuKiBhbmQgcmV0dXJuIGEgYHN0cmluZ2AgcmVzdWx0XHJcbiovXHJcbmNvbnN0IGRlY29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgKiBAcGFyYW0ge0J1ZmZlcn0gdmFsdWUgXHJcbiAgKi9cclxuICBoZXhNdWx0aUhhc2g6ICh2YWx1ZSkgPT4ge1xyXG4gICAgY29uc3QgY2lkID0gbmV3IENJRCh2YWx1ZSk7XHJcbiAgICByZXR1cm4gbXVsdGlILmRlY29kZShjaWQubXVsdGloYXNoKS5kaWdlc3QudG9TdHJpbmcoJ2hleCcpO1xyXG4gIH0sXHJcbiAgLyoqXHJcbiAgKiBAcGFyYW0ge0J1ZmZlcn0gdmFsdWUgXHJcbiAgKi9cclxuICBiNThNdWx0aUhhc2g6ICh2YWx1ZSkgPT4ge1xyXG4gICAgY29uc3QgY2lkID0gbmV3IENJRCh2YWx1ZSk7XHJcbiAgICByZXR1cm4gbXVsdGlILnRvQjU4U3RyaW5nKGNpZC5tdWx0aWhhc2gpO1xyXG4gIH0sXHJcbiAgLyoqXHJcbiAgKiBAcGFyYW0ge0J1ZmZlcn0gdmFsdWUgXHJcbiAgKi9cclxuICB1dGY4OiAodmFsdWUpID0+IHtcclxuICAgIHJldHVybiB2YWx1ZS50b1N0cmluZygndXRmOCcpO1xyXG4gIH0sXHJcbn07XHJcblxyXG4vKipcclxuKiBsaXN0IG9mIGtub3duIGVuY29kaW5nL2RlY29kaW5nIGZvciBhIGdpdmVuIGNvZGVjLFxyXG4qIGBlbmNvZGVgIHNob3VsZCBiZSBjaG9zZW4gYW1vbmcgdGhlIGBlbmNvZGVzYCBmdW5jdGlvbnNcclxuKiBgZGVjb2RlYCBzaG91bGQgYmUgY2hvc2VuIGFtb25nIHRoZSBgZGVjb2Rlc2AgZnVuY3Rpb25zXHJcbiovXHJcbmNvbnN0IHByb2ZpbGVzID0ge1xyXG4gICdzd2FybS1ucyc6IHtcclxuICAgIGVuY29kZTogZW5jb2Rlcy5zd2FybSxcclxuICAgIGRlY29kZTogZGVjb2Rlcy5oZXhNdWx0aUhhc2gsXHJcbiAgfSxcclxuICAnaXBmcy1ucyc6IHtcclxuICAgIGVuY29kZTogZW5jb2Rlcy5pcGZzLFxyXG4gICAgZGVjb2RlOiBkZWNvZGVzLmI1OE11bHRpSGFzaCxcclxuICB9LFxyXG4gICdpcG5zLW5zJzoge1xyXG4gICAgZW5jb2RlOiBlbmNvZGVzLmlwZnMsXHJcbiAgICBkZWNvZGU6IGRlY29kZXMuYjU4TXVsdGlIYXNoLFxyXG4gIH0sXHJcbiAgJ2RlZmF1bHQnOiB7XHJcbiAgICBlbmNvZGU6IGVuY29kZXMudXRmOCxcclxuICAgIGRlY29kZTogZGVjb2Rlcy51dGY4LFxyXG4gIH0sXHJcbn07XHJcblxyXG5leHBvcnRzLmhleFN0cmluZ1RvQnVmZmVyID0gaGV4U3RyaW5nVG9CdWZmZXI7XHJcbmV4cG9ydHMucHJvZmlsZXMgPSBwcm9maWxlczsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/content-hash/src/profiles.js\n");

/***/ })

};
;